(()=>{"use strict";var e=(()=>(function(e){e[e.PERMUTATION_ID_LOBYTE=0]="PERMUTATION_ID_LOBYTE",e[e.PERMUTATION_ID_HIBYTE=1]="PERMUTATION_ID_HIBYTE",e[e.USED_MOD1=2]="USED_MOD1",e[e.USED_MOD2=3]="USED_MOD2",e[e.USED_MOD3=4]="USED_MOD3",e[e.USED_MOD4=5]="USED_MOD4",e[e.USED_MOD5=6]="USED_MOD5",e[e.WIDTH=7]="WIDTH"}(e||(e={})),e))(),t=(()=>(function(e){e[e.PowerfulFriends=0]="PowerfulFriends",e[e.RadiantLight=1]="RadiantLight",e[e.ProtectiveLight=100]="ProtectiveLight",e[e.ExtraReserves=101]="ExtraReserves",e[e.PrecicelyCharged=102]="PrecicelyCharged",e[e.StacksOnStacks=103]="StacksOnStacks",e[e.PrecisionCharge=104]="PrecisionCharge",e[e.SurpriseAttack=105]="SurpriseAttack",e[e.EnergyConverter=106]="EnergyConverter",e[e.ChargeHarvester=107]="ChargeHarvester",e[e.WhisperOfDurance=1e3]="WhisperOfDurance",e[e.WhisperOfChains=1001]="WhisperOfChains",e[e.WhisperOfConduction=1002]="WhisperOfConduction",e[e.WhisperOfShards=1003]="WhisperOfShards",e[e.WhisperOfHedrons=1100]="WhisperOfHedrons",e[e.WhisperOfBonds=1101]="WhisperOfBonds",e[e.WhisperOfHunger=1102]="WhisperOfHunger",e[e.WhisperOfFractures=1103]="WhisperOfFractures"}(t||(t={})),t))(),s=(()=>(function(e){e[e.CombatStyleMod=0]="CombatStyleMod",e[e.Stasis=1]="Stasis"}(s||(s={})),s))(),i=(()=>(function(e){e[e.NONE=0]="NONE",e[e.MINOR_MOBILITY=1]="MINOR_MOBILITY",e[e.MAJOR_MOBILITY=2]="MAJOR_MOBILITY",e[e.MINOR_RESILIENCE=3]="MINOR_RESILIENCE",e[e.MAJOR_RESILIENCE=4]="MAJOR_RESILIENCE",e[e.MINOR_RECOVERY=5]="MINOR_RECOVERY",e[e.MAJOR_RECOVERY=6]="MAJOR_RECOVERY",e[e.MINOR_DISCIPLINE=7]="MINOR_DISCIPLINE",e[e.MAJOR_DISCIPLINE=8]="MAJOR_DISCIPLINE",e[e.MINOR_INTELLECT=9]="MINOR_INTELLECT",e[e.MAJOR_INTELLECT=10]="MAJOR_INTELLECT",e[e.MINOR_STRENGTH=11]="MINOR_STRENGTH",e[e.MAJOR_STRENGTH=12]="MAJOR_STRENGTH"}(i||(i={})),i))(),r=(()=>(function(e){e[e.Mobility=0]="Mobility",e[e.Resilience=1]="Resilience",e[e.Recovery=2]="Recovery",e[e.Discipline=3]="Discipline",e[e.Intellect=4]="Intellect",e[e.Strength=5]="Strength"}(r||(r={})),r))(),a=(()=>(function(e){e[e.ClassAbilityRegenerationStat=10]="ClassAbilityRegenerationStat"}(a||(a={})),a))();const n={[t.PowerfulFriends]:{id:t.PowerfulFriends,name:"Powerful Friends",type:s.CombatStyleMod,bonus:[{stat:r.Mobility,value:20}]},[t.RadiantLight]:{id:t.RadiantLight,name:"Radiant Light",type:s.CombatStyleMod,bonus:[{stat:r.Strength,value:20}]},[t.ProtectiveLight]:{id:t.ProtectiveLight,name:"Protective Light",type:s.CombatStyleMod,bonus:[{stat:r.Strength,value:-10}]},[t.ExtraReserves]:{id:t.ExtraReserves,name:"Extra Reserves",type:s.CombatStyleMod,bonus:[{stat:r.Intellect,value:-10}]},[t.PrecicelyCharged]:{id:t.PrecicelyCharged,name:"Precicely Charged",type:s.CombatStyleMod,bonus:[{stat:r.Discipline,value:-10}]},[t.StacksOnStacks]:{id:t.StacksOnStacks,name:"Stacks on Stacks",type:s.CombatStyleMod,bonus:[{stat:r.Discipline,value:-10}]},[t.PrecisionCharge]:{id:t.PrecisionCharge,name:"Precision Charge",type:s.CombatStyleMod,bonus:[{stat:r.Strength,value:-10}]},[t.SurpriseAttack]:{id:t.SurpriseAttack,name:"Surprise Attack",type:s.CombatStyleMod,bonus:[{stat:r.Intellect,value:-10}]},[t.EnergyConverter]:{id:t.EnergyConverter,name:"Energy Converter",type:s.CombatStyleMod,bonus:[{stat:r.Discipline,value:-10}]},[t.ChargeHarvester]:{id:t.ChargeHarvester,name:"Charge Harvester",type:s.CombatStyleMod,bonus:[{stat:a.ClassAbilityRegenerationStat,value:-10}]},[t.WhisperOfDurance]:{id:t.WhisperOfDurance,name:"Whisper Of Durance",type:s.Stasis,bonus:[{stat:r.Strength,value:10}]},[t.WhisperOfChains]:{id:t.WhisperOfChains,name:"Whisper Of Chains",type:s.Stasis,bonus:[{stat:r.Recovery,value:10}]},[t.WhisperOfShards]:{id:t.WhisperOfShards,name:"Whisper Of Shards",type:s.Stasis,bonus:[{stat:r.Resilience,value:10}]},[t.WhisperOfConduction]:{id:t.WhisperOfConduction,name:"Whisper Of Conduction",type:s.Stasis,bonus:[{stat:r.Resilience,value:10},{stat:r.Intellect,value:10}]},[t.WhisperOfBonds]:{id:t.WhisperOfBonds,name:"Whisper of Bonds",type:s.Stasis,bonus:[{stat:r.Discipline,value:-10},{stat:r.Intellect,value:-10}]},[t.WhisperOfHedrons]:{id:t.WhisperOfHedrons,name:"Whisper of Hedrons",type:s.Stasis,bonus:[{stat:r.Strength,value:-10}]},[t.WhisperOfFractures]:{id:t.WhisperOfFractures,name:"Whisper of Fractures",type:s.Stasis,bonus:[{stat:r.Discipline,value:-10}]},[t.WhisperOfHunger]:{id:t.WhisperOfHunger,name:"Whisper of Hunger",type:s.Stasis,bonus:[{stat:r.Mobility,value:-10},{stat:r.Recovery,value:-10}]}};addEventListener("message",({data:t})=>{const s=new Uint32Array(t.permutations),o=t.startPosition,l=t.config;console.time(`WebWorker: Results Builder Helper ${o}`);let h=l.characterClass,c=[0,0,0,0,0,0],u=new Set,O=new Set,d=[];for(let e=0;e<s.length;e+=12){const t=s.subarray(e,e+12);if(l.selectedExoticHash>0&&t[10]!=l.selectedExoticHash)continue;if(-1==l.selectedExoticHash&&0!=t[10])continue;if(l.onlyUseMasterworkedItems&&15!=t[11])continue;let f=[t[4]+2,t[5]+2,t[6]+2,t[7]+2,t[8]+2,t[9]+2];if(l.assumeMasterworked)for(let e=0;e<6;e++)f[e]+=8;else for(let e=0;e<4;e++)if((t[11]&1<<e)>0)for(let t=0;t<6;t++)f[t]+=2;for(const e of l.enabledMods)for(const t of n[e].bonus)switch(t.stat){case a.ClassAbilityRegenerationStat:f[[1,0,3][h]]+=t.value;break;default:f[t.stat]+=t.value}let S=f.map((e,t)=>Math.max(0,10*l.minimumStatTier[t]-e)).reduce((e,t,s)=>{if(0==t)return e;let i=t%10>0&&t%10<=5?1:0,r=Math.ceil(Math.max(0,t-5*i)/10);i&&e.push(1+2*s);for(let a=0;a<r;a++)e.push(2*s+1+1);return e},[]);if(S.length>l.maximumStatMods)continue;if(l.tryLimitWastedStats){let e=[(f[r.Mobility]+(S.indexOf(i.MINOR_MOBILITY)>-1?5:0))%10,(f[r.Resilience]+(S.indexOf(i.MINOR_RESILIENCE)>-1?5:0))%10,(f[r.Recovery]+(S.indexOf(i.MINOR_RECOVERY)>-1?5:0))%10,(f[r.Discipline]+(S.indexOf(i.MINOR_DISCIPLINE)>-1?5:0))%10,(f[r.Intellect]+(S.indexOf(i.MINOR_INTELLECT)>-1?5:0))%10,(f[r.Strength]+(S.indexOf(i.MINOR_STRENGTH)>-1?5:0))%10].map((e,t)=>[e,t]).sort((e,t)=>t[0]-e[0]);if(S.length<l.maximumStatMods)for(let t=S.length;t<l.maximumStatMods;t++){const t=e.filter(e=>5==e[0])[0];if(!t)break;t[0]=0,S.push(1+2*t[1])}if(l.onlyShowResultsWithNoWastedStats&&e.reduce((e,t)=>e+t[0],0)>0)continue}for(let e=0;e<6;e++){let t=Math.min(10,Math.floor(f[e]/10)+(l.maximumStatMods-S.length)+S.filter(t=>Math.floor((t-1)/2)==e).length);c[e]<t&&(c[e]=t)}let I=l.maximumStatMods-S.length;if(I>=0){let e=f.map((e,t)=>e+10*S.filter(e=>Math.floor((e-1)/2)==t).length).map((e,t)=>[Math.max(0,Math.ceil((100-e)/10)),t]).sort((e,t)=>e[0]-t[0]);for(let r in e)for(;I>0&&e[r][0]>0;)I--,e[r][0]--;const t=e.filter(e=>0==e[0]);let s=t.length,i=t.reduce((e,t)=>e+(1<<t[1]),0);3==s&&u.add(i),4==s&&O.add(i)}d.push([o+e/12,...S])}const f=new ArrayBuffer(e.WIDTH*d.length*2),S=new Uint16Array(f);for(let i=0;i<d.length;i++){S[i*e.WIDTH+e.PERMUTATION_ID_LOBYTE]=65535&d[i][0],S[i*e.WIDTH+e.PERMUTATION_ID_HIBYTE]=(-65536&d[i][0])>>16;for(let t=0;t<6;t++)S[i*e.WIDTH+e.USED_MOD1+t]=d[i][t+1]}console.timeEnd(`WebWorker: Results Builder Helper ${o}`),postMessage({buffer:f,maximumPossibleTiers:c,statCombo3x100:u,statCombo4x100:O},[f])})})();