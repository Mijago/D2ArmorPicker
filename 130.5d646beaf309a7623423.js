(()=>{"use strict";var e=(()=>(function(e){e[e.PowerfulFriends=0]="PowerfulFriends",e[e.RadiantLight=1]="RadiantLight",e[e.ProtectiveLight=100]="ProtectiveLight",e[e.ExtraReserves=101]="ExtraReserves",e[e.PrecicelyCharged=102]="PrecicelyCharged",e[e.StacksOnStacks=103]="StacksOnStacks",e[e.PrecisionCharge=104]="PrecisionCharge",e[e.SurpriseAttack=105]="SurpriseAttack",e[e.EnergyConverter=106]="EnergyConverter",e[e.ChargeHarvester=107]="ChargeHarvester",e[e.WhisperOfDurance=1e3]="WhisperOfDurance",e[e.WhisperOfChains=1001]="WhisperOfChains",e[e.WhisperOfConduction=1002]="WhisperOfConduction",e[e.WhisperOfShards=1003]="WhisperOfShards",e[e.WhisperOfHedrons=1100]="WhisperOfHedrons",e[e.WhisperOfBonds=1101]="WhisperOfBonds",e[e.WhisperOfHunger=1102]="WhisperOfHunger",e[e.WhisperOfFractures=1103]="WhisperOfFractures"}(e||(e={})),e))(),t=(()=>(function(e){e[e.CombatStyleMod=0]="CombatStyleMod",e[e.Stasis=1]="Stasis"}(t||(t={})),t))(),s=(()=>(function(e){e[e.Mobility=0]="Mobility",e[e.Resilience=1]="Resilience",e[e.Recovery=2]="Recovery",e[e.Discipline=3]="Discipline",e[e.Intellect=4]="Intellect",e[e.Strength=5]="Strength"}(s||(s={})),s))(),r=(()=>(function(e){e[e.ClassAbilityRegenerationStat=10]="ClassAbilityRegenerationStat"}(r||(r={})),r))();const a={[e.PowerfulFriends]:{id:e.PowerfulFriends,name:"Powerful Friends",type:t.CombatStyleMod,bonus:[{stat:s.Mobility,value:20}]},[e.RadiantLight]:{id:e.RadiantLight,name:"Radiant Light",type:t.CombatStyleMod,bonus:[{stat:s.Strength,value:20}]},[e.ProtectiveLight]:{id:e.ProtectiveLight,name:"Protective Light",type:t.CombatStyleMod,bonus:[{stat:s.Strength,value:-10}]},[e.ExtraReserves]:{id:e.ExtraReserves,name:"Extra Reserves",type:t.CombatStyleMod,bonus:[{stat:s.Intellect,value:-10}]},[e.PrecicelyCharged]:{id:e.PrecicelyCharged,name:"Precicely Charged",type:t.CombatStyleMod,bonus:[{stat:s.Discipline,value:-10}]},[e.StacksOnStacks]:{id:e.StacksOnStacks,name:"Stacks on Stacks",type:t.CombatStyleMod,bonus:[{stat:s.Discipline,value:-10}]},[e.PrecisionCharge]:{id:e.PrecisionCharge,name:"Precision Charge",type:t.CombatStyleMod,bonus:[{stat:s.Strength,value:-10}]},[e.SurpriseAttack]:{id:e.SurpriseAttack,name:"Surprise Attack",type:t.CombatStyleMod,bonus:[{stat:s.Intellect,value:-10}]},[e.EnergyConverter]:{id:e.EnergyConverter,name:"Energy Converter",type:t.CombatStyleMod,bonus:[{stat:s.Discipline,value:-10}]},[e.ChargeHarvester]:{id:e.ChargeHarvester,name:"Charge Harvester",type:t.CombatStyleMod,bonus:[{stat:r.ClassAbilityRegenerationStat,value:-10}]},[e.WhisperOfDurance]:{id:e.WhisperOfDurance,name:"Whisper Of Durance",type:t.Stasis,bonus:[{stat:s.Strength,value:10}]},[e.WhisperOfChains]:{id:e.WhisperOfChains,name:"Whisper Of Chains",type:t.Stasis,bonus:[{stat:s.Recovery,value:10}]},[e.WhisperOfShards]:{id:e.WhisperOfShards,name:"Whisper Of Shards",type:t.Stasis,bonus:[{stat:s.Resilience,value:10}]},[e.WhisperOfConduction]:{id:e.WhisperOfConduction,name:"Whisper Of Conduction",type:t.Stasis,bonus:[{stat:s.Resilience,value:10},{stat:s.Intellect,value:10}]},[e.WhisperOfBonds]:{id:e.WhisperOfBonds,name:"Whisper of Bonds",type:t.Stasis,bonus:[{stat:s.Discipline,value:-10},{stat:s.Intellect,value:-10}]},[e.WhisperOfHedrons]:{id:e.WhisperOfHedrons,name:"Whisper of Hedrons",type:t.Stasis,bonus:[{stat:s.Strength,value:-10}]},[e.WhisperOfFractures]:{id:e.WhisperOfFractures,name:"Whisper of Fractures",type:t.Stasis,bonus:[{stat:s.Discipline,value:-10}]},[e.WhisperOfHunger]:{id:e.WhisperOfHunger,name:"Whisper of Hunger",type:t.Stasis,bonus:[{stat:s.Mobility,value:-10},{stat:s.Recovery,value:-10}]}};addEventListener("message",({data:e})=>{let t=Date.now();console.debug("START results builder",t);let s=e.currentClass,i=e.config;console.log("V config",i),console.log("V mods",i.enabledMods),e=e.permutations,console.log("RECEIVED DATA",e);let n=[],o=new Uint32Array(e),l=[0,0,0,0,0,0],u=new Set,h=new Set;for(let g=0;g<o.length;g+=12){const e=o.subarray(g,g+12);if(i.selectedExoticHash>0&&e[10]!=i.selectedExoticHash)continue;if(-1==i.selectedExoticHash&&0!=e[10])continue;let t=[e[4]+2,e[5]+2,e[6]+2,e[7]+2,e[8]+2,e[9]+2];if(i.assumeMasterworked)for(let s=0;s<6;s++)t[s]+=8;else for(let s=0;s<4;s++)if((e[11]&1<<s)>0)for(let e=0;e<6;e++)t[e]+=2;for(const n of i.enabledMods)for(const e of a[n].bonus)switch(e.stat){case r.ClassAbilityRegenerationStat:t[[1,0,3][s]]+=e.value;break;default:t[e.stat]+=e.value}let c=t.map((e,t)=>Math.max(0,10*i.minimumStatTier[t]-e)).reduce((e,t,s)=>{if(0==t)return e;let r=t%10>0&&t%10<=5?1:0,a=Math.ceil(Math.max(0,t-5*r)/10);r&&e.push(1+2*s);for(let i=0;i<a;i++)e.push(2*s+1+1);return e},[]);if(c.length>i.maximumStatMods)continue;for(let s=0;s<6;s++){let e=Math.min(10,Math.floor(t[s]/10)+(i.maximumStatMods-c.length)+c.filter(e=>Math.floor((e-1)/2)==s).length);l[s]<e&&(l[s]=e)}let d=i.maximumStatMods-c.length;if(d>=0){let e=t.map((e,t)=>e+10*c.filter(e=>Math.floor((e-1)/2)==t).length).map((e,t)=>[Math.max(0,Math.ceil((100-e)/10)),t]).sort((e,t)=>e[0]-t[0]);for(let t in e)for(;d>0&&e[t][0]>0;)d--,e[t][0]--;let s=e.filter(e=>0==e[0]).length,r=e.filter(e=>0==e[0]).map(e=>e[1]).reduce((e,t)=>e+(1<<t),0);3==s&&u.add(r),4==s&&h.add(r)}n.push([g/12,...c])}let c=7*n.length*2;const d=new ArrayBuffer(c),f=new Uint16Array(d);for(let r=0;r<n.length;r++){f[7*r]=65535&n[r][0],f[7*r+1]=(-65536&n[r][0])>>16;for(let e=0;e<6;e++)f[7*r+e+2]=n[r][e+1]}console.log(`Sending ${f.length/7} results in ${c} bytes.`,f);let p=Date.now();console.debug("END results builder",p,p-t),postMessage({view:f.buffer,allArmorPermutations:o.buffer,maximumPossibleTiers:l,statCombo3x100:Array.from(u).sort(),statCombo4x100:Array.from(h).sort()},[f.buffer,o.buffer])})})();