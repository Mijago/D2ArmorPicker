{"version":3,"file":"692.36813d3d7159e2f2.js","mappings":"2FAwBO,MAAMA,EAAyD,CAEpE,CAACC,IAAaC,kBAAmB,CAC/BC,GAAIF,IAAaC,iBACjBE,KAAM,qBACNC,YACE,mHACFC,KAAMC,IAAaC,OACnBC,MAAO,CAAC,CAAEC,KAAMC,KAAUC,SAAUC,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAagB,iBAAkB,CAC9Bd,GAAIF,IAAagB,gBACjBb,KAAM,oBACNC,YACE,wGACFC,KAAMC,IAAaC,OACnBC,MAAO,CAAC,CAAEC,KAAMC,KAAUO,SAAUL,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,WAER,CAACf,IAAakB,qBAAsB,CAClChB,GAAIF,IAAakB,oBACjBf,KAAM,wBACNC,YAAa,+CACbC,KAAMC,IAAaC,OACnBC,MAAO,CACL,CAAEC,KAAMC,KAAUS,UAAWP,MAAO,IACpC,CAAEH,KAAMC,KAAUU,WAAYR,MAAO,KAEvCC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAaqB,gBAAiB,CAC7BnB,GAAIF,IAAaqB,eACjBlB,KAAM,mBACNC,YAAa,sDACbC,KAAMC,IAAaC,OACnBC,MAAO,CAAC,CAAEC,KAAMC,KAAUS,UAAWP,OAAO,KAC5CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAasB,iBAAkB,CAC9BpB,GAAIF,IAAasB,gBACjBnB,KAAM,oBACNC,YAAa,mEACbC,KAAMC,IAAaC,OACnBC,MAAO,CAAC,CAAEC,KAAMC,KAAUC,SAAUC,OAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAauB,oBAAqB,CACjCrB,GAAIF,IAAauB,mBACjBpB,KAAM,uBACNC,YAAa,4EACbC,KAAMC,IAAaC,OACnBC,MAAO,CAAC,CAAEC,KAAMC,KAAUc,WAAYZ,OAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,WAER,CAACf,IAAayB,kBAAmB,CAC/BvB,GAAIF,IAAayB,iBACjBtB,KAAM,qBACNC,YACE,2HACFC,KAAMC,IAAaC,OACnBC,MAAO,CAAC,CAAEC,KAAMC,KAAUU,WAAYR,MAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,WAER,CAACf,IAAa0B,kBAAmB,CAC/BxB,GAAIF,IAAa0B,iBACjBvB,KAAM,qBACNC,YACE,4HACFC,KAAMC,IAAaC,OACnBC,MAAO,CAAC,CAAEC,KAAMC,KAAUc,WAAYZ,OAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,WAKR,CAACf,IAAa2B,iBAAkB,CAC9BzB,GAAIF,IAAa2B,gBACjBxB,KAAM,oBACNC,YAAa,qDACbC,KAAMC,IAAasB,KACnBpB,MAAO,CAAC,CAAEC,KAAMC,KAAUS,UAAWP,MAAO,KAC5CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAa6B,iBAAkB,CAC9B3B,GAAIF,IAAa6B,gBACjB1B,KAAM,oBACNC,YAAa,sDACbC,KAAMC,IAAasB,KACnBpB,MAAO,CAAC,CAAEC,KAAMC,KAAUC,SAAUC,OAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAa8B,mBAAoB,CAChC5B,GAAIF,IAAa8B,kBACjB3B,KAAM,sBACNC,YACE,4FACFC,KAAMC,IAAasB,KACnBpB,MAAO,CAAC,CAAEC,KAAMsB,KAAiBC,6BAA8BpB,OAAO,KACtEC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAaiC,gBAAiB,CAC7B/B,GAAIF,IAAaiC,eACjB9B,KAAM,mBACNC,YAAa,yEACbC,KAAMC,IAAasB,KACnBpB,MAAO,CAAC,CAAEC,KAAMC,KAAUU,WAAYR,MAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAakC,mBAAoB,CAChChC,GAAIF,IAAakC,kBACjB/B,KAAM,sBACNC,YACE,mMACFC,KAAMC,IAAasB,KACnBpB,MAAO,CAAC,CAAEC,KAAMC,KAAUc,WAAYZ,MAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAamC,gBAAiB,CAC7BjC,GAAIF,IAAamC,eACjBhC,KAAM,mBACNC,YAAa,uEACbC,KAAMC,IAAasB,KACnBpB,MAAO,CACL,CAAEC,KAAMC,KAAU0B,SAAUxB,MAAO,IACnC,CAAEH,KAAMC,KAAUS,UAAWP,MAAO,KAEtCC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAaqC,mBAAoB,CAChCnC,GAAIF,IAAaqC,kBACjBlC,KAAM,sBACNC,YAAa,qCACbC,KAAMC,IAAasB,KACnBpB,MAAO,CAAC,CAAEC,KAAMC,KAAUc,WAAYZ,OAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAasC,mBAAoB,CAChCpC,GAAIF,IAAasC,kBACjBnC,KAAM,sBACNC,YAAa,+EACbC,KAAMC,IAAasB,KACnBpB,MAAO,CAAC,CAAEC,KAAMC,KAAUC,SAAUC,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAauC,eAAgB,CAC5BrC,GAAIF,IAAauC,cACjBpC,KAAM,kBACNC,YAAa,wEACbC,KAAMC,IAAasB,KACnBpB,MAAO,CAAC,CAAEC,KAAMC,KAAUS,UAAWP,OAAO,KAC5CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAawC,iBAAkB,CAC9BtC,GAAIF,IAAawC,gBACjBrC,KAAM,oBACNC,YAAa,2CACbC,KAAMC,IAAasB,KACnBpB,MAAO,CAAC,CAAEC,KAAMC,KAAUO,SAAUL,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAayC,kBAAmB,CAC/BvC,GAAIF,IAAayC,iBACjBtC,KAAM,qBACNC,YAAa,6DACbC,KAAMC,IAAasB,KACnBpB,MAAO,CAAC,CAAEC,KAAMC,KAAUO,SAAUL,OAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAa0C,iBAAkB,CAC9BxC,GAAIF,IAAa0C,gBACjBvC,KAAM,oBACNC,YACE,6FACFC,KAAMC,IAAasB,KACnBpB,MAAO,CAAC,CAAEC,KAAMC,KAAUO,SAAUL,OAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAKR,CAACf,IAAa2C,oBAAqB,CACjCzC,GAAIF,IAAa2C,mBACjBxC,KAAM,uBACNC,YACE,0IACFC,KAAMC,IAAasC,MACnBpC,MAAO,CAAC,CAAEC,KAAMC,KAAUc,WAAYZ,OAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,WAER,CAACf,IAAa6C,cAAe,CAC3B3C,GAAIF,IAAa6C,aACjB1C,KAAM,iBACNC,YAAa,iEACbC,KAAMC,IAAasC,MACnBpC,MAAO,CAAC,CAAEC,KAAMC,KAAUS,UAAWP,MAAO,KAC5CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,WAER,CAACf,IAAa8C,iBAAkB,CAC9B5C,GAAIF,IAAa8C,gBACjB3C,KAAM,oBACNC,YACE,6GACFC,KAAMC,IAAasC,MACnBpC,MAAO,CAAC,CAAEC,KAAMC,KAAUU,WAAYR,OAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,WAER,CAACf,IAAa+C,mBAAoB,CAChC7C,GAAIF,IAAa+C,kBACjB5C,KAAM,sBACNC,YACE,oFACFC,KAAMC,IAAasC,MACnBpC,MAAO,CAAC,CAAEC,KAAMC,KAAUC,SAAUC,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,WAER,CAACf,IAAagD,aAAc,CAC1B9C,GAAIF,IAAagD,YACjB7C,KAAM,gBACNC,YAAa,0DACbC,KAAMC,IAAasC,MACnBpC,MAAO,CAAC,CAAEC,KAAMC,KAAUc,WAAYZ,MAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,WAER,CAACf,IAAaiD,kBAAmB,CAC/B/C,GAAIF,IAAaiD,iBACjB9C,KAAM,qBACNC,YACE,gQACFC,KAAMC,IAAasC,MACnBpC,MAAO,CAAC,CAAEC,KAAMC,KAAUO,SAAUL,OAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,WAER,CAACf,IAAakD,iBAAkB,CAC9BhD,GAAIF,IAAakD,gBACjB/C,KAAM,oBACNC,YAAa,sDACbC,KAAMC,IAAasC,MACnBpC,MAAO,CAAC,CAAEC,KAAMC,KAAUC,SAAUC,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAamD,eAAgB,CAC5BjD,GAAIF,IAAamD,cACjBhD,KAAM,kBACNC,YACE,qFACFC,KAAMC,IAAasC,MACnBpC,MAAO,CAAC,CAAEC,KAAMC,KAAUU,WAAYR,MAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAaoD,gBAAiB,CAC7BlD,GAAIF,IAAaoD,eACjBjD,KAAM,mBACNC,YAAa,2EACbC,KAAMC,IAAasC,MACnBpC,MAAO,CAAC,CAAEC,KAAMC,KAAUO,SAAUL,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAaqD,gBAAiB,CAC7BnD,GAAIF,IAAaqD,eACjBlD,KAAM,mBACNC,YAAa,+EACbC,KAAMC,IAAasC,MACnBpC,MAAO,CAAC,CAAEC,KAAMC,KAAUc,WAAYZ,OAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,WAER,CAACf,IAAasD,cAAe,CAC3BpD,GAAIF,IAAasD,aACjBnD,KAAM,iBACNC,YACE,wHACFC,KAAMC,IAAasC,MACnBpC,MAAO,CAAC,CAAEC,KAAMC,KAAUU,WAAYR,MAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAKR,CAACf,IAAauD,mBAAoB,CAChCrD,GAAIF,IAAauD,kBACjBpD,KAAM,sBACNC,YAAa,iFACbC,KAAMC,IAAakD,IACnBhD,MAAO,CAAC,CAAEC,KAAMC,KAAUS,UAAWP,MAAO,KAC5CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAayD,iBAAkB,CAC9BvD,GAAIF,IAAayD,gBACjBtD,KAAM,oBACNC,YAAa,oEACbC,KAAMC,IAAakD,IACnBhD,MAAO,CAAC,CAAEC,KAAMC,KAAUU,WAAYR,MAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAa0D,kBAAmB,CAC/BxD,GAAIF,IAAa0D,iBACjBvD,KAAM,qBACNC,YAAa,iEACbC,KAAMC,IAAakD,IACnBhD,MAAO,CAAC,CAAEC,KAAMC,KAAUC,SAAUC,OAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAa2D,cAAe,CAC3BzD,GAAIF,IAAa2D,aACjBxD,KAAM,iBACNC,YAAa,kFACbC,KAAMC,IAAakD,IACnBhD,MAAO,CAAC,CAAEC,KAAMsB,KAAiBC,6BAA8BpB,OAAO,KACtEC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAa4D,cAAe,CAC3B1D,GAAIF,IAAa4D,aACjBzD,KAAM,iBACNC,YAAa,gCACbC,KAAMC,IAAakD,IACnBhD,MAAO,CAAC,CAAEC,KAAMC,KAAUO,SAAUL,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAa6D,mBAAoB,CAChC3D,GAAIF,IAAa6D,kBACjB1D,KAAM,sBACNC,YAAa,6EACbC,KAAMC,IAAakD,IACnBhD,MAAO,CAAC,CAAEC,KAAMC,KAAUC,SAAUC,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAa8D,cAAe,CAC3B5D,GAAIF,IAAa8D,aACjB3D,KAAM,iBACNC,YAAa,kCACbC,KAAMC,IAAakD,IACnBhD,MAAO,CAAC,CAAEC,KAAMC,KAAUc,WAAYZ,OAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAKR,CAACf,IAAa+D,cAAe,CAC3B7D,GAAIF,IAAa+D,aACjB5D,KAAM,iBACNC,YAAa,sDACbC,KAAMC,IAAa0D,OACnBxD,MAAO,CAAC,CAAEC,KAAMC,KAAUC,SAAUC,OAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAaiE,gBAAiB,CAC7B/D,GAAIF,IAAaiE,eACjB9D,KAAM,mBACNC,YACE,0IACFC,KAAMC,IAAa0D,OACnBxD,MAAO,CAAC,CAAEC,KAAMC,KAAU0B,SAAUxB,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAakE,kBAAmB,CAC/BhE,GAAIF,IAAakE,iBACjB/D,KAAM,qBACNC,YAAa,2CACbC,KAAMC,IAAa0D,OACnBxD,MAAO,CAAC,CAAEC,KAAMC,KAAUO,SAAUL,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAamE,iBAAkB,CAC9BjE,GAAIF,IAAamE,gBACjBhE,KAAM,oBACNC,YAAa,gDACbC,KAAMC,IAAa0D,OACnBxD,MAAO,CAAC,CAAEC,KAAMC,KAAUU,WAAYR,OAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAaoE,uBAAwB,CACpClE,GAAIF,IAAaoE,sBACjBjE,KAAM,0BACNC,YAAa,iEACbC,KAAMC,IAAa0D,OACnBxD,MAAO,CAAC,CAAEC,KAAMC,KAAUC,SAAUC,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAaqE,mBAAoB,CAChCnE,GAAIF,IAAaqE,kBACjBlE,KAAM,sBACNC,YAAa,yDACbC,KAAMC,IAAa0D,OACnBxD,MAAO,CAAC,CAAEC,KAAMC,KAAUS,UAAWP,MAAO,KAC5CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAasE,iBAAkB,CAC9BpE,GAAIF,IAAasE,gBACjBnE,KAAM,oBACNC,YAAa,6DACbC,KAAMC,IAAa0D,OACnBxD,MAAO,CAAC,CAAEC,KAAMC,KAAUU,WAAYR,MAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAauE,oBAAqB,CACjCrE,GAAIF,IAAauE,mBACjBpE,KAAM,uBACNC,YAAa,2CACbC,KAAMC,IAAa0D,OACnBxD,MAAO,CAAC,CAAEC,KAAMC,KAAUc,WAAYZ,OAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAawE,qBAAsB,CAClCtE,GAAIF,IAAawE,oBACjBrE,KAAM,wBACNC,YAAa,yEACbC,KAAMC,IAAa0D,OACnBxD,MAAO,CAAC,CAAEC,KAAMC,KAAUC,SAAUC,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAKR,CAACf,IAAayE,kBAAmB,CAC/BvE,GAAIF,IAAayE,iBACjBtE,KAAM,qBACNC,YACE,8GACFC,KAAMC,IAAaoE,UACnBlE,MAAO,CAAC,CAAEC,KAAMC,KAAUU,WAAYR,MAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,WAER,CAACf,IAAa2E,gBAAiB,CAC7BzE,GAAIF,IAAa2E,eACjBxE,KAAM,mBACNC,YACE,yFACFC,KAAMC,IAAaoE,UACnBlE,MAAO,CAAC,CAAEC,KAAMC,KAAUc,WAAYZ,MAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAa4E,aAAc,CAC1B1E,GAAIF,IAAa4E,YACjBzE,KAAM,gBACNC,YACE,0HACFC,KAAMC,IAAaoE,UACnBlE,MAAO,CAAC,CAAEC,KAAMC,KAAUC,SAAUC,OAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAa6E,iBAAkB,CAC9B3E,GAAIF,IAAa6E,gBACjB1E,KAAM,oBACNC,YACE,uJACFC,KAAMC,IAAaoE,UACnBlE,MAAO,CAAC,CAAEC,KAAMC,KAAUO,SAAUL,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,UAER,CAACf,IAAa8E,iBAAkB,CAC9B5E,GAAIF,IAAa8E,gBACjB3E,KAAM,oBACNC,YACE,8FACFC,KAAMC,IAAaoE,UACnBlE,MAAO,CAAC,CAAEC,KAAMC,KAAUC,SAAUC,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAa+E,kBAAmB,CAC/B7E,GAAIF,IAAa+E,iBACjB5E,KAAM,qBACNC,YAAa,yEACbC,KAAMC,IAAaoE,UACnBlE,MAAO,CAAC,CAAEC,KAAMC,KAAUc,WAAYZ,OAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,WAER,CAACf,IAAagF,cAAe,CAC3B9E,GAAIF,IAAagF,aACjB7E,KAAM,iBACNC,YACE,2KACFC,KAAMC,IAAaoE,UACnBlE,MAAO,CAAC,CAAEC,KAAMC,KAAUU,WAAYR,OAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAaiF,cAAe,CAC3B/E,GAAIF,IAAaiF,aACjB9E,KAAM,iBACNC,YACE,sGACFC,KAAMC,IAAaoE,UACnBlE,MAAO,CAAC,CAAEC,KAAMC,KAAUC,SAAUC,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,WAER,CAACf,IAAakF,gBAAiB,CAC7BhF,GAAIF,IAAakF,eACjB/E,KAAM,mBACNC,YAAa,wDACbC,KAAMC,IAAaoE,UACnBlE,MAAO,CAAC,CAAEC,KAAMC,KAAUS,UAAWP,MAAO,KAC5CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAamF,mBAAoB,CAChCjF,GAAIF,IAAamF,kBACjBhF,KAAM,sBACNC,YAAa,0EACbC,KAAMC,IAAaoE,UACnBlE,MAAO,CAAC,CAAEC,KAAMC,KAAUC,SAAUC,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,YAER,CAACf,IAAaoF,gBAAiB,CAC7BlF,GAAIF,IAAaoF,eACjBjF,KAAM,mBACNC,YACE,4JACFC,KAAMC,IAAaoE,UACnBlE,MAAO,CAAC,CAAEC,KAAMC,KAAUO,SAAUL,OAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,WAER,CAACf,IAAaqF,aAAc,CAC1BnF,GAAIF,IAAaqF,YACjBlF,KAAM,gBACNC,YACE,qJACFC,KAAMC,IAAaoE,UACnBlE,MAAO,CAAC,CAAEC,KAAMC,KAAU0B,SAAUxB,MAAO,KAC3CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,WAER,CAACf,IAAasF,kBAAmB,CAC/BpF,GAAIF,IAAasF,iBACjBnF,KAAM,qBACNC,YACE,8FACFC,KAAMC,IAAaoE,UACnBlE,MAAO,CAAC,CAAEC,KAAMC,KAAUc,WAAYZ,MAAO,KAC7CC,KAAM,EACNC,sBAAqB,EACrBC,KAAM,8CC5oBH,MAGMwE,GAAuB,mCCH7B,IAAKC,EAAZ,SAAYA,GACVA,WAAAC,cAAA,mBACAD,IAAAE,gBAAA,qBACAF,IAAAG,kBAAA,uBACAH,IAAAI,eAAA,oBACAJ,IAAAK,cAAA,mBACAL,IAAAM,eAAA,oBANUN,CAOZ,CAPA,CAAYA,GAAS,4ECITO,EAAZ,SAAYA,GACVA,WAAAC,KAAA,UACAD,IAAAE,eAAA,oBACAF,IAAAG,eAAA,oBACAH,IAAAI,kBAAA,uBACAJ,IAAAK,iBAAA,sBACAL,IAAAM,iBAAA,sBACAN,IAAAO,oBAAA,yBACAP,IAAAQ,eAAA,oBACAR,IAAAS,eAAA,oBACAT,IAAAU,kBAAA,uBACAV,IAAAW,iBAAA,uBACAX,IAAAY,iBAAA,uBACAZ,IAAAa,oBAAA,0BACAb,IAAAc,gBAAA,sBACAd,IAAAe,gBAAA,sBACAf,IAAAgB,mBAAA,yBACAhB,IAAAiB,eAAA,qBACAjB,IAAAkB,eAAA,qBACAlB,IAAAmB,kBAAA,wBAnBUnB,CAoBZ,CApBA,CAAYA,GAAY,IAsBZrF,EAAZ,SAAYA,GACVA,WAAA0B,SAAA,cACA1B,IAAAU,WAAA,gBACAV,IAAAO,SAAA,cACAP,IAAAc,WAAA,gBACAd,IAAAS,UAAA,eACAT,IAAAC,SAAA,cANUD,CAOZ,CAPA,CAAYA,GAAS,IAUd,MAAMyG,EAAqF,CAChG,CAACpB,EAAaC,MAAO,CAACtF,EAAUC,SAAU,EAAG,EAAG,GAChD,CAACoF,EAAaE,gBAAiB,CAACvF,EAAU0B,SAAU,EAAG,EAAG,YAC1D,CAAC2D,EAAaG,gBAAiB,CAACxF,EAAU0B,SAAU,GAAI,EAAG,YAC3D,CAAC2D,EAAaI,mBAAoB,CAACzF,EAAU0B,SAAU,EAAG,EAAG,YAC7D,CAAC2D,EAAaK,kBAAmB,CAAC1F,EAAUU,WAAY,EAAG,EAAG,YAC9D,CAAC2E,EAAaM,kBAAmB,CAAC3F,EAAUU,WAAY,GAAI,EAAG,YAC/D,CAAC2E,EAAaO,qBAAsB,CAAC5F,EAAUU,WAAY,EAAG,EAAG,WACjE,CAAC2E,EAAaQ,gBAAiB,CAAC7F,EAAUO,SAAU,EAAG,EAAG,YAC1D,CAAC8E,EAAaS,gBAAiB,CAAC9F,EAAUO,SAAU,GAAI,EAAG,YAC3D,CAAC8E,EAAaU,mBAAoB,CAAC/F,EAAUO,SAAU,EAAG,EAAG,WAC7D,CAAC8E,EAAaW,kBAAmB,CAAChG,EAAUc,WAAY,EAAG,EAAG,YAC9D,CAACuE,EAAaY,kBAAmB,CAACjG,EAAUc,WAAY,GAAI,EAAG,YAC/D,CAACuE,EAAaa,qBAAsB,CAAClG,EAAUc,WAAY,EAAG,EAAG,WACjE,CAACuE,EAAac,iBAAkB,CAACnG,EAAUS,UAAW,EAAG,EAAG,WAC5D,CAAC4E,EAAae,iBAAkB,CAACpG,EAAUS,UAAW,GAAI,EAAG,YAC7D,CAAC4E,EAAagB,oBAAqB,CAACrG,EAAUS,UAAW,EAAG,EAAG,YAC/D,CAAC4E,EAAaiB,gBAAiB,CAACtG,EAAUC,SAAU,EAAG,EAAG,YAC1D,CAACoF,EAAakB,gBAAiB,CAACvG,EAAUC,SAAU,GAAI,EAAG,YAC3D,CAACoF,EAAamB,mBAAoB,CAACxG,EAAUC,SAAU,EAAG,EAAG,aAoCxD,IAAKoB,EAAZ,SAAYA,GACVA,WAAAC,6BAAA,mCADUD,CAEZ,CAFA,CAAYA,GAAgB,IAIhBqF,EAAZ,SAAYA,GACVA,WAAAC,KAAA,UACAD,IAAAE,cAAA,mBACAF,IAAAG,qBAAA,0BACAH,IAAAI,cAAA,mBACAJ,IAAAK,qBAAA,0BACAL,IAAAM,iBAAA,sBACAN,IAAAO,mBAAA,wBACAP,IAAAQ,sBAAA,2BACAR,IAAAS,aAAA,kBACAT,IAAAU,aAAA,mBACAV,IAAAW,eAAA,qBACAX,IAAAY,cAAA,oBAEAZ,IAAAa,uBAAA,6BAEAb,IAAAc,kBAAA,wBACAd,IAAAe,mBAAA,yBACAf,IAAAgB,oBAAA,0BACAhB,IAAAiB,MAAA,YAnBUjB,CAoBZ,CApBA,CAAYA,GAAe,qCC/FpB,IAAKkB,EAAZ,SAAYA,GACVA,WAAAjB,KAAA,UACAiB,IAAAC,qBAAA,0BACAD,IAAAE,oBAAA,yBAHUF,CAIZ,CAJA,CAAYA,GAAuB,qCCA5B,IAAKtI,EAAZ,SAAYA,GACVA,WAAAC,iBAAA,wBACAD,IAAAgB,gBAAA,wBACAhB,IAAAkB,oBAAA,4BAIAlB,IAAAqB,eAAA,uBACArB,IAAAsB,gBAAA,wBACAtB,IAAAuB,mBAAA,2BACAvB,IAAA0B,iBAAA,yBAGA1B,IAAA2B,gBAAA,wBACA3B,IAAA6B,gBAAA,wBACA7B,IAAA8B,kBAAA,0BACA9B,IAAAiC,eAAA,uBACAjC,IAAAkC,kBAAA,0BACAlC,IAAAmC,eAAA,uBACAnC,IAAAqC,kBAAA,0BAEArC,IAAAsC,kBAAA,0BACAtC,IAAAuC,cAAA,sBACAvC,IAAAwC,gBAAA,wBACAxC,IAAAyC,iBAAA,yBACAzC,IAAA0C,gBAAA,wBAGA1C,IAAA2C,mBAAA,2BACA3C,IAAA6C,aAAA,qBACA7C,IAAA8C,gBAAA,wBACA9C,IAAA+C,kBAAA,0BACA/C,IAAAgD,YAAA,oBACAhD,IAAAiD,iBAAA,yBACAjD,IAAAkD,gBAAA,wBACAlD,IAAAmD,cAAA,sBACAnD,IAAAoD,eAAA,uBACApD,IAAAqD,eAAA,uBACArD,IAAAsD,aAAA,qBAKAtD,IAAAuD,kBAAA,0BACAvD,IAAAyD,gBAAA,wBACAzD,IAAA0D,iBAAA,yBACA1D,IAAA2D,aAAA,qBACA3D,IAAA4D,aAAA,qBACA5D,IAAA6D,kBAAA,0BACA7D,IAAA8D,aAAA,qBAOA9D,IAAA+D,aAAA,qBACA/D,IAAAiE,eAAA,uBACAjE,IAAAkE,iBAAA,yBACAlE,IAAAmE,gBAAA,wBACAnE,IAAAoE,sBAAA,8BACApE,IAAAqE,kBAAA,0BACArE,IAAAsE,gBAAA,wBACAtE,IAAAuE,mBAAA,2BACAvE,IAAAwE,oBAAA,4BAGAxE,IAAAyB,iBAAA,8BAGAzB,IAAAyE,iBAAA,yBACAzE,IAAA2E,eAAA,uBACA3E,IAAA4E,YAAA,oBACA5E,IAAA6E,gBAAA,wBACA7E,IAAA8E,gBAAA,wBACA9E,IAAA+E,iBAAA,yBACA/E,IAAAgF,aAAA,qBACAhF,IAAAiF,aAAA,qBACAjF,IAAAkF,eAAA,uBACAlF,IAAAmF,kBAAA,0BACAnF,IAAAoF,eAAA,uBACApF,IAAAqF,YAAA,oBACArF,IAAAsF,iBAAA,yBAlFUtF,CAmFZ,CAnFA,CAAYA,GAAY,qCCEjB,IAAKM,EAAZ,SAAYA,GACVA,WAAAmI,eAAA,oBACAnI,IAAAC,OAAA,YACAD,IAAAsB,KAAA,UACAtB,IAAAsC,MAAA,WACAtC,IAAAkD,IAAA,SACAlD,IAAA0D,OAAA,YACA1D,IAAAoE,UAAA,eAPUpE,CAQZ,CARA,CAAYA,GAAY,qCCnBjB,MAAMoI,EAAc,CACzBC,QAAW,QACXC,SAAY,UACZC,YAAc,EACdC,MAAQ,EACRC,QAAU,EACVC,OAAU,mCACVC,SAAY,QACZC,cAAiB,8CACjBC,aAAe,EACfC,qBAAwB,IACxBC,aAAgB,CACdC,yBAA2B,EAC3BC,iBAAmB,EACnBC,6BAA+B,oBCdnC,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IACA,IAAAC,EAAAP,EAAAK,GAAAC,GACApJ,EAAAqJ,EAAArJ,KACA,OAAIsJ,GAEJ,YADAN,EAAAM,EAEA,CACAD,EAAAE,KACAR,EAAA/I,GAEAwJ,QAAAT,QAAA/I,GAAAyJ,KAAAR,EAAAC,EAEA,CACe,SAAAQ,EAAAC,GACf,kBACA,IAAAC,EAAAC,KACAC,EAAAC,UACA,WAAAP,QAAA,SAAAT,EAAAC,GACA,IAAAF,EAAAa,EAAAK,MAAAJ,EAAAE,GACA,SAAAb,EAAAjJ,GACA6I,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAlJ,EACA,CACA,SAAAkJ,EAAAe,GACApB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,QAAAe,EACA,CACAhB,OAAA,EACA,EACA,CACA,oBC5BAiB,EAAA,GAGA,SAAAC,EAAAC,GAEA,IAAAC,EAAAH,EAAAE,GACA,YAAAC,EACA,OAAAA,EAAAC,QAGA,IAAAC,EAAAL,EAAAE,GAAA,CAGAE,QAAA,IAIA,OAAAE,EAAAJ,GAAAG,IAAAD,QAAAH,GAGAI,EAAAD,OACA,CCrBAH,EAAAM,EAAA,CAAAH,EAAAI,KACA,QAAAvB,KAAAuB,EACAP,EAAAQ,EAAAD,EAAAvB,KAAAgB,EAAAQ,EAAAL,EAAAnB,IACAyB,OAAAC,eAAAP,EAAAnB,EAAA,CAAyC2B,YAAA,EAAAC,IAAAL,EAAAvB,IAAwC,ECJjFgB,EAAAQ,EAAA,CAAAK,EAAAC,IAAAL,OAAAM,UAAAC,eAAAC,KAAAJ,EAAAC,oECmBO,MAAMI,EAET,CACF,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,GACJ,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,GACJ,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,GACJ,GAAI,GACJ,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,MC1fJC,GAAsF,CACjG,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAA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","names":["ModInformation","ModOrAbility","WhisperOfDurance","id","name","description","type","ModifierType","Stasis","bonus","stat","ArmorStat","Strength","value","cost","requiredArmorAffinity","hash","WhisperOfChains","Recovery","WhisperOfConduction","Intellect","Resilience","WhisperOfBonds","WhisperOfHunger","WhisperOfFractures","Discipline","WhisperOfImpetus","WhisperOfTorment","EchoOfExpulsion","Void","EchoOfProvision","EchoOfPersistence","SpecialArmorStat","ClassAbilityRegenerationStat","EchoOfLeeching","EchoOfDomineering","EchoOfDilation","Mobility","EchoOfUndermining","EchoOfInstability","EchoOfHarvest","EchoOfObscurity","EchoOfStarvation","EchoOfVigilance","EmberOfBenelovence","Solar","EmberOfBeams","EmberOfEmpyrean","EmberOfCombustion","EmberOfChar","EmberOfTempering","EmberOfEruption","EmberOfWonder","EmberOfSearing","EmberOfTorches","EmberOfMercy","SparkOfBrilliance","Arc","SparkOfFeedback","SparkOfDischarge","SparkOfFocus","SparkOfVolts","SparkOfResistance","SparkOfShock","ThreadOfFury","Strand","ThreadOfAscent","ThreadOfFinality","ThreadOfWarding","ThreadOfTransmutation","ThreadOfEvolution","ThreadOfBinding","ThreadOfGeneration","ThreadOfPropagation","FacetOfAwakening","Prismatic","FacetOfCourage","FacetOfDawn","FacetOfDefiance","FacetOfDevotion","FacetOfDominance","FacetOfGrace","FacetOfHonor","FacetOfJustice","FacetOfProtection","FacetOfPurpose","FacetOfRuin","FacetOfSacrifice","FORCE_USE_ANY_EXOTIC","ArmorSlot","ArmorSlotNone","ArmorSlotHelmet","ArmorSlotGauntlet","ArmorSlotChest","ArmorSlotLegs","ArmorSlotClass","StatModifier","NONE","MINOR_MOBILITY","MAJOR_MOBILITY","ARTIFICE_MOBILITY","MINOR_RESILIENCE","MAJOR_RESILIENCE","ARTIFICE_RESILIENCE","MINOR_RECOVERY","MAJOR_RECOVERY","ARTIFICE_RECOVERY","MINOR_DISCIPLINE","MAJOR_DISCIPLINE","ARTIFICE_DISCIPLINE","MINOR_INTELLECT","MAJOR_INTELLECT","ARTIFICE_INTELLECT","MINOR_STRENGTH","MAJOR_STRENGTH","ARTIFICE_STRENGTH","STAT_MOD_VALUES","ArmorPerkOrSlot","None","SlotCrotasEnd","SlotRootOfNightmares","SlotKingsFall","SlotVowOfTheDisciple","SlotVaultOfGlass","SlotDeepStoneCrypt","SlotGardenOfSalvation","SlotLastWish","SlotArtifice","PerkIronBanner","SlotNightmare","GuardianGamesClassItem","PerkEchoesOfGlory","SlotSalvationsEdge","SlotEidosApprentice","COUNT","ModOptimizationStrategy","ReduceUsedModSockets","ReduceUsedModPoints","CombatStyleMod","environment","version","revision","production","beta","canary","apiKey","clientId","client_secret","offlineMode","highlight_project_id","featureFlags","enableModslotLimitation","enableZeroWaste","enableGuardianGamesFeatures","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","precalculatedZeroWasteModCombinations","precalculatedModCombinations","isIPermutatorArmorSet","checkSlots","config","constantModslotRequirement","availableClassItemTypes","helmet","gauntlet","chest","leg","exoticId","selectedExotics","requirements","slice","isExotic","assumeEveryExoticIsArtifice","armorPerks","fixed","perk","valid","has","slot","bad","n","Math","max","requiredClassItemType","k","handlePermutation","runtime","constantBonus","availableModCost","doNotOutput","hasArtificeClassItem","hasExoticClassItem","hasMasterworkedClassItem","items","totalStatBonus","i","length","item","masterworked","assumeExoticsMasterworked","assumeLegendariesMasterworked","stats","getStatSum","mobility","resilience","recovery","discipline","intellect","strength","addConstent1Resilience","statsWithoutMods","minimumStatTiers","allowExactStats","availableArtificeCount","filter","ignoreExistingExoticArtificeSlots","assumeEveryLegendaryIsArtifice","distances","onlyShowResultsWithNoWastedStats","v","optionalDistances","tryLimitWastedStats","totalOptionalDistances","reduce","a","b","distanceSum","result","get_mods_precalc","modOptimizationStrategy","distancesTo100","combos3x100","combos4x100","j","dx","push","l","dy","combo","newDistances","statCombo3x100","add","statCombo4x100","maximumPossibleTiers","oldDistance","tier","usedArtifice","usedMods","statModifier","floor","waste1","getWaste","createArmorSet","statsWithMods","armor","classItemPerk","optimize","totalDistance","modCombinations","precalculatedMods","additionalCombosA","concat","bestMods","bestScore","availableModCostLen","minAvailableModCost","costMinor","costMajor","score","entries","currentIndex","validate","alsoValidateMods","sum","usedModCost","statIdx","entry","isSmallMod","minorModCost","majorModCost","minor","major","validateMods","usedModCount","sort","mustExecuteOptimization","root","inner","mods","m","scoreVal","addEventListener","_ref","data","threadSplit","undefined","startTime","Date","now","console","time","current","maximumModSlots","helmets","useFotlArmor","indexOf","gauntlets","chests","legs","count","splitEntry","keepLength","round","startIndex","endIndex","splice","classItems","amountExoticClassItems","amountLegendaryClassItems","availableClassItemPerkTypes","Set","map","availableClassItemPerkTypesExotic","assumeClassItemIsArtifice","prepareConstantStatBonus","mod","enabledMods","characterClass","prepareConstantModslotRequirement","constantPerkRequirement","constantAvailableModslots","prepareConstantAvailableModslots","hasArtificeClassItemExotic","requiresAtLeastOneExotic","exoticClassItem","find","exoticClassItemIsEnforced","results","resultsLength","listedResults","totalResults","estimatedCalculations","estimateCombinationsToBeChecked","totalCalculations","exoticHelmets","legendaryHelmets","exoticGauntlets","legendaryGauntlets","exoticChests","legendaryChests","exoticLegs","legendaryLegs","checkedCalculations","lastProgressReportTime","debug","JSON","stringify","progressBarDelay","hasMasterworkedClassItemExotic","hasMasterworkedClassItemLegendary","assumeClassItemMasterworked","generateArmorCombinations","slotCheckResult","hasOneExotic","limitParsedResults","postMessage","timeEnd","permutationCount","itemCount","totalTime","_x"],"sourceRoot":"webpack:///","sources":["./src/app/data/ModInformation.ts","./src/app/data/constants.ts","./src/app/data/enum/armor-slot.ts","./src/app/data/enum/armor-stat.ts","./src/app/data/enum/mod-optimization-strategy.ts","./src/app/data/enum/modOrAbility.ts","./src/app/data/enum/modifierType.ts","./src/environments/environment.prod.ts","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack/bootstrap","webpack/runtime/define property getters","webpack/runtime/hasOwnProperty shorthand","./src/app/data/generated/precalculatedZeroWasteModCombinations.ts","./src/app/data/generated/precalculatedModCombinations.ts","./src/app/data/types/IPermutatorArmorSet.ts","./src/app/services/results-builder.worker.ts"],"sourcesContent":["/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EnumDictionary } from \"./types/EnumDictionary\";\nimport { ModOrAbility } from \"./enum/modOrAbility\";\nimport { Modifier } from \"./modifier\";\nimport { ModifierType } from \"./enum/modifierType\";\nimport { ArmorStat, SpecialArmorStat } from \"./enum/armor-stat\";\nimport { DestinyEnergyType } from \"bungie-api-ts/destiny2/interfaces\";\n\nexport const ModInformation: EnumDictionary<ModOrAbility, Modifier> = {\n  // region Stasis\n  [ModOrAbility.WhisperOfDurance]: {\n    id: ModOrAbility.WhisperOfDurance,\n    name: \"Whisper of Durance\",\n    description:\n      \"Slow that you apply to targets lasts longer. For those abilities that linger, their duration will also increase.\",\n    type: ModifierType.Stasis,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 3469412969,\n  },\n  [ModOrAbility.WhisperOfChains]: {\n    id: ModOrAbility.WhisperOfChains,\n    name: \"Whisper of Chains\",\n    description:\n      \"While you are near frozen targets or a friendly Stasis crystal, you take reduced damage from targets.\",\n    type: ModifierType.Stasis,\n    bonus: [{ stat: ArmorStat.Recovery, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 537774540,\n  },\n  [ModOrAbility.WhisperOfConduction]: {\n    id: ModOrAbility.WhisperOfConduction,\n    name: \"Whisper of Conduction\",\n    description: \"Nearby Stasis shards track to your position.\",\n    type: ModifierType.Stasis,\n    bonus: [\n      { stat: ArmorStat.Intellect, value: 10 },\n      { stat: ArmorStat.Resilience, value: 10 },\n    ],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2483898429,\n  },\n  [ModOrAbility.WhisperOfBonds]: {\n    id: ModOrAbility.WhisperOfBonds,\n    name: \"Whisper of Bonds\",\n    description: \"Defeating frozen targets generates an Orb of Power.\",\n    type: ModifierType.Stasis,\n    bonus: [{ stat: ArmorStat.Intellect, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 3469412974,\n  },\n  [ModOrAbility.WhisperOfHunger]: {\n    id: ModOrAbility.WhisperOfHunger,\n    name: \"Whisper of Hunger\",\n    description: \"Increases the melee energy gained from picking up Stasis shards.\",\n    type: ModifierType.Stasis,\n    bonus: [{ stat: ArmorStat.Strength, value: -20 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2483898431,\n  },\n  [ModOrAbility.WhisperOfFractures]: {\n    id: ModOrAbility.WhisperOfFractures,\n    name: \"Whisper of Fractures\",\n    description: \"Your melee energy recharges faster when you are near two or more targets.\",\n    type: ModifierType.Stasis,\n    bonus: [{ stat: ArmorStat.Discipline, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 537774542,\n  },\n  [ModOrAbility.WhisperOfImpetus]: {\n    id: ModOrAbility.WhisperOfImpetus,\n    name: \"Whisper of Impetus\",\n    description:\n      \"Damaging targets with a Stasis melee reloads your stowed weapons and grants you a temporary boost to weapon ready speed.\",\n    type: ModifierType.Stasis,\n    bonus: [{ stat: ArmorStat.Resilience, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 537774543,\n  },\n  [ModOrAbility.WhisperOfTorment]: {\n    id: ModOrAbility.WhisperOfTorment,\n    name: \"Whisper of Torment\",\n    description:\n      \"You gain grenade energy each time you take damage from targets. Having Frost Armor increases the amount of energy gained.\",\n    type: ModifierType.Stasis,\n    bonus: [{ stat: ArmorStat.Discipline, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 537774541,\n  },\n  // endregion Stasis\n\n  // region Void\n  [ModOrAbility.EchoOfExpulsion]: {\n    id: ModOrAbility.EchoOfExpulsion,\n    name: \"Echo of Expulsion\",\n    description: \"Void ability final blows cause targets to explode.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Intellect, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2272984665,\n  },\n  [ModOrAbility.EchoOfProvision]: {\n    id: ModOrAbility.EchoOfProvision,\n    name: \"Echo of Provision\",\n    description: \"Damaging targets with grenades grants melee energy.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Strength, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2272984664,\n  },\n  [ModOrAbility.EchoOfPersistence]: {\n    id: ModOrAbility.EchoOfPersistence,\n    name: \"Echo of Persistence\",\n    description:\n      \"Void buffs applied to you (Invisibility, Overshield, and Devour) have increased duration.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: SpecialArmorStat.ClassAbilityRegenerationStat, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2272984671,\n  },\n  [ModOrAbility.EchoOfLeeching]: {\n    id: ModOrAbility.EchoOfLeeching,\n    name: \"Echo of Leeching\",\n    description: \"Melee final blows start health regeneration for you and nearby allies.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Resilience, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2272984670,\n  },\n  [ModOrAbility.EchoOfDomineering]: {\n    id: ModOrAbility.EchoOfDomineering,\n    name: \"Echo of Domineering\",\n    description:\n      \"After suppressing a target, you gain greatly increased mobility for a short duration, and your equipped weapon is reloaded from reserves.\\n\\nDefeating suppressed targets creates a Void Breach.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Discipline, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2272984657,\n  },\n  [ModOrAbility.EchoOfDilation]: {\n    id: ModOrAbility.EchoOfDilation,\n    name: \"Echo of Dilation\",\n    description: \"While crouched, you sneak faster and gain enhanced radar resolution.\",\n    type: ModifierType.Void,\n    bonus: [\n      { stat: ArmorStat.Mobility, value: 10 },\n      { stat: ArmorStat.Intellect, value: 10 },\n    ],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2272984656,\n  },\n  [ModOrAbility.EchoOfUndermining]: {\n    id: ModOrAbility.EchoOfUndermining,\n    name: \"Echo of Undermining\",\n    description: \"Your Void grenades weaken targets.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Discipline, value: -20 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2272984668,\n  },\n  [ModOrAbility.EchoOfInstability]: {\n    id: ModOrAbility.EchoOfInstability,\n    name: \"Echo of Instability\",\n    description: \"Defeating targets with grenades grants Volatile Rounds to your Void weapons.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2661180600,\n  },\n  [ModOrAbility.EchoOfHarvest]: {\n    id: ModOrAbility.EchoOfHarvest,\n    name: \"Echo of Harvest\",\n    description: \"Defeating weakened targets creates an Orb of Power and a Void Breach.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Intellect, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2661180601,\n  },\n  [ModOrAbility.EchoOfObscurity]: {\n    id: ModOrAbility.EchoOfObscurity,\n    name: \"Echo of Obscurity\",\n    description: \"Finisher final blows grant Invisibility.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Recovery, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2661180602,\n  },\n  [ModOrAbility.EchoOfStarvation]: {\n    id: ModOrAbility.EchoOfStarvation,\n    name: \"Echo of Starvation\",\n    description: \"Picking up a Void Breach or an Orb of Power grants Devour.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Recovery, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2661180603,\n  },\n  [ModOrAbility.EchoOfVigilance]: {\n    id: ModOrAbility.EchoOfVigilance,\n    name: \"Echo of Vigilance\",\n    description:\n      \"Defeating a target while your shields are depleted grants you a temporary Void overshield.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Recovery, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 3854948621,\n  },\n  // endregion Void\n\n  // region Solar\n  [ModOrAbility.EmberOfBenelovence]: {\n    id: ModOrAbility.EmberOfBenelovence,\n    name: \"Ember of Benevolence\",\n    description:\n      \"Applying restoration, cure,  or radiant to allies grants increased grenade, melee, and class ability regeneration for a short duration.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Discipline, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 362132292,\n  },\n  [ModOrAbility.EmberOfBeams]: {\n    id: ModOrAbility.EmberOfBeams,\n    name: \"Ember of Beams\",\n    description: \"Your Solar Super projectiles have stronger target acquisition.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Intellect, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 362132295,\n  },\n  [ModOrAbility.EmberOfEmpyrean]: {\n    id: ModOrAbility.EmberOfEmpyrean,\n    name: \"Ember of Empyrean\",\n    description:\n      \"Solar weapon or ability final blows extend the duration of restoration and radiant effects applied to you.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Resilience, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 362132294,\n  },\n  [ModOrAbility.EmberOfCombustion]: {\n    id: ModOrAbility.EmberOfCombustion,\n    name: \"Ember of Combustion\",\n    description:\n      \"Final blows with a Solar Super causes targets to ignite and creates a Firesprite.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 362132289,\n  },\n  [ModOrAbility.EmberOfChar]: {\n    id: ModOrAbility.EmberOfChar,\n    name: \"Ember of Char\",\n    description: \"Your Solar ignitions spread scorch to affected targets.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Discipline, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 362132291,\n  },\n  [ModOrAbility.EmberOfTempering]: {\n    id: ModOrAbility.EmberOfTempering,\n    name: \"Ember of Tempering\",\n    description:\n      \"Solar weapon final blows grant you and your allies increased recovery for a short duration. Stacks 3 times.\\n\\nWhile Ember of Tempering is active, your weapons have increased airborne effectiveness, and your Solar weapon final blows create a Firesprite.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Recovery, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 362132290,\n  },\n  [ModOrAbility.EmberOfEruption]: {\n    id: ModOrAbility.EmberOfEruption,\n    name: \"Ember of Eruption\",\n    description: \"Your Solar ignitions have increased area of effect.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 1051276348,\n  },\n  [ModOrAbility.EmberOfWonder]: {\n    id: ModOrAbility.EmberOfWonder,\n    name: \"Ember of Wonder\",\n    description:\n      \"Rapidly defeating multiple targets with Solar ignitions generates an Orb of Power.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Resilience, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 1051276350,\n  },\n  [ModOrAbility.EmberOfSearing]: {\n    id: ModOrAbility.EmberOfSearing,\n    name: \"Ember of Searing\",\n    description: \"Defeating scorched targets grants melee energy and creates a Firesprite.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Recovery, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 1051276351,\n  },\n  [ModOrAbility.EmberOfTorches]: {\n    id: ModOrAbility.EmberOfTorches,\n    name: \"Ember of Torches\",\n    description: \"Powered melee attacks against combatants make you and nearby allies radiant.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Discipline, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 362132288,\n  },\n  [ModOrAbility.EmberOfMercy]: {\n    id: ModOrAbility.EmberOfMercy,\n    name: \"Ember of Mercy\",\n    description:\n      \"When you revive an ally, you and other nearby allies gain restoration.\\n\\nPicking up a Firesprite grants restoration.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Resilience, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 4180586737,\n  },\n  // endregion Solar\n\n  // region Arc\n  [ModOrAbility.SparkOfBrilliance]: {\n    id: ModOrAbility.SparkOfBrilliance,\n    name: \"Spark of Brilliance\",\n    description: \"Defeating a blinded target with precision damage creates a blinding explosion.\",\n    type: ModifierType.Arc,\n    bonus: [{ stat: ArmorStat.Intellect, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 3277705905,\n  },\n  [ModOrAbility.SparkOfFeedback]: {\n    id: ModOrAbility.SparkOfFeedback,\n    name: \"Spark of Feedback\",\n    description: \"Taking melee damage briefly increases your outgoing melee damage.\",\n    type: ModifierType.Arc,\n    bonus: [{ stat: ArmorStat.Resilience, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 3277705907,\n  },\n  [ModOrAbility.SparkOfDischarge]: {\n    id: ModOrAbility.SparkOfDischarge,\n    name: \"Spark of Discharge\",\n    description: \"Arc weapon final blows have a chance to create an Ionic Trace.\",\n    type: ModifierType.Arc,\n    bonus: [{ stat: ArmorStat.Strength, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 1727069362,\n  },\n  [ModOrAbility.SparkOfFocus]: {\n    id: ModOrAbility.SparkOfFocus,\n    name: \"Spark of Focus\",\n    description: \"After sprinting for a short time, your class ability regeneration is increased.\",\n    type: ModifierType.Arc,\n    bonus: [{ stat: SpecialArmorStat.ClassAbilityRegenerationStat, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 1727069360,\n  },\n  [ModOrAbility.SparkOfVolts]: {\n    id: ModOrAbility.SparkOfVolts,\n    name: \"Spark of Volts\",\n    description: \"Finishers make you amplified.\",\n    type: ModifierType.Arc,\n    bonus: [{ stat: ArmorStat.Recovery, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 3277705904,\n  },\n  [ModOrAbility.SparkOfResistance]: {\n    id: ModOrAbility.SparkOfResistance,\n    name: \"Spark of Resistance\",\n    description: \"While surrounded by combatants, you are more resistant to incoming damage.\",\n    type: ModifierType.Arc,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 1727069366,\n  },\n  [ModOrAbility.SparkOfShock]: {\n    id: ModOrAbility.SparkOfShock,\n    name: \"Spark of Shock\",\n    description: \"Your Arc grenades jolt targets.\",\n    type: ModifierType.Arc,\n    bonus: [{ stat: ArmorStat.Discipline, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 1727069364,\n  },\n  // endregion Arc\n\n  // region Strand\n  [ModOrAbility.ThreadOfFury]: {\n    id: ModOrAbility.ThreadOfFury,\n    name: \"Thread of Fury\",\n    description: \"Damaging targets with a Tangle grants melee energy.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Strength, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 4208512219,\n  },\n  [ModOrAbility.ThreadOfAscent]: {\n    id: ModOrAbility.ThreadOfAscent,\n    name: \"Thread of Ascent\",\n    description:\n      \"Activating your grenade ability reloads your equipped weapon and grants bonus airborne effectiveness and handling for a short duration.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Mobility, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 4208512216,\n  },\n  [ModOrAbility.ThreadOfFinality]: {\n    id: ModOrAbility.ThreadOfFinality,\n    name: \"Thread of Finality\",\n    description: \"Finisher final blows create Threadlings.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Recovery, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 4208512217,\n  },\n  [ModOrAbility.ThreadOfWarding]: {\n    id: ModOrAbility.ThreadOfWarding,\n    name: \"Thread of Warding\",\n    description: \"Picking up an Orb of Power grants Woven Mail.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Resilience, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 4208512222,\n  },\n  [ModOrAbility.ThreadOfTransmutation]: {\n    id: ModOrAbility.ThreadOfTransmutation,\n    name: \"Thread of Transmutation\",\n    description: \"While you have Woven Mail, weapon final blows create a Tangle.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 4208512221,\n  },\n  [ModOrAbility.ThreadOfEvolution]: {\n    id: ModOrAbility.ThreadOfEvolution,\n    name: \"Thread of Evolution\",\n    description: \"Threadlings travel farther and deal additional damage.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Intellect, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 4208512211,\n  },\n  [ModOrAbility.ThreadOfBinding]: {\n    id: ModOrAbility.ThreadOfBinding,\n    name: \"Thread of Binding\",\n    description: \"Super final blows emit a suspending burst from the target.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Resilience, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 3192552688,\n  },\n  [ModOrAbility.ThreadOfGeneration]: {\n    id: ModOrAbility.ThreadOfGeneration,\n    name: \"Thread of Generation\",\n    description: \"Dealing damage generates grenade energy.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Discipline, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 3192552691,\n  },\n  [ModOrAbility.ThreadOfPropagation]: {\n    id: ModOrAbility.ThreadOfPropagation,\n    name: \"Thread of Propagation\",\n    description: \"Powered melee final blows grant your Strand weapons Unraveling Rounds.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 4208512210,\n  },\n  // endregion Strand\n\n  // region Prismatic\n  [ModOrAbility.FacetOfAwakening]: {\n    id: ModOrAbility.FacetOfAwakening,\n    name: \"Facet of Awakening\",\n    description:\n      \"Rapid elemental final blows and Super final blows generate an elemental pickup of the matching damage type.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Resilience, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 124726505,\n  },\n  [ModOrAbility.FacetOfCourage]: {\n    id: ModOrAbility.FacetOfCourage,\n    name: \"Facet of Courage\",\n    description:\n      \"Your Light abilities deal increased damage to targets afflicted with Darkness debuffs.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Discipline, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2626922124,\n  },\n  [ModOrAbility.FacetOfDawn]: {\n    id: ModOrAbility.FacetOfDawn,\n    name: \"Facet of Dawn\",\n    description:\n      \"Powered melee hits against targets make you Radiant. Powered melee final blows make both you and nearby allies Radiant.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Strength, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2626922126,\n  },\n  [ModOrAbility.FacetOfDefiance]: {\n    id: ModOrAbility.FacetOfDefiance,\n    name: \"Facet of Defiance\",\n    description:\n      \"Finishers create a detonation that either jolts, scorches, slows, severs, or makes targets volatile based on the damage type of your equipped Super.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Recovery, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 74393640,\n  },\n  [ModOrAbility.FacetOfDevotion]: {\n    id: ModOrAbility.FacetOfDevotion,\n    name: \"Facet of Devotion\",\n    description:\n      \"Defeating targets afflicted with a Darkness debuff grants bonus Light Transcendence energy.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2626922125,\n  },\n  [ModOrAbility.FacetOfDominance]: {\n    id: ModOrAbility.FacetOfDominance,\n    name: \"Facet of Dominance\",\n    description: \"Your Void grenades weaken targets, and your Arc grenades jolt targets.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Discipline, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 124726504,\n  },\n  [ModOrAbility.FacetOfGrace]: {\n    id: ModOrAbility.FacetOfGrace,\n    name: \"Facet of Grace\",\n    description:\n      \"Defeating targets with Kinetic weapons grants you bonus Transcendence energy. Defeating targets with your Super grants you and nearby allies bonus Transcendence energy.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Resilience, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2626922121,\n  },\n  [ModOrAbility.FacetOfHonor]: {\n    id: ModOrAbility.FacetOfHonor,\n    name: \"Facet of Honor\",\n    description:\n      \"Collecting an elemental pickup or destroying a Tangle grants Transcendence energy of the same type.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 124726501,\n  },\n  [ModOrAbility.FacetOfJustice]: {\n    id: ModOrAbility.FacetOfJustice,\n    name: \"Facet of Justice\",\n    description: \"While Transcendent, your ability final blows explode.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Intellect, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2626922115,\n  },\n  [ModOrAbility.FacetOfProtection]: {\n    id: ModOrAbility.FacetOfProtection,\n    name: \"Facet of Protection\",\n    description: \"While surrounded by enemies, you are more resistant to incoming damage.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2626922120,\n  },\n  [ModOrAbility.FacetOfPurpose]: {\n    id: ModOrAbility.FacetOfPurpose,\n    name: \"Facet of Purpose\",\n    description:\n      \"Picking up an Orb of Power grants either Amplified, Restoration, Frost Armor, Woven Mail, or Overshield, based on the damage type of your equipped super.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Recovery, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 124726498,\n  },\n  [ModOrAbility.FacetOfRuin]: {\n    id: ModOrAbility.FacetOfRuin,\n    name: \"Facet of Ruin\",\n    description:\n      \"Increases the size and damage of the burst when you shatter a Stasis crystal or frozen target and increases the area of effect of Solar ignitions.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Mobility, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 124726499,\n  },\n  [ModOrAbility.FacetOfSacrifice]: {\n    id: ModOrAbility.FacetOfSacrifice,\n    name: \"Facet of Sacrifice\",\n    description:\n      \"While you have a Light buff, ability final blows grant bonus Darkness Transcendence energy.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Discipline, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 124726502,\n  },\n  // endregion Prismatic\n};\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport const MAXIMUM_STAT_MOD_AMOUNT = 5;\n\nexport const FORCE_USE_NO_EXOTIC = -1;\nexport const FORCE_USE_ANY_EXOTIC = -2;\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport enum ArmorSlot {\n  ArmorSlotNone,\n  ArmorSlotHelmet,\n  ArmorSlotGauntlet,\n  ArmorSlotChest,\n  ArmorSlotLegs,\n  ArmorSlotClass,\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EnumDictionary } from \"../types/EnumDictionary\";\nimport { DestinyClass } from \"bungie-api-ts/destiny2\";\nimport { ModifierType, Subclass } from \"./modifierType\";\n\nexport enum StatModifier {\n  NONE,\n  MINOR_MOBILITY,\n  MAJOR_MOBILITY,\n  ARTIFICE_MOBILITY,\n  MINOR_RESILIENCE,\n  MAJOR_RESILIENCE,\n  ARTIFICE_RESILIENCE,\n  MINOR_RECOVERY,\n  MAJOR_RECOVERY,\n  ARTIFICE_RECOVERY,\n  MINOR_DISCIPLINE,\n  MAJOR_DISCIPLINE,\n  ARTIFICE_DISCIPLINE,\n  MINOR_INTELLECT,\n  MAJOR_INTELLECT,\n  ARTIFICE_INTELLECT,\n  MINOR_STRENGTH,\n  MAJOR_STRENGTH,\n  ARTIFICE_STRENGTH,\n}\n\nexport enum ArmorStat {\n  Mobility,\n  Resilience,\n  Recovery,\n  Discipline,\n  Intellect,\n  Strength,\n}\n\n// Stat Enum, bonus, cost, mod hash\nexport const STAT_MOD_VALUES: EnumDictionary<StatModifier, [ArmorStat, number, number, number]> = {\n  [StatModifier.NONE]: [ArmorStat.Strength, 0, 0, 0],\n  [StatModifier.MINOR_MOBILITY]: [ArmorStat.Mobility, 5, 1, 1703647492],\n  [StatModifier.MAJOR_MOBILITY]: [ArmorStat.Mobility, 10, 3, 4183296050],\n  [StatModifier.ARTIFICE_MOBILITY]: [ArmorStat.Mobility, 3, 0, 2322202118],\n  [StatModifier.MINOR_RESILIENCE]: [ArmorStat.Resilience, 5, 2, 2532323436],\n  [StatModifier.MAJOR_RESILIENCE]: [ArmorStat.Resilience, 10, 4, 1180408010],\n  [StatModifier.ARTIFICE_RESILIENCE]: [ArmorStat.Resilience, 3, 0, 199176566],\n  [StatModifier.MINOR_RECOVERY]: [ArmorStat.Recovery, 5, 2, 1237786518],\n  [StatModifier.MAJOR_RECOVERY]: [ArmorStat.Recovery, 10, 4, 4204488676],\n  [StatModifier.ARTIFICE_RECOVERY]: [ArmorStat.Recovery, 3, 0, 539459624],\n  [StatModifier.MINOR_DISCIPLINE]: [ArmorStat.Discipline, 5, 1, 4021790309],\n  [StatModifier.MAJOR_DISCIPLINE]: [ArmorStat.Discipline, 10, 3, 1435557120],\n  [StatModifier.ARTIFICE_DISCIPLINE]: [ArmorStat.Discipline, 3, 0, 617569843],\n  [StatModifier.MINOR_INTELLECT]: [ArmorStat.Intellect, 5, 2, 350061697],\n  [StatModifier.MAJOR_INTELLECT]: [ArmorStat.Intellect, 10, 4, 2724608735],\n  [StatModifier.ARTIFICE_INTELLECT]: [ArmorStat.Intellect, 3, 0, 3160845295],\n  [StatModifier.MINOR_STRENGTH]: [ArmorStat.Strength, 5, 1, 2639422088],\n  [StatModifier.MAJOR_STRENGTH]: [ArmorStat.Strength, 10, 3, 4287799666],\n  [StatModifier.ARTIFICE_STRENGTH]: [ArmorStat.Strength, 3, 0, 2507624050],\n};\n\nexport const ArmorStatNames: EnumDictionary<ArmorStat, string> = {\n  [ArmorStat.Mobility]: \"Mobility\",\n  [ArmorStat.Resilience]: \"Resilience\",\n  [ArmorStat.Recovery]: \"Recovery\",\n  [ArmorStat.Discipline]: \"Discipline\",\n  [ArmorStat.Intellect]: \"Intellect\",\n  [ArmorStat.Strength]: \"Strength\",\n};\n\nexport const ArmorStatHashes: EnumDictionary<ArmorStat, number> = {\n  [ArmorStat.Mobility]: 2996146975,\n  [ArmorStat.Resilience]: 392767087,\n  [ArmorStat.Recovery]: 1943323491,\n  [ArmorStat.Discipline]: 1735777505,\n  [ArmorStat.Intellect]: 144602215,\n  [ArmorStat.Strength]: 4244567218,\n};\n\nexport const ArmorStatIconUrls: EnumDictionary<ArmorStat, string> = {\n  [ArmorStat.Mobility]:\n    \"https://www.bungie.net/common/destiny2_content/icons/e26e0e93a9daf4fdd21bf64eb9246340.png\",\n  [ArmorStat.Resilience]:\n    \"https://www.bungie.net/common/destiny2_content/icons/202ecc1c6febeb6b97dafc856e863140.png\",\n  [ArmorStat.Recovery]:\n    \"https://www.bungie.net/common/destiny2_content/icons/128eee4ee7fc127851ab32eac6ca91cf.png\",\n  [ArmorStat.Discipline]:\n    \"https://www.bungie.net/common/destiny2_content/icons/79be2d4adef6a19203f7385e5c63b45b.png\",\n  [ArmorStat.Intellect]:\n    \"https://www.bungie.net/common/destiny2_content/icons/d1c154469670e9a592c9d4cbdcae5764.png\",\n  [ArmorStat.Strength]:\n    \"https://www.bungie.net/common/destiny2_content/icons/ea5af04ccd6a3470a44fd7bb0f66e2f7.png\",\n};\n\nexport enum SpecialArmorStat {\n  ClassAbilityRegenerationStat = 10,\n}\n\nexport enum ArmorPerkOrSlot {\n  None,\n  SlotCrotasEnd = 2,\n  SlotRootOfNightmares,\n  SlotKingsFall,\n  SlotVowOfTheDisciple,\n  SlotVaultOfGlass,\n  SlotDeepStoneCrypt,\n  SlotGardenOfSalvation,\n  SlotLastWish,\n  SlotArtifice,\n  PerkIronBanner,\n  SlotNightmare,\n  // A special case just for guardian games class items.\n  GuardianGamesClassItem = 18,\n\n  PerkEchoesOfGlory = 20,\n  SlotSalvationsEdge,\n  SlotEidosApprentice,\n  COUNT,\n}\n\n// In the case that a perk has multiple possible hashes, we can use this to determine a mapping\nexport const MapAlternativeToArmorPerkOrSlot: EnumDictionary<number, ArmorPerkOrSlot> = {\n  [1760565003]: ArmorPerkOrSlot.PerkEchoesOfGlory,\n};\n\nexport const ArmorPerkOrSlotNames: EnumDictionary<ArmorPerkOrSlot, string> = {\n  [ArmorPerkOrSlot.None]: \"None\",\n  [ArmorPerkOrSlot.SlotCrotasEnd]: \"Crota's End Modslot\",\n  [ArmorPerkOrSlot.SlotRootOfNightmares]: \"Root of Nightmares Modslot\",\n  [ArmorPerkOrSlot.SlotKingsFall]: \"King's Fall Modslot\",\n  [ArmorPerkOrSlot.SlotVowOfTheDisciple]: \"Vow of the Disciple Modslot\",\n  [ArmorPerkOrSlot.SlotVaultOfGlass]: \"Vault of Glass Modslot\",\n  [ArmorPerkOrSlot.SlotDeepStoneCrypt]: \"Deep Stone Crypt Modslot\",\n  [ArmorPerkOrSlot.SlotGardenOfSalvation]: \"Garden of Salvation Modslot\",\n  [ArmorPerkOrSlot.SlotLastWish]: \"Last Wish Modslot\",\n  [ArmorPerkOrSlot.SlotArtifice]: \"Artifice Modslot\",\n  [ArmorPerkOrSlot.PerkIronBanner]: \"Iron Banner Perk\",\n  [ArmorPerkOrSlot.SlotNightmare]: \"Nightmare Hunt Modslot\",\n  [ArmorPerkOrSlot.GuardianGamesClassItem]: \"Guardian Games\",\n  [ArmorPerkOrSlot.PerkEchoesOfGlory]: \"Echoes of Glory Perk\",\n  [ArmorPerkOrSlot.SlotSalvationsEdge]: \"Salvation's Edge Modslot\",\n  [ArmorPerkOrSlot.SlotEidosApprentice]: \"Eido's Apprentice Perk\",\n  [ArmorPerkOrSlot.COUNT]: \"\",\n};\n\nexport const ArmorPerkOrSlotIcons: EnumDictionary<ArmorPerkOrSlot, string> = {\n  [ArmorPerkOrSlot.None]: \"https://www.bungie.net/img/misc/missing_icon_d2.png\",\n  //[ArmorPerkOrSlot.None]: \"https://www.bungie.net/common/destiny2_content/icons/58afd7d17e7b58883b94fd5ba2e66b76.png\",\n  [ArmorPerkOrSlot.SlotCrotasEnd]:\n    \"https://www.bungie.net/common/destiny2_content/icons/7ddce334fe8391848f408227439c1d7a.png\",\n  [ArmorPerkOrSlot.SlotRootOfNightmares]:\n    \"https://www.bungie.net/common/destiny2_content/icons/f2b6ec58e14244e4972705897667c246.png\",\n  [ArmorPerkOrSlot.SlotKingsFall]:\n    \"https://www.bungie.net/common/destiny2_content/icons/0e515c7cf25a2f2350b788e6f5b7f8eb.png\",\n  [ArmorPerkOrSlot.SlotVowOfTheDisciple]:\n    \"https://www.bungie.net/common/destiny2_content/icons/b84b6ea72dd05de7123aa2ae87ba0d6a.png\",\n  [ArmorPerkOrSlot.SlotVaultOfGlass]:\n    \"https://www.bungie.net/common/destiny2_content/icons/7c9a2d95113de19c5acdbed57775abf4.png\",\n  [ArmorPerkOrSlot.SlotDeepStoneCrypt]:\n    \"https://www.bungie.net/common/destiny2_content/icons/d6452d010cfe72a51a9089ec68ab223c.png\",\n  [ArmorPerkOrSlot.SlotGardenOfSalvation]:\n    \"https://www.bungie.net/common/destiny2_content/icons/53d6e3505cd03d4026b3dbbd9ccc19b6.jpg\",\n  [ArmorPerkOrSlot.SlotLastWish]:\n    \"https://www.bungie.net/common/destiny2_content/icons/76f0c1520fa384ceb27bd2469225dd8a.png\",\n  [ArmorPerkOrSlot.SlotArtifice]:\n    \"https://www.bungie.net/common/destiny2_content/icons/46eec78bb7864641bbd7ba1fd4f9f248.png\",\n  [ArmorPerkOrSlot.PerkIronBanner]:\n    \"https://bungie.net/common/destiny2_content/icons/DestinyActivityModeDefinition_fe57052d7cf971f7502daa75a2ca2437.png\",\n  [ArmorPerkOrSlot.SlotNightmare]:\n    \"https://www.bungie.net/common/destiny2_content/icons/53d6e3505cd03d4026b3dbbd9ccc19b6.jpg\",\n  [ArmorPerkOrSlot.GuardianGamesClassItem]:\n    \"https://www.bungie.net/common/destiny2_content/icons/DestinyEventCardDefinition_ce6c2cf855dce694bcc89803b6bc44b7.png\",\n  [ArmorPerkOrSlot.SlotSalvationsEdge]:\n    \"https://www.bungie.net/common/destiny2_content/icons/f4a1f99b49ecf412726d71ea9ee15540.png\",\n  [ArmorPerkOrSlot.PerkEchoesOfGlory]:\n    \"https://www.bungie.net/common/destiny2_content/icons/c67322c917e16f3b8a4cb962e3f11166.png\",\n  [ArmorPerkOrSlot.SlotEidosApprentice]:\n    \"https://www.bungie.net/common/destiny2_content/icons/e083d8a85c2c60825204d14b9e9263b7.png\",\n  [ArmorPerkOrSlot.COUNT]: \"\",\n};\n\n// List of armorInventoryItem.sockets.socketEntries[n].singleInitialItemHash values for each type\n// GuardianGamesClassItem is excluded as these are checked by item hash\nexport const ArmorPerkSocketHashes: EnumDictionary<\n  Exclude<\n    ArmorPerkOrSlot,\n    ArmorPerkOrSlot.GuardianGamesClassItem | ArmorPerkOrSlot.None | ArmorPerkOrSlot.COUNT\n  >,\n  number\n> = {\n  [ArmorPerkOrSlot.SlotCrotasEnd]: 717667840,\n  [ArmorPerkOrSlot.SlotRootOfNightmares]: 4144354978,\n  [ArmorPerkOrSlot.SlotKingsFall]: 1728096240,\n  [ArmorPerkOrSlot.SlotVowOfTheDisciple]: 2447143568,\n  [ArmorPerkOrSlot.SlotVaultOfGlass]: 3738398030,\n  [ArmorPerkOrSlot.SlotDeepStoneCrypt]: 4055462131,\n  [ArmorPerkOrSlot.SlotGardenOfSalvation]: 706611068,\n  [ArmorPerkOrSlot.SlotLastWish]: 1679876242,\n  [ArmorPerkOrSlot.SlotArtifice]: 3727270518,\n  [ArmorPerkOrSlot.PerkIronBanner]: 2472875850,\n  [ArmorPerkOrSlot.SlotNightmare]: 1180997867,\n  [ArmorPerkOrSlot.SlotSalvationsEdge]: 4059283783,\n  [ArmorPerkOrSlot.PerkEchoesOfGlory]: 2352831367,\n  [ArmorPerkOrSlot.SlotEidosApprentice]: 273417606,\n};\n\nexport const ArmorPerkOrSlotDIMText: EnumDictionary<\n  Exclude<ArmorPerkOrSlot, ArmorPerkOrSlot.None | ArmorPerkOrSlot.COUNT>,\n  string\n> = {\n  [ArmorPerkOrSlot.SlotCrotasEnd]: \"modslot:crotasend\",\n  [ArmorPerkOrSlot.SlotRootOfNightmares]: \"modslot:rootofnightmares\",\n  [ArmorPerkOrSlot.SlotKingsFall]: \"modslot:kingsfall\",\n  [ArmorPerkOrSlot.SlotVowOfTheDisciple]: \"modslot:vowofthedisciple\",\n  [ArmorPerkOrSlot.SlotVaultOfGlass]: \"modslot:vaultofglass\",\n  [ArmorPerkOrSlot.SlotDeepStoneCrypt]: \"modslot:deepstonecrypt\",\n  [ArmorPerkOrSlot.SlotGardenOfSalvation]: \"modslot:gardenofsalvation\",\n  [ArmorPerkOrSlot.SlotLastWish]: \"modslot:lastwish\",\n  [ArmorPerkOrSlot.SlotArtifice]: 'perkname:\"artifice armor\"',\n  [ArmorPerkOrSlot.PerkIronBanner]: 'perkname:\"iron lord\\'s pride\"',\n  [ArmorPerkOrSlot.SlotNightmare]: \"modslot:nightmare\",\n  [ArmorPerkOrSlot.GuardianGamesClassItem]: \"(hash:537041732 or hash:366019830 or hash:1013401891)\",\n  [ArmorPerkOrSlot.PerkEchoesOfGlory]: 'exactperk:\"echoes of glory\"',\n  [ArmorPerkOrSlot.SlotSalvationsEdge]: \"(source:salvationsedge is:armor)\",\n  [ArmorPerkOrSlot.SlotEidosApprentice]: 'perkname:\"eido\\'s apprentice\"',\n};\n\nexport const SubclassHashes: EnumDictionary<\n  Exclude<DestinyClass, DestinyClass.Unknown>,\n  EnumDictionary<Subclass, number>\n> = {\n  [DestinyClass.Hunter]: {\n    [ModifierType.Stasis]: 873720784,\n    [ModifierType.Void]: 2453351420,\n    [ModifierType.Solar]: 2240888816,\n    [ModifierType.Arc]: 2328211300,\n    [ModifierType.Strand]: 3785442599,\n    [ModifierType.Prismatic]: 4282591831,\n  },\n  [DestinyClass.Titan]: {\n    [ModifierType.Stasis]: 613647804,\n    [ModifierType.Void]: 2842471112,\n    [ModifierType.Solar]: 2550323932,\n    [ModifierType.Arc]: 2932390016,\n    [ModifierType.Strand]: 242419885,\n    [ModifierType.Prismatic]: 1616346845,\n  },\n  [DestinyClass.Warlock]: {\n    [ModifierType.Stasis]: 3291545503,\n    [ModifierType.Void]: 2849050827,\n    [ModifierType.Solar]: 3941205951,\n    [ModifierType.Arc]: 3168997075,\n    [ModifierType.Strand]: 4204413574,\n    [ModifierType.Prismatic]: 3893112950,\n  },\n};\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport enum ModOptimizationStrategy {\n  None = 0,\n  ReduceUsedModSockets,\n  ReduceUsedModPoints,\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport enum ModOrAbility {\n  WhisperOfDurance = 1000,\n  WhisperOfChains,\n  WhisperOfConduction,\n  // WhisperOfShards,\n\n  // WhisperOfHedrons = 1100,\n  WhisperOfBonds = 1101,\n  WhisperOfHunger,\n  WhisperOfFractures,\n  WhisperOfTorment,\n\n  // VOID\n  EchoOfExpulsion = 1200,\n  EchoOfProvision,\n  EchoOfPersistence,\n  EchoOfLeeching,\n  EchoOfDomineering,\n  EchoOfDilation,\n  EchoOfUndermining,\n\n  EchoOfInstability, //+10 str\n  EchoOfHarvest,\n  EchoOfObscurity, //+10rec\n  EchoOfStarvation,\n  EchoOfVigilance,\n\n  // SOLAR\n  EmberOfBenelovence = 1300,\n  EmberOfBeams,\n  EmberOfEmpyrean,\n  EmberOfCombustion,\n  EmberOfChar,\n  EmberOfTempering,\n  EmberOfEruption,\n  EmberOfWonder,\n  EmberOfSearing,\n  EmberOfTorches,\n  EmberOfMercy,\n  //EchoOfExchange ,\n  //EchoOfRemnants,\n  //EchoOfReprisal,\n\n  SparkOfBrilliance = 1400,\n  SparkOfFeedback,\n  SparkOfDischarge,\n  SparkOfFocus,\n  SparkOfVolts,\n  SparkOfResistance,\n  SparkOfShock,\n\n  // Artifact mods,\n  //MobileRetrofit = 1500, // +5 Mobility\n  //ResilientRetrofit, // +5 Resilience\n\n  // Strand\n  ThreadOfFury = 1600,\n  ThreadOfAscent,\n  ThreadOfFinality,\n  ThreadOfWarding,\n  ThreadOfTransmutation,\n  ThreadOfEvolution,\n  ThreadOfBinding,\n  ThreadOfGeneration,\n  ThreadOfPropagation,\n\n  // These names are mapped to the fragment hash\n  WhisperOfImpetus = 537774543,\n\n  // Prismatic\n  FacetOfAwakening = 1700,\n  FacetOfCourage,\n  FacetOfDawn,\n  FacetOfDefiance,\n  FacetOfDevotion,\n  FacetOfDominance,\n  FacetOfGrace,\n  FacetOfHonor,\n  FacetOfJustice,\n  FacetOfProtection,\n  FacetOfPurpose,\n  FacetOfRuin,\n  FacetOfSacrifice,\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EnumDictionary } from \"../types/EnumDictionary\";\n\nexport enum ModifierType {\n  CombatStyleMod,\n  Stasis,\n  Void,\n  Solar,\n  Arc,\n  Strand,\n  Prismatic,\n}\n\nexport type Subclass = Exclude<ModifierType, ModifierType.CombatStyleMod>;\n\nexport const SubclassNames: EnumDictionary<Subclass, string> = {\n  [ModifierType.Arc]: \"Arc\",\n  [ModifierType.Solar]: \"Solar\",\n  [ModifierType.Void]: \"Void\",\n  [ModifierType.Stasis]: \"Stasis\",\n  [ModifierType.Strand]: \"Strand\",\n  [ModifierType.Prismatic]: \"Prismatic\",\n};\n","export const environment = {\n  \"version\": \"2.7.2\",\n  \"revision\": \"9a18390\",\n  \"production\": true,\n  \"beta\": false,\n  \"canary\": false,\n  \"apiKey\": \"9415df8eff46408aa9c0d51e4d69b94f\",\n  \"clientId\": \"37252\",\n  \"client_secret\": \"KnVcJPWr7C5y0loOfBoKSyQ-vWXR0JICrgb1aJLsLgg\",\n  \"offlineMode\": false,\n  \"highlight_project_id\": \"0\",\n  \"featureFlags\": {\n    \"enableModslotLimitation\": true,\n    \"enableZeroWaste\": true,\n    \"enableGuardianGamesFeatures\": false\n  }\n};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n// Dicts: [artifice, minor, major, total]\n\nexport const precalculatedZeroWasteModCombinations: {\n  [key: number]: [number, number, number, number][];\n} = {\n  1: [\n    [2, 1, 0, 11],\n    [2, 3, 0, 21],\n    [2, 1, 1, 21],\n    [2, 1, 2, 31],\n  ],\n  2: [\n    [4, 0, 0, 12],\n    [4, 2, 0, 22],\n    [4, 0, 1, 22],\n    [4, 4, 0, 32],\n    [4, 0, 2, 32],\n  ],\n  3: [\n    [1, 0, 0, 3],\n    [1, 2, 0, 13],\n    [1, 0, 1, 13],\n    [1, 4, 0, 23],\n    [1, 2, 1, 23],\n    [1, 0, 2, 23],\n    [1, 2, 2, 33],\n  ],\n  4: [\n    [3, 1, 0, 14],\n    [3, 3, 0, 24],\n    [3, 1, 1, 24],\n    [3, 1, 2, 34],\n  ],\n  5: [\n    [0, 1, 0, 5],\n    [5, 0, 0, 15],\n    [0, 3, 0, 15],\n    [0, 1, 1, 15],\n    [5, 2, 0, 25],\n    [5, 0, 1, 25],\n    [0, 3, 1, 25],\n    [0, 1, 2, 25],\n    [5, 4, 0, 35],\n    [5, 0, 2, 35],\n    [0, 3, 2, 35],\n  ],\n  6: [\n    [2, 0, 0, 6],\n    [2, 2, 0, 16],\n    [2, 0, 1, 16],\n    [2, 4, 0, 26],\n    [2, 2, 1, 26],\n    [2, 0, 2, 26],\n    [2, 2, 2, 36],\n    [2, 0, 3, 36],\n    [2, 2, 3, 46],\n  ],\n  7: [\n    [4, 1, 0, 17],\n    [4, 3, 0, 27],\n    [4, 1, 1, 27],\n    [4, 5, 0, 37],\n    [4, 1, 2, 37],\n    [4, 1, 3, 47],\n  ],\n  8: [\n    [1, 1, 0, 8],\n    [1, 3, 0, 18],\n    [1, 1, 1, 18],\n    [1, 5, 0, 28],\n    [1, 3, 1, 28],\n    [1, 1, 2, 28],\n    [1, 3, 2, 38],\n    [1, 1, 3, 38],\n  ],\n  9: [\n    [3, 0, 0, 9],\n    [3, 2, 0, 19],\n    [3, 0, 1, 19],\n    [3, 4, 0, 29],\n    [3, 2, 1, 29],\n    [3, 0, 2, 29],\n    [3, 2, 2, 39],\n    [3, 0, 3, 39],\n    [3, 2, 3, 49],\n  ],\n  10: [\n    [0, 2, 0, 10],\n    [0, 0, 1, 10],\n    [5, 1, 0, 20],\n    [0, 4, 0, 20],\n    [0, 2, 1, 20],\n    [0, 0, 2, 20],\n    [5, 3, 0, 30],\n    [5, 1, 1, 30],\n    [0, 4, 1, 30],\n    [0, 2, 2, 30],\n    [0, 0, 3, 30],\n    [5, 5, 0, 40],\n    [5, 1, 2, 40],\n    [0, 2, 3, 40],\n    [5, 1, 3, 50],\n  ],\n  11: [\n    [2, 1, 0, 11],\n    [2, 3, 0, 21],\n    [2, 1, 1, 21],\n    [2, 5, 0, 31],\n    [2, 3, 1, 31],\n    [2, 1, 2, 31],\n    [2, 3, 2, 41],\n    [2, 1, 3, 41],\n  ],\n  12: [\n    [4, 0, 0, 12],\n    [4, 2, 0, 22],\n    [4, 0, 1, 22],\n    [4, 4, 0, 32],\n    [4, 2, 1, 32],\n    [4, 0, 2, 32],\n    [4, 2, 2, 42],\n    [4, 0, 3, 42],\n    [4, 2, 3, 52],\n  ],\n  13: [\n    [1, 2, 0, 13],\n    [1, 0, 1, 13],\n    [1, 4, 0, 23],\n    [1, 2, 1, 23],\n    [1, 0, 2, 23],\n    [1, 4, 1, 33],\n    [1, 2, 2, 33],\n    [1, 0, 3, 33],\n    [1, 2, 3, 43],\n  ],\n  14: [\n    [3, 1, 0, 14],\n    [3, 3, 0, 24],\n    [3, 1, 1, 24],\n    [3, 5, 0, 34],\n    [3, 3, 1, 34],\n    [3, 1, 2, 34],\n    [3, 3, 2, 44],\n    [3, 1, 3, 44],\n  ],\n  15: [\n    [5, 0, 0, 15],\n    [0, 3, 0, 15],\n    [0, 1, 1, 15],\n    [5, 2, 0, 25],\n    [0, 5, 0, 25],\n    [5, 0, 1, 25],\n    [0, 3, 1, 25],\n    [0, 1, 2, 25],\n    [5, 4, 0, 35],\n    [5, 2, 1, 35],\n    [5, 0, 2, 35],\n    [0, 3, 2, 35],\n    [0, 1, 3, 35],\n    [5, 2, 2, 45],\n    [5, 0, 3, 45],\n    [5, 2, 3, 55],\n  ],\n  16: [\n    [2, 2, 0, 16],\n    [2, 0, 1, 16],\n    [2, 4, 0, 26],\n    [2, 2, 1, 26],\n    [2, 0, 2, 26],\n    [2, 4, 1, 36],\n    [2, 2, 2, 36],\n    [2, 0, 3, 36],\n    [2, 2, 3, 46],\n    [2, 0, 4, 46],\n  ],\n  17: [\n    [4, 1, 0, 17],\n    [4, 3, 0, 27],\n    [4, 1, 1, 27],\n    [4, 5, 0, 37],\n    [4, 3, 1, 37],\n    [4, 1, 2, 37],\n    [4, 3, 2, 47],\n    [4, 1, 3, 47],\n    [4, 1, 4, 57],\n  ],\n  18: [\n    [1, 3, 0, 18],\n    [1, 1, 1, 18],\n    [1, 5, 0, 28],\n    [1, 3, 1, 28],\n    [1, 1, 2, 28],\n    [1, 3, 2, 38],\n    [1, 1, 3, 38],\n    [1, 1, 4, 48],\n  ],\n  19: [\n    [3, 2, 0, 19],\n    [3, 0, 1, 19],\n    [3, 4, 0, 29],\n    [3, 2, 1, 29],\n    [3, 0, 2, 29],\n    [3, 4, 1, 39],\n    [3, 2, 2, 39],\n    [3, 0, 3, 39],\n    [3, 2, 3, 49],\n    [3, 0, 4, 49],\n  ],\n  20: [\n    [5, 1, 0, 20],\n    [0, 4, 0, 20],\n    [0, 2, 1, 20],\n    [0, 0, 2, 20],\n    [5, 3, 0, 30],\n    [5, 1, 1, 30],\n    [0, 4, 1, 30],\n    [0, 2, 2, 30],\n    [0, 0, 3, 30],\n    [5, 5, 0, 40],\n    [5, 3, 1, 40],\n    [5, 1, 2, 40],\n    [0, 2, 3, 40],\n    [0, 0, 4, 40],\n    [5, 3, 2, 50],\n    [5, 1, 3, 50],\n    [5, 1, 4, 60],\n  ],\n  21: [\n    [2, 3, 0, 21],\n    [2, 1, 1, 21],\n    [2, 5, 0, 31],\n    [2, 3, 1, 31],\n    [2, 1, 2, 31],\n    [2, 3, 2, 41],\n    [2, 1, 3, 41],\n    [2, 1, 4, 51],\n  ],\n  22: [\n    [4, 2, 0, 22],\n    [4, 0, 1, 22],\n    [4, 4, 0, 32],\n    [4, 2, 1, 32],\n    [4, 0, 2, 32],\n    [4, 4, 1, 42],\n    [4, 2, 2, 42],\n    [4, 0, 3, 42],\n    [4, 2, 3, 52],\n    [4, 0, 4, 52],\n  ],\n  23: [\n    [1, 4, 0, 23],\n    [1, 2, 1, 23],\n    [1, 0, 2, 23],\n    [1, 4, 1, 33],\n    [1, 2, 2, 33],\n    [1, 0, 3, 33],\n    [1, 2, 3, 43],\n    [1, 0, 4, 43],\n  ],\n  24: [\n    [3, 3, 0, 24],\n    [3, 1, 1, 24],\n    [3, 5, 0, 34],\n    [3, 3, 1, 34],\n    [3, 1, 2, 34],\n    [3, 3, 2, 44],\n    [3, 1, 3, 44],\n    [3, 1, 4, 54],\n  ],\n  25: [\n    [5, 2, 0, 25],\n    [0, 5, 0, 25],\n    [5, 0, 1, 25],\n    [0, 3, 1, 25],\n    [0, 1, 2, 25],\n    [5, 4, 0, 35],\n    [5, 2, 1, 35],\n    [5, 0, 2, 35],\n    [0, 3, 2, 35],\n    [0, 1, 3, 35],\n    [5, 4, 1, 45],\n    [5, 2, 2, 45],\n    [5, 0, 3, 45],\n    [0, 1, 4, 45],\n    [5, 2, 3, 55],\n    [5, 0, 4, 55],\n  ],\n  26: [\n    [2, 4, 0, 26],\n    [2, 2, 1, 26],\n    [2, 0, 2, 26],\n    [2, 4, 1, 36],\n    [2, 2, 2, 36],\n    [2, 0, 3, 36],\n    [2, 2, 3, 46],\n    [2, 0, 4, 46],\n    [2, 0, 5, 56],\n  ],\n  27: [\n    [4, 3, 0, 27],\n    [4, 1, 1, 27],\n    [4, 5, 0, 37],\n    [4, 3, 1, 37],\n    [4, 1, 2, 37],\n    [4, 3, 2, 47],\n    [4, 1, 3, 47],\n    [4, 1, 4, 57],\n  ],\n  28: [\n    [1, 5, 0, 28],\n    [1, 3, 1, 28],\n    [1, 1, 2, 28],\n    [1, 3, 2, 38],\n    [1, 1, 3, 38],\n    [1, 1, 4, 48],\n  ],\n  29: [\n    [3, 4, 0, 29],\n    [3, 2, 1, 29],\n    [3, 0, 2, 29],\n    [3, 4, 1, 39],\n    [3, 2, 2, 39],\n    [3, 0, 3, 39],\n    [3, 2, 3, 49],\n    [3, 0, 4, 49],\n    [3, 0, 5, 59],\n  ],\n  30: [\n    [5, 3, 0, 30],\n    [5, 1, 1, 30],\n    [0, 4, 1, 30],\n    [0, 2, 2, 30],\n    [0, 0, 3, 30],\n    [5, 5, 0, 40],\n    [5, 3, 1, 40],\n    [5, 1, 2, 40],\n    [0, 2, 3, 40],\n    [0, 0, 4, 40],\n    [5, 3, 2, 50],\n    [5, 1, 3, 50],\n    [0, 0, 5, 50],\n    [5, 1, 4, 60],\n  ],\n  31: [\n    [2, 5, 0, 31],\n    [2, 3, 1, 31],\n    [2, 1, 2, 31],\n    [2, 3, 2, 41],\n    [2, 1, 3, 41],\n    [2, 1, 4, 51],\n  ],\n  32: [\n    [4, 4, 0, 32],\n    [4, 2, 1, 32],\n    [4, 0, 2, 32],\n    [4, 4, 1, 42],\n    [4, 2, 2, 42],\n    [4, 0, 3, 42],\n    [4, 2, 3, 52],\n    [4, 0, 4, 52],\n    [4, 0, 5, 62],\n  ],\n  33: [\n    [1, 4, 1, 33],\n    [1, 2, 2, 33],\n    [1, 0, 3, 33],\n    [1, 2, 3, 43],\n    [1, 0, 4, 43],\n    [1, 0, 5, 53],\n  ],\n  34: [\n    [3, 5, 0, 34],\n    [3, 3, 1, 34],\n    [3, 1, 2, 34],\n    [3, 3, 2, 44],\n    [3, 1, 3, 44],\n    [3, 1, 4, 54],\n  ],\n  35: [\n    [5, 4, 0, 35],\n    [5, 2, 1, 35],\n    [5, 0, 2, 35],\n    [0, 3, 2, 35],\n    [0, 1, 3, 35],\n    [5, 4, 1, 45],\n    [5, 2, 2, 45],\n    [5, 0, 3, 45],\n    [0, 1, 4, 45],\n    [5, 2, 3, 55],\n    [5, 0, 4, 55],\n    [5, 0, 5, 65],\n  ],\n  36: [\n    [2, 4, 1, 36],\n    [2, 2, 2, 36],\n    [2, 0, 3, 36],\n    [2, 2, 3, 46],\n    [2, 0, 4, 46],\n    [2, 0, 5, 56],\n  ],\n  37: [\n    [4, 5, 0, 37],\n    [4, 3, 1, 37],\n    [4, 1, 2, 37],\n    [4, 3, 2, 47],\n    [4, 1, 3, 47],\n    [4, 1, 4, 57],\n  ],\n  38: [\n    [1, 3, 2, 38],\n    [1, 1, 3, 38],\n    [1, 1, 4, 48],\n  ],\n  39: [\n    [3, 4, 1, 39],\n    [3, 2, 2, 39],\n    [3, 0, 3, 39],\n    [3, 2, 3, 49],\n    [3, 0, 4, 49],\n    [3, 0, 5, 59],\n  ],\n  40: [\n    [5, 5, 0, 40],\n    [5, 3, 1, 40],\n    [5, 1, 2, 40],\n    [0, 2, 3, 40],\n    [0, 0, 4, 40],\n    [5, 3, 2, 50],\n    [5, 1, 3, 50],\n    [0, 0, 5, 50],\n    [5, 1, 4, 60],\n  ],\n  41: [\n    [2, 3, 2, 41],\n    [2, 1, 3, 41],\n    [2, 1, 4, 51],\n  ],\n  42: [\n    [4, 4, 1, 42],\n    [4, 2, 2, 42],\n    [4, 0, 3, 42],\n    [4, 2, 3, 52],\n    [4, 0, 4, 52],\n    [4, 0, 5, 62],\n  ],\n  43: [\n    [1, 2, 3, 43],\n    [1, 0, 4, 43],\n    [1, 0, 5, 53],\n  ],\n  44: [\n    [3, 3, 2, 44],\n    [3, 1, 3, 44],\n    [3, 1, 4, 54],\n  ],\n  45: [\n    [5, 4, 1, 45],\n    [5, 2, 2, 45],\n    [5, 0, 3, 45],\n    [0, 1, 4, 45],\n    [5, 2, 3, 55],\n    [5, 0, 4, 55],\n    [5, 0, 5, 65],\n  ],\n  46: [\n    [2, 2, 3, 46],\n    [2, 0, 4, 46],\n    [2, 0, 5, 56],\n  ],\n  47: [\n    [4, 3, 2, 47],\n    [4, 1, 3, 47],\n    [4, 1, 4, 57],\n  ],\n  48: [[1, 1, 4, 48]],\n  49: [\n    [3, 2, 3, 49],\n    [3, 0, 4, 49],\n    [3, 0, 5, 59],\n  ],\n  50: [\n    [5, 3, 2, 50],\n    [5, 1, 3, 50],\n    [0, 0, 5, 50],\n    [5, 1, 4, 60],\n  ],\n  51: [[2, 1, 4, 51]],\n  52: [\n    [4, 2, 3, 52],\n    [4, 0, 4, 52],\n    [4, 0, 5, 62],\n  ],\n  53: [[1, 0, 5, 53]],\n  54: [[3, 1, 4, 54]],\n  55: [\n    [5, 2, 3, 55],\n    [5, 0, 4, 55],\n    [5, 0, 5, 65],\n  ],\n  56: [[2, 0, 5, 56]],\n  57: [[4, 1, 4, 57]],\n  58: [],\n  59: [[3, 0, 5, 59]],\n  60: [[5, 1, 4, 60]],\n  61: [],\n  62: [[4, 0, 5, 62]],\n  63: [],\n  64: [],\n  65: [[5, 0, 5, 65]],\n};\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n// Dicts: [artifice, minor, major, total]\n\nexport const precalculatedModCombinations: { [key: number]: [number, number, number, number][] } = {\n  1: [\n    [1, 0, 0, 3],\n    [0, 1, 0, 5],\n    [0, 0, 1, 10],\n  ],\n  2: [\n    [1, 0, 0, 3],\n    [0, 1, 0, 5],\n    [0, 0, 1, 10],\n  ],\n  3: [\n    [1, 0, 0, 3],\n    [0, 1, 0, 5],\n    [0, 0, 1, 10],\n  ],\n  4: [\n    [0, 1, 0, 5],\n    [2, 0, 0, 6],\n    [0, 0, 1, 10],\n  ],\n  5: [\n    [0, 1, 0, 5],\n    [2, 0, 0, 6],\n    [0, 0, 1, 10],\n  ],\n  6: [\n    [2, 0, 0, 6],\n    [1, 1, 0, 8],\n    [0, 2, 0, 10],\n    [0, 0, 1, 10],\n  ],\n  7: [\n    [1, 1, 0, 8],\n    [3, 0, 0, 9],\n    [0, 2, 0, 10],\n    [0, 0, 1, 10],\n  ],\n  8: [\n    [1, 1, 0, 8],\n    [3, 0, 0, 9],\n    [0, 2, 0, 10],\n    [0, 0, 1, 10],\n  ],\n  9: [\n    [3, 0, 0, 9],\n    [0, 2, 0, 10],\n    [0, 0, 1, 10],\n    [2, 1, 0, 11],\n  ],\n  10: [\n    [0, 2, 0, 10],\n    [0, 0, 1, 10],\n    [2, 1, 0, 11],\n    [4, 0, 0, 12],\n  ],\n  11: [\n    [2, 1, 0, 11],\n    [4, 0, 0, 12],\n    [1, 2, 0, 13],\n    [1, 0, 1, 13],\n    [0, 3, 0, 15],\n    [0, 1, 1, 15],\n    [0, 0, 2, 20],\n  ],\n  12: [\n    [4, 0, 0, 12],\n    [1, 2, 0, 13],\n    [1, 0, 1, 13],\n    [3, 1, 0, 14],\n    [0, 3, 0, 15],\n    [0, 1, 1, 15],\n    [0, 0, 2, 20],\n  ],\n  13: [\n    [1, 2, 0, 13],\n    [1, 0, 1, 13],\n    [3, 1, 0, 14],\n    [5, 0, 0, 15],\n    [0, 3, 0, 15],\n    [0, 1, 1, 15],\n    [0, 0, 2, 20],\n  ],\n  14: [\n    [3, 1, 0, 14],\n    [5, 0, 0, 15],\n    [0, 3, 0, 15],\n    [0, 1, 1, 15],\n    [2, 2, 0, 16],\n    [2, 0, 1, 16],\n    [0, 0, 2, 20],\n  ],\n  15: [\n    [5, 0, 0, 15],\n    [0, 3, 0, 15],\n    [0, 1, 1, 15],\n    [2, 2, 0, 16],\n    [2, 0, 1, 16],\n    [4, 1, 0, 17],\n    [0, 0, 2, 20],\n  ],\n  16: [\n    [2, 2, 0, 16],\n    [2, 0, 1, 16],\n    [4, 1, 0, 17],\n    [1, 3, 0, 18],\n    [1, 1, 1, 18],\n    [0, 4, 0, 20],\n    [0, 2, 1, 20],\n    [0, 0, 2, 20],\n  ],\n  17: [\n    [4, 1, 0, 17],\n    [1, 3, 0, 18],\n    [1, 1, 1, 18],\n    [3, 2, 0, 19],\n    [3, 0, 1, 19],\n    [0, 4, 0, 20],\n    [0, 2, 1, 20],\n    [0, 0, 2, 20],\n  ],\n  18: [\n    [1, 1, 1, 18],\n    [1, 3, 0, 18],\n    [3, 2, 0, 19],\n    [3, 0, 1, 19],\n    [5, 1, 0, 20],\n    [0, 4, 0, 20],\n    [0, 2, 1, 20],\n    [0, 0, 2, 20],\n  ],\n  19: [\n    [3, 2, 0, 19],\n    [3, 0, 1, 19],\n    [5, 1, 0, 20],\n    [0, 4, 0, 20],\n    [0, 2, 1, 20],\n    [0, 0, 2, 20],\n    [2, 3, 0, 21],\n    [2, 1, 1, 21],\n  ],\n  20: [\n    [5, 1, 0, 20],\n    [0, 4, 0, 20],\n    [0, 2, 1, 20],\n    [0, 0, 2, 20],\n    [2, 3, 0, 21],\n    [2, 1, 1, 21],\n    [4, 2, 0, 22],\n    [4, 0, 1, 22],\n  ],\n  21: [\n    [2, 3, 0, 21],\n    [2, 1, 1, 21],\n    [4, 2, 0, 22],\n    [4, 0, 1, 22],\n    [1, 4, 0, 23],\n    [1, 2, 1, 23],\n    [1, 0, 2, 23],\n    [0, 5, 0, 25],\n    [0, 3, 1, 25],\n    [0, 1, 2, 25],\n    [0, 0, 3, 30],\n  ],\n  22: [\n    [4, 2, 0, 22],\n    [4, 0, 1, 22],\n    [1, 4, 0, 23],\n    [1, 2, 1, 23],\n    [1, 0, 2, 23],\n    [3, 3, 0, 24],\n    [3, 1, 1, 24],\n    [0, 5, 0, 25],\n    [0, 3, 1, 25],\n    [0, 1, 2, 25],\n    [0, 0, 3, 30],\n  ],\n  23: [\n    [1, 4, 0, 23],\n    [1, 2, 1, 23],\n    [1, 0, 2, 23],\n    [3, 3, 0, 24],\n    [3, 1, 1, 24],\n    [5, 2, 0, 25],\n    [0, 5, 0, 25],\n    [5, 0, 1, 25],\n    [0, 3, 1, 25],\n    [0, 1, 2, 25],\n    [0, 0, 3, 30],\n  ],\n  24: [\n    [3, 3, 0, 24],\n    [3, 1, 1, 24],\n    [5, 2, 0, 25],\n    [0, 5, 0, 25],\n    [5, 0, 1, 25],\n    [0, 3, 1, 25],\n    [0, 1, 2, 25],\n    [2, 4, 0, 26],\n    [2, 2, 1, 26],\n    [2, 0, 2, 26],\n    [0, 0, 3, 30],\n  ],\n  25: [\n    [5, 2, 0, 25],\n    [0, 5, 0, 25],\n    [5, 0, 1, 25],\n    [0, 3, 1, 25],\n    [0, 1, 2, 25],\n    [2, 4, 0, 26],\n    [2, 2, 1, 26],\n    [2, 0, 2, 26],\n    [4, 3, 0, 27],\n    [4, 1, 1, 27],\n    [0, 0, 3, 30],\n  ],\n  26: [\n    [2, 4, 0, 26],\n    [2, 2, 1, 26],\n    [2, 0, 2, 26],\n    [4, 3, 0, 27],\n    [4, 1, 1, 27],\n    [1, 5, 0, 28],\n    [1, 3, 1, 28],\n    [1, 1, 2, 28],\n    [0, 4, 1, 30],\n    [0, 2, 2, 30],\n    [0, 0, 3, 30],\n  ],\n  27: [\n    [4, 3, 0, 27],\n    [4, 1, 1, 27],\n    [1, 5, 0, 28],\n    [1, 3, 1, 28],\n    [1, 1, 2, 28],\n    [3, 4, 0, 29],\n    [3, 2, 1, 29],\n    [3, 0, 2, 29],\n    [0, 4, 1, 30],\n    [0, 2, 2, 30],\n    [0, 0, 3, 30],\n  ],\n  28: [\n    [1, 5, 0, 28],\n    [1, 3, 1, 28],\n    [1, 1, 2, 28],\n    [3, 4, 0, 29],\n    [3, 2, 1, 29],\n    [3, 0, 2, 29],\n    [5, 3, 0, 30],\n    [5, 1, 1, 30],\n    [0, 4, 1, 30],\n    [0, 2, 2, 30],\n    [0, 0, 3, 30],\n  ],\n  29: [\n    [3, 4, 0, 29],\n    [3, 2, 1, 29],\n    [3, 0, 2, 29],\n    [5, 3, 0, 30],\n    [5, 1, 1, 30],\n    [0, 4, 1, 30],\n    [0, 2, 2, 30],\n    [0, 0, 3, 30],\n    [2, 5, 0, 31],\n    [2, 3, 1, 31],\n    [2, 1, 2, 31],\n  ],\n  30: [\n    [5, 3, 0, 30],\n    [5, 1, 1, 30],\n    [0, 4, 1, 30],\n    [0, 2, 2, 30],\n    [0, 0, 3, 30],\n    [2, 5, 0, 31],\n    [2, 3, 1, 31],\n    [2, 1, 2, 31],\n    [4, 4, 0, 32],\n    [4, 2, 1, 32],\n    [4, 0, 2, 32],\n  ],\n  31: [\n    [2, 5, 0, 31],\n    [2, 3, 1, 31],\n    [2, 1, 2, 31],\n    [4, 4, 0, 32],\n    [4, 2, 1, 32],\n    [4, 0, 2, 32],\n    [1, 4, 1, 33],\n    [1, 2, 2, 33],\n    [1, 0, 3, 33],\n    [0, 3, 2, 35],\n    [0, 1, 3, 35],\n    [0, 0, 4, 40],\n  ],\n  32: [\n    [4, 4, 0, 32],\n    [4, 2, 1, 32],\n    [4, 0, 2, 32],\n    [1, 4, 1, 33],\n    [1, 2, 2, 33],\n    [1, 0, 3, 33],\n    [3, 5, 0, 34],\n    [3, 3, 1, 34],\n    [3, 1, 2, 34],\n    [0, 3, 2, 35],\n    [0, 1, 3, 35],\n    [0, 0, 4, 40],\n  ],\n  33: [\n    [1, 4, 1, 33],\n    [1, 2, 2, 33],\n    [1, 0, 3, 33],\n    [3, 5, 0, 34],\n    [3, 3, 1, 34],\n    [3, 1, 2, 34],\n    [5, 4, 0, 35],\n    [5, 2, 1, 35],\n    [5, 0, 2, 35],\n    [0, 3, 2, 35],\n    [0, 1, 3, 35],\n    [0, 0, 4, 40],\n  ],\n  34: [\n    [3, 5, 0, 34],\n    [3, 3, 1, 34],\n    [3, 1, 2, 34],\n    [5, 4, 0, 35],\n    [5, 2, 1, 35],\n    [5, 0, 2, 35],\n    [0, 3, 2, 35],\n    [0, 1, 3, 35],\n    [2, 4, 1, 36],\n    [2, 2, 2, 36],\n    [2, 0, 3, 36],\n    [0, 0, 4, 40],\n  ],\n  35: [\n    [5, 4, 0, 35],\n    [5, 2, 1, 35],\n    [5, 0, 2, 35],\n    [0, 3, 2, 35],\n    [0, 1, 3, 35],\n    [2, 4, 1, 36],\n    [2, 2, 2, 36],\n    [2, 0, 3, 36],\n    [4, 5, 0, 37],\n    [4, 3, 1, 37],\n    [4, 1, 2, 37],\n    [0, 0, 4, 40],\n  ],\n  36: [\n    [2, 4, 1, 36],\n    [2, 2, 2, 36],\n    [2, 0, 3, 36],\n    [4, 5, 0, 37],\n    [4, 3, 1, 37],\n    [4, 1, 2, 37],\n    [1, 3, 2, 38],\n    [1, 1, 3, 38],\n    [0, 2, 3, 40],\n    [0, 0, 4, 40],\n  ],\n  37: [\n    [4, 5, 0, 37],\n    [4, 3, 1, 37],\n    [4, 1, 2, 37],\n    [1, 3, 2, 38],\n    [1, 1, 3, 38],\n    [3, 4, 1, 39],\n    [3, 2, 2, 39],\n    [3, 0, 3, 39],\n    [0, 2, 3, 40],\n    [0, 0, 4, 40],\n  ],\n  38: [\n    [1, 3, 2, 38],\n    [1, 1, 3, 38],\n    [3, 4, 1, 39],\n    [3, 2, 2, 39],\n    [3, 0, 3, 39],\n    [5, 5, 0, 40],\n    [5, 3, 1, 40],\n    [5, 1, 2, 40],\n    [0, 2, 3, 40],\n    [0, 0, 4, 40],\n  ],\n  39: [\n    [3, 4, 1, 39],\n    [3, 2, 2, 39],\n    [3, 0, 3, 39],\n    [5, 5, 0, 40],\n    [5, 3, 1, 40],\n    [5, 1, 2, 40],\n    [0, 2, 3, 40],\n    [0, 0, 4, 40],\n    [2, 3, 2, 41],\n    [2, 1, 3, 41],\n  ],\n  40: [\n    [5, 5, 0, 40],\n    [5, 3, 1, 40],\n    [5, 1, 2, 40],\n    [0, 2, 3, 40],\n    [0, 0, 4, 40],\n    [2, 3, 2, 41],\n    [2, 1, 3, 41],\n    [4, 4, 1, 42],\n    [4, 2, 2, 42],\n    [4, 0, 3, 42],\n  ],\n  41: [\n    [2, 3, 2, 41],\n    [2, 1, 3, 41],\n    [4, 4, 1, 42],\n    [4, 2, 2, 42],\n    [4, 0, 3, 42],\n    [1, 2, 3, 43],\n    [1, 0, 4, 43],\n    [0, 1, 4, 45],\n    [0, 0, 5, 50],\n  ],\n  42: [\n    [4, 4, 1, 42],\n    [4, 2, 2, 42],\n    [4, 0, 3, 42],\n    [1, 2, 3, 43],\n    [1, 0, 4, 43],\n    [3, 3, 2, 44],\n    [3, 1, 3, 44],\n    [0, 1, 4, 45],\n    [0, 0, 5, 50],\n  ],\n  43: [\n    [1, 2, 3, 43],\n    [1, 0, 4, 43],\n    [3, 3, 2, 44],\n    [3, 1, 3, 44],\n    [5, 4, 1, 45],\n    [5, 2, 2, 45],\n    [5, 0, 3, 45],\n    [0, 1, 4, 45],\n    [0, 0, 5, 50],\n  ],\n  44: [\n    [3, 3, 2, 44],\n    [3, 1, 3, 44],\n    [5, 4, 1, 45],\n    [5, 2, 2, 45],\n    [5, 0, 3, 45],\n    [0, 1, 4, 45],\n    [2, 2, 3, 46],\n    [2, 0, 4, 46],\n    [0, 0, 5, 50],\n  ],\n  45: [\n    [5, 4, 1, 45],\n    [5, 2, 2, 45],\n    [5, 0, 3, 45],\n    [0, 1, 4, 45],\n    [2, 2, 3, 46],\n    [2, 0, 4, 46],\n    [4, 3, 2, 47],\n    [4, 1, 3, 47],\n    [0, 0, 5, 50],\n  ],\n  46: [\n    [2, 2, 3, 46],\n    [2, 0, 4, 46],\n    [4, 3, 2, 47],\n    [4, 1, 3, 47],\n    [1, 1, 4, 48],\n    [0, 0, 5, 50],\n  ],\n  47: [\n    [4, 3, 2, 47],\n    [4, 1, 3, 47],\n    [1, 1, 4, 48],\n    [3, 2, 3, 49],\n    [3, 0, 4, 49],\n    [0, 0, 5, 50],\n  ],\n  48: [\n    [1, 1, 4, 48],\n    [3, 2, 3, 49],\n    [3, 0, 4, 49],\n    [5, 3, 2, 50],\n    [5, 1, 3, 50],\n    [0, 0, 5, 50],\n  ],\n  49: [\n    [3, 2, 3, 49],\n    [3, 0, 4, 49],\n    [5, 3, 2, 50],\n    [5, 1, 3, 50],\n    [0, 0, 5, 50],\n    [2, 1, 4, 51],\n  ],\n  50: [\n    [5, 3, 2, 50],\n    [5, 1, 3, 50],\n    [0, 0, 5, 50],\n    [2, 1, 4, 51],\n    [4, 2, 3, 52],\n    [4, 0, 4, 52],\n  ],\n  51: [\n    [2, 1, 4, 51],\n    [4, 2, 3, 52],\n    [4, 0, 4, 52],\n    [1, 0, 5, 53],\n  ],\n  52: [\n    [4, 2, 3, 52],\n    [4, 0, 4, 52],\n    [1, 0, 5, 53],\n    [3, 1, 4, 54],\n  ],\n  53: [\n    [1, 0, 5, 53],\n    [3, 1, 4, 54],\n    [5, 2, 3, 55],\n    [5, 0, 4, 55],\n  ],\n  54: [\n    [3, 1, 4, 54],\n    [5, 2, 3, 55],\n    [5, 0, 4, 55],\n    [2, 0, 5, 56],\n  ],\n  55: [\n    [5, 2, 3, 55],\n    [5, 0, 4, 55],\n    [2, 0, 5, 56],\n    [4, 1, 4, 57],\n  ],\n  56: [\n    [2, 0, 5, 56],\n    [4, 1, 4, 57],\n  ],\n  57: [\n    [4, 1, 4, 57],\n    [3, 0, 5, 59],\n  ],\n  58: [\n    [3, 0, 5, 59],\n    [5, 1, 4, 60],\n  ],\n  59: [\n    [3, 0, 5, 59],\n    [5, 1, 4, 60],\n  ],\n  60: [\n    [5, 1, 4, 60],\n    [4, 0, 5, 62],\n  ],\n  61: [[4, 0, 5, 62]],\n  62: [[4, 0, 5, 62]],\n  63: [[5, 0, 5, 65]],\n  64: [[5, 0, 5, 65]],\n  65: [[5, 0, 5, 65]],\n};\n","import { ArmorPerkOrSlot, StatModifier } from \"../enum/armor-stat\";\nimport { IPermutatorArmor } from \"./IPermutatorArmor\";\n\nexport interface IPermutatorArmorSet {\n  armor: number[];\n  usedArtifice: StatModifier[];\n  usedMods: StatModifier[];\n  classItemPerk: ArmorPerkOrSlot;\n  statsWithMods: number[];\n  statsWithoutMods: number[];\n}\n\nexport function createArmorSet(\n  helmet: IPermutatorArmor,\n  gauntlet: IPermutatorArmor,\n  chest: IPermutatorArmor,\n  leg: IPermutatorArmor,\n  usedArtifice: StatModifier[],\n  usedMods: StatModifier[],\n  statsWithMods: number[],\n  statsWithoutMods: number[]\n): IPermutatorArmorSet {\n  return {\n    armor: [helmet.id, gauntlet.id, chest.id, leg.id],\n    usedArtifice,\n    usedMods,\n    classItemPerk: ArmorPerkOrSlot.None,\n    statsWithMods,\n    statsWithoutMods,\n  };\n}\n\nexport function isIPermutatorArmorSet(obj: any): obj is IPermutatorArmorSet {\n  return (\n    Object.prototype.hasOwnProperty.call(obj, \"armor\") &&\n    Object.prototype.hasOwnProperty.call(obj, \"usedArtifice\") &&\n    Object.prototype.hasOwnProperty.call(obj, \"usedMods\") &&\n    Object.prototype.hasOwnProperty.call(obj, \"statsWithMods\") &&\n    Object.prototype.hasOwnProperty.call(obj, \"classItemPerk\")\n  );\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { BuildConfiguration } from \"../data/buildConfiguration\";\nimport { IDestinyArmor } from \"../data/types/IInventoryArmor\";\nimport { ArmorSlot } from \"../data/enum/armor-slot\";\nimport { FORCE_USE_ANY_EXOTIC } from \"../data/constants\";\nimport { ModInformation } from \"../data/ModInformation\";\nimport {\n  ArmorPerkOrSlot,\n  ArmorStat,\n  SpecialArmorStat,\n  STAT_MOD_VALUES,\n  StatModifier,\n} from \"../data/enum/armor-stat\";\n\nimport { environment } from \"../../environments/environment\";\n\nimport { precalculatedZeroWasteModCombinations } from \"../data/generated/precalculatedZeroWasteModCombinations\";\nimport { precalculatedModCombinations } from \"../data/generated/precalculatedModCombinations\";\nimport { ModOptimizationStrategy } from \"../data/enum/mod-optimization-strategy\";\nimport { IPermutatorArmor } from \"../data/types/IPermutatorArmor\";\nimport {\n  IPermutatorArmorSet,\n  createArmorSet,\n  isIPermutatorArmorSet,\n} from \"../data/types/IPermutatorArmorSet\";\n\nfunction checkSlots(\n  config: BuildConfiguration,\n  constantModslotRequirement: number[],\n  availableClassItemTypes: Set<ArmorPerkOrSlot>,\n  helmet: IPermutatorArmor,\n  gauntlet: IPermutatorArmor,\n  chest: IPermutatorArmor,\n  leg: IPermutatorArmor\n) {\n  var exoticId = config.selectedExotics[0] || 0;\n  let requirements = constantModslotRequirement.slice();\n  if (\n    !(helmet.isExotic && config.assumeEveryExoticIsArtifice) &&\n    config.armorPerks[ArmorSlot.ArmorSlotHelmet].fixed &&\n    config.armorPerks[ArmorSlot.ArmorSlotHelmet].value != ArmorPerkOrSlot.None &&\n    config.armorPerks[ArmorSlot.ArmorSlotHelmet].value != helmet.perk\n  )\n    return { valid: false };\n  if (\n    !(gauntlet.isExotic && config.assumeEveryExoticIsArtifice) &&\n    config.armorPerks[ArmorSlot.ArmorSlotGauntlet].fixed &&\n    config.armorPerks[ArmorSlot.ArmorSlotGauntlet].value != ArmorPerkOrSlot.None &&\n    config.armorPerks[ArmorSlot.ArmorSlotGauntlet].value != gauntlet.perk\n  )\n    return { valid: false };\n  if (\n    !(chest.isExotic && config.assumeEveryExoticIsArtifice) &&\n    config.armorPerks[ArmorSlot.ArmorSlotChest].fixed &&\n    config.armorPerks[ArmorSlot.ArmorSlotChest].value != ArmorPerkOrSlot.None &&\n    config.armorPerks[ArmorSlot.ArmorSlotChest].value != chest.perk\n  )\n    return { valid: false };\n  if (\n    !(leg.isExotic && config.assumeEveryExoticIsArtifice) &&\n    config.armorPerks[ArmorSlot.ArmorSlotLegs].fixed &&\n    config.armorPerks[ArmorSlot.ArmorSlotLegs].value != ArmorPerkOrSlot.None &&\n    config.armorPerks[ArmorSlot.ArmorSlotLegs].value != leg.perk\n  )\n    return { valid: false };\n  // also return if we can not find the correct class item.\n  if (\n    config.armorPerks[ArmorSlot.ArmorSlotClass].fixed &&\n    config.armorPerks[ArmorSlot.ArmorSlotClass].value != ArmorPerkOrSlot.None &&\n    !availableClassItemTypes.has(config.armorPerks[ArmorSlot.ArmorSlotClass].value)\n  )\n    return { valid: false };\n\n  requirements[helmet.perk]--;\n  requirements[gauntlet.perk]--;\n  requirements[chest.perk]--;\n  requirements[leg.perk]--;\n\n  // ignore exotic selection\n  if (exoticId > 0) {\n    if (helmet.hash == exoticId) requirements[config.armorPerks[helmet.slot].value]--;\n    else if (gauntlet.hash == exoticId) requirements[config.armorPerks[gauntlet.slot].value]--;\n    else if (chest.hash == exoticId) requirements[config.armorPerks[chest.slot].value]--;\n    else if (leg.hash == exoticId) requirements[config.armorPerks[leg.slot].value]--;\n  }\n\n  let bad = 0;\n  for (let n = 1; n < ArmorPerkOrSlot.COUNT; n++) bad += Math.max(0, requirements[n]);\n\n  var requiredClassItemType = ArmorPerkOrSlot.None;\n  if (bad == 1) {\n    // search if we have a class item to fulfill the stats\n    var fixed = false;\n    for (let k = 1; k < ArmorPerkOrSlot.COUNT && !fixed; k++) {\n      if (requirements[k] <= 0) continue;\n      if (availableClassItemTypes.has(k)) {\n        fixed = true;\n        requiredClassItemType = k;\n      }\n    }\n    if (fixed) bad--;\n  } else if (\n    requiredClassItemType == ArmorPerkOrSlot.None &&\n    config.armorPerks[ArmorSlot.ArmorSlotClass].fixed\n  ) {\n    requiredClassItemType = config.armorPerks[ArmorSlot.ArmorSlotClass].value;\n  }\n\n  // if (config.armorPerks[ArmorSlot.ArmorSlotClass].value != ArmorPerkOrSlot.None && !config.armorPerks[ArmorSlot.ArmorSlotClass].fixed) bad--;\n\n  return { valid: bad <= 0, requiredClassItemType };\n}\n\nfunction prepareConstantStatBonus(config: BuildConfiguration) {\n  const constantBonus = [0, 0, 0, 0, 0, 0];\n  // Apply configurated mods to the stat value\n  // Apply mods\n  for (const mod of config.enabledMods) {\n    for (const bonus of ModInformation[mod].bonus) {\n      var statId =\n        bonus.stat == SpecialArmorStat.ClassAbilityRegenerationStat\n          ? [1, 0, 2][config.characterClass]\n          : bonus.stat;\n      constantBonus[statId] += bonus.value;\n    }\n  }\n  return constantBonus;\n}\n\nfunction prepareConstantModslotRequirement(config: BuildConfiguration) {\n  let constantPerkRequirement = [];\n  for (let n = 0; n < ArmorPerkOrSlot.COUNT; n++) constantPerkRequirement.push(0);\n\n  constantPerkRequirement[config.armorPerks[ArmorSlot.ArmorSlotHelmet].value]++;\n  constantPerkRequirement[config.armorPerks[ArmorSlot.ArmorSlotChest].value]++;\n  constantPerkRequirement[config.armorPerks[ArmorSlot.ArmorSlotGauntlet].value]++;\n  constantPerkRequirement[config.armorPerks[ArmorSlot.ArmorSlotLegs].value]++;\n  constantPerkRequirement[config.armorPerks[ArmorSlot.ArmorSlotClass].value]++;\n  return constantPerkRequirement;\n}\n\nfunction prepareConstantAvailableModslots(config: BuildConfiguration) {\n  var availableModCost: number[] = [];\n  availableModCost.push(config.maximumModSlots[ArmorSlot.ArmorSlotHelmet].value);\n  availableModCost.push(config.maximumModSlots[ArmorSlot.ArmorSlotGauntlet].value);\n  availableModCost.push(config.maximumModSlots[ArmorSlot.ArmorSlotChest].value);\n  availableModCost.push(config.maximumModSlots[ArmorSlot.ArmorSlotLegs].value);\n  availableModCost.push(config.maximumModSlots[ArmorSlot.ArmorSlotClass].value);\n  return availableModCost.filter((d) => d > 0).sort((a, b) => b - a);\n}\n\nfunction* generateArmorCombinations(\n  helmets: IPermutatorArmor[],\n  gauntlets: IPermutatorArmor[],\n  chests: IPermutatorArmor[],\n  legs: IPermutatorArmor[],\n  requiresAtLeastOneExotic: boolean\n) {\n  for (let helmet of helmets) {\n    for (let gauntlet of gauntlets) {\n      if (helmet.isExotic && gauntlet.isExotic) continue;\n      for (let chest of chests) {\n        if ((helmet.isExotic || gauntlet.isExotic) && chest.isExotic) continue;\n        for (let leg of legs) {\n          if ((helmet.isExotic || gauntlet.isExotic || chest.isExotic) && leg.isExotic) continue;\n          if (\n            requiresAtLeastOneExotic &&\n            !(helmet.isExotic || gauntlet.isExotic || chest.isExotic || leg.isExotic)\n          )\n            continue;\n\n          yield [helmet, gauntlet, chest, leg];\n        }\n      }\n    }\n  }\n}\n\nfunction estimateCombinationsToBeChecked(\n  helmets: IPermutatorArmor[],\n  gauntlets: IPermutatorArmor[],\n  chests: IPermutatorArmor[],\n  legs: IPermutatorArmor[]\n) {\n  let totalCalculations = 0;\n  const exoticHelmets = helmets.filter((d) => d.isExotic).length;\n  const legendaryHelmets = helmets.length - exoticHelmets;\n  const exoticGauntlets = gauntlets.filter((d) => d.isExotic).length;\n  const legendaryGauntlets = gauntlets.length - exoticGauntlets;\n  const exoticChests = chests.filter((d) => d.isExotic).length;\n  const legendaryChests = chests.length - exoticChests;\n  const exoticLegs = legs.filter((d) => d.isExotic).length;\n  const legendaryLegs = legs.length - exoticLegs;\n  totalCalculations += exoticHelmets * legendaryGauntlets * legendaryChests * legendaryLegs;\n  totalCalculations += legendaryHelmets * exoticGauntlets * legendaryChests * legendaryLegs;\n  totalCalculations += legendaryHelmets * legendaryGauntlets * exoticChests * legendaryLegs;\n  totalCalculations += legendaryHelmets * legendaryGauntlets * legendaryChests * exoticLegs;\n  totalCalculations += legendaryHelmets * legendaryGauntlets * legendaryChests * legendaryLegs;\n  return totalCalculations;\n}\n\naddEventListener(\"message\", async ({ data }) => {\n  if (data.type != \"builderRequest\") return;\n\n  const threadSplit = data.threadSplit as { count: number; current: number };\n  const config = data.config as BuildConfiguration;\n  let items = data.items as IPermutatorArmor[];\n\n  if (threadSplit == undefined || config == undefined || items == undefined) {\n    return;\n  }\n\n  const startTime = Date.now();\n  console.time(`Total run thread#${threadSplit.current}`);\n  // toggle feature flags\n  config.onlyShowResultsWithNoWastedStats =\n    environment.featureFlags.enableZeroWaste && config.onlyShowResultsWithNoWastedStats;\n  if (!environment.featureFlags.enableModslotLimitation) {\n    config.maximumModSlots[ArmorSlot.ArmorSlotHelmet].value = 5;\n    config.maximumModSlots[ArmorSlot.ArmorSlotGauntlet].value = 5;\n    config.maximumModSlots[ArmorSlot.ArmorSlotChest].value = 5;\n    config.maximumModSlots[ArmorSlot.ArmorSlotLegs].value = 5;\n    config.maximumModSlots[ArmorSlot.ArmorSlotClass].value = 5;\n  }\n\n  let helmets = items\n    .filter((i) => i.slot == ArmorSlot.ArmorSlotHelmet)\n    .filter((k) => {\n      return (\n        !config.useFotlArmor ||\n        [\n          199733460, // titan masq\n          2545426109, // warlock\n          3224066584, // hunter\n        ].indexOf(k.hash) > -1\n      );\n    });\n  let gauntlets = items.filter((i) => i.slot == ArmorSlot.ArmorSlotGauntlet);\n  let chests = items.filter((i) => i.slot == ArmorSlot.ArmorSlotChest);\n  let legs = items.filter((i) => i.slot == ArmorSlot.ArmorSlotLegs);\n\n  // Support multithreading. find the largest set and split it by N.\n  if (threadSplit.count > 1) {\n    var splitEntry = (\n      [\n        [helmets, helmets.length],\n        [gauntlets, gauntlets.length],\n        [chests, chests.length],\n        [legs, legs.length],\n      ] as [IPermutatorArmor[], number][]\n    ).sort((a, b) => b[1] - a[1])[0][0];\n\n    var keepLength = Math.round(splitEntry.length / threadSplit.count);\n    var startIndex = keepLength * threadSplit.current; // we can delete everything before this\n    var endIndex = startIndex + keepLength; // we can delete everything after this\n    // if we have rounding issues, let the last thread do the rest\n    if (threadSplit.current == threadSplit.count - 1) endIndex = splitEntry.length;\n\n    // remove data at the end\n    splitEntry.splice(endIndex);\n    splitEntry.splice(0, startIndex);\n  }\n\n  let classItems = items.filter((i) => i.slot == ArmorSlot.ArmorSlotClass);\n  let amountExoticClassItems = classItems.filter((d) => d.isExotic).length;\n  let amountLegendaryClassItems = classItems.length - amountExoticClassItems;\n\n  let availableClassItemPerkTypes = new Set(\n    classItems.filter((d) => !d.isExotic).map((d) => d.perk)\n  );\n  let availableClassItemPerkTypesExotic = new Set(\n    classItems.filter((d) => d.isExotic).map((d) => d.perk)\n  );\n  if (\n    amountLegendaryClassItems > 0 &&\n    (config.assumeEveryLegendaryIsArtifice || config.assumeClassItemIsArtifice)\n  )\n    availableClassItemPerkTypes.add(ArmorPerkOrSlot.SlotArtifice);\n  if (amountExoticClassItems > 0 && config.assumeEveryExoticIsArtifice)\n    availableClassItemPerkTypesExotic.add(ArmorPerkOrSlot.SlotArtifice);\n\n  // runtime variables\n  const runtime = {\n    maximumPossibleTiers: [0, 0, 0, 0, 0, 0],\n    statCombo3x100: new Set(),\n    statCombo4x100: new Set(),\n  };\n  const constantBonus = prepareConstantStatBonus(config);\n  const constantModslotRequirement = prepareConstantModslotRequirement(config);\n  const constantAvailableModslots = prepareConstantAvailableModslots(config);\n  const hasArtificeClassItem = availableClassItemPerkTypes.has(ArmorPerkOrSlot.SlotArtifice);\n  const hasArtificeClassItemExotic = availableClassItemPerkTypesExotic.has(\n    ArmorPerkOrSlot.SlotArtifice\n  );\n  const requiresAtLeastOneExotic = config.selectedExotics.indexOf(FORCE_USE_ANY_EXOTIC) > -1;\n  const exoticClassItem: IPermutatorArmor | null =\n    classItems.sort((a, b) => (a.masterworked ? -1 : 1)).find((d) => d.isExotic) || null;\n  const exoticClassItemIsEnforced =\n    !!exoticClassItem && config.selectedExotics.indexOf(exoticClassItem.hash) > -1;\n\n  let results: IPermutatorArmorSet[] = [];\n  let resultsLength = 0;\n\n  let listedResults = 0;\n  let totalResults = 0;\n  let doNotOutput = false;\n\n  // contains the value of the total amount of combinations to be checked\n  let estimatedCalculations = estimateCombinationsToBeChecked(helmets, gauntlets, chests, legs);\n  let checkedCalculations = 0;\n  let lastProgressReportTime = 0;\n  console.info(`Estimated calculations for Thread#${threadSplit.current}`, estimatedCalculations);\n  console.debug(\n    `Thread#${threadSplit.current} items`,\n    JSON.stringify({\n      helmets: helmets.length,\n      gauntlets: gauntlets.length,\n      chests: chests.length,\n      legs: legs.length,\n      availableClassItemTypes: availableClassItemPerkTypes,\n    })\n  );\n\n  // define the delay; it can be 75ms if the estimated calculations are low\n  // if the estimated calculations >= 1e6, then we will use 125ms\n  let progressBarDelay = estimatedCalculations >= 1e6 ? 125 : 75;\n\n  const hasMasterworkedClassItemExotic =\n    !!exoticClassItem && (exoticClassItem.masterworked || config.assumeExoticsMasterworked);\n  const hasMasterworkedClassItemLegendary =\n    config.assumeClassItemMasterworked || config.assumeLegendariesMasterworked;\n\n  for (let [helmet, gauntlet, chest, leg] of generateArmorCombinations(\n    helmets,\n    gauntlets,\n    chests,\n    legs,\n    requiresAtLeastOneExotic\n  )) {\n    checkedCalculations++;\n    /**\n     *  At this point we already have:\n     *  - Masterworked Exotic/Legendaries, if they must be masterworked (config.onlyUseMasterworkedExotics/config.onlyUseMasterworkedLegendaries)\n     *  - disabled items were already removed (config.disabledItems)\n     */\n    const slotCheckResult = checkSlots(\n      config,\n      constantModslotRequirement,\n      availableClassItemPerkTypes,\n      helmet,\n      gauntlet,\n      chest,\n      leg\n    );\n    if (!slotCheckResult.valid) continue;\n\n    const canUseArtificeClassItem =\n      !slotCheckResult.requiredClassItemType ||\n      slotCheckResult.requiredClassItemType == ArmorPerkOrSlot.SlotArtifice;\n\n    const hasOneExotic = helmet.isExotic || gauntlet.isExotic || chest.isExotic || leg.isExotic;\n    const tmpHasArtificeClassItem =\n      hasArtificeClassItem ||\n      (!hasOneExotic && hasArtificeClassItemExotic && !config.ignoreExistingExoticArtificeSlots);\n    const hasMasterworkedClassItem = exoticClassItemIsEnforced\n      ? hasMasterworkedClassItemExotic\n      : hasMasterworkedClassItemLegendary || (!hasOneExotic && hasMasterworkedClassItemExotic);\n\n    const result = handlePermutation(\n      runtime,\n      config,\n      helmet,\n      gauntlet,\n      chest,\n      leg,\n      constantBonus,\n      constantAvailableModslots,\n      doNotOutput,\n      tmpHasArtificeClassItem && canUseArtificeClassItem,\n      exoticClassItemIsEnforced,\n      hasMasterworkedClassItem\n    );\n    // Only add 50k to the list if the setting is activated.\n    // We will still calculate the rest so that we get accurate results for the runtime values\n    if (result != null) {\n      totalResults++;\n      if (isIPermutatorArmorSet(result)) {\n        result.classItemPerk =\n          slotCheckResult.requiredClassItemType ||\n          (hasArtificeClassItem ? ArmorPerkOrSlot.SlotArtifice : ArmorPerkOrSlot.None);\n\n        // add the exotic class item if we have one and we do not have an exotic armor piece in this selection\n        if (!hasOneExotic && exoticClassItem && exoticClassItemIsEnforced) {\n          result.armor.push(exoticClassItem.id);\n        }\n\n        results.push(result);\n        resultsLength++;\n        listedResults++;\n        doNotOutput =\n          doNotOutput ||\n          (config.limitParsedResults && listedResults >= 3e4 / threadSplit.count) ||\n          listedResults >= 1e6 / threadSplit.count;\n      }\n    }\n\n    if (totalResults % 5000 == 0 && lastProgressReportTime + progressBarDelay < Date.now()) {\n      lastProgressReportTime = Date.now();\n      postMessage({ checkedCalculations, estimatedCalculations });\n    }\n\n    if (resultsLength >= 5000) {\n      // @ts-ignore\n      postMessage({ runtime, results, done: false, checkedCalculations, estimatedCalculations });\n      results = [];\n      resultsLength = 0;\n    }\n  }\n  console.timeEnd(`Total run thread#${threadSplit.current}`);\n\n  // @ts-ignore\n  postMessage({\n    runtime,\n    results,\n    done: true,\n    checkedCalculations,\n    estimatedCalculations,\n    stats: {\n      permutationCount: totalResults,\n      itemCount: items.length - classItems.length,\n      totalTime: Date.now() - startTime,\n    },\n  });\n});\n\nexport function getStatSum(\n  items: IDestinyArmor[]\n): [number, number, number, number, number, number] {\n  return [\n    items[0].mobility + items[1].mobility + items[2].mobility + items[3].mobility,\n    items[0].resilience + items[1].resilience + items[2].resilience + items[3].resilience,\n    items[0].recovery + items[1].recovery + items[2].recovery + items[3].recovery,\n    items[0].discipline + items[1].discipline + items[2].discipline + items[3].discipline,\n    items[0].intellect + items[1].intellect + items[2].intellect + items[3].intellect,\n    items[0].strength + items[1].strength + items[2].strength + items[3].strength,\n  ];\n}\n\nexport function handlePermutation(\n  runtime: any,\n  config: BuildConfiguration,\n  helmet: IPermutatorArmor,\n  gauntlet: IPermutatorArmor,\n  chest: IPermutatorArmor,\n  leg: IPermutatorArmor,\n  constantBonus: number[],\n  availableModCost: number[],\n  doNotOutput = false,\n  hasArtificeClassItem = false,\n  hasExoticClassItem = false,\n  hasMasterworkedClassItem = false\n): never[] | IPermutatorArmorSet | null {\n  const items = [helmet, gauntlet, chest, leg];\n  var totalStatBonus = 0;\n  if (hasMasterworkedClassItem) totalStatBonus += 2;\n\n  for (let i = 0; i < items.length; i++) {\n    let item = items[i]; // add masterworked value, if necessary\n    if (\n      item.masterworked ||\n      (item.isExotic && config.assumeExoticsMasterworked) ||\n      (!item.isExotic && config.assumeLegendariesMasterworked)\n    )\n      totalStatBonus += 2;\n  }\n  const stats = getStatSum(items);\n  stats[0] += totalStatBonus;\n  stats[1] += totalStatBonus + (!items[2].isExotic && config.addConstent1Resilience ? 1 : 0);\n  stats[2] += totalStatBonus;\n  stats[3] += totalStatBonus;\n  stats[4] += totalStatBonus;\n  stats[5] += totalStatBonus;\n\n  const statsWithoutMods = [stats[0], stats[1], stats[2], stats[3], stats[4], stats[5]];\n  stats[0] += constantBonus[0];\n  stats[1] += constantBonus[1];\n  stats[2] += constantBonus[2];\n  stats[3] += constantBonus[3];\n  stats[4] += constantBonus[4];\n  stats[5] += constantBonus[5];\n\n  for (let n: ArmorStat = 0; n < 6; n++) {\n    // Abort here if we are already above the limit, in case of fixed stat tiers\n    if (config.minimumStatTiers[n].fixed) {\n      if (config.allowExactStats && stats[n] / 10 - 0.001 > config.minimumStatTiers[n].value)\n        return null;\n      if (!config.allowExactStats && stats[n] / 10 >= config.minimumStatTiers[n].value + 1)\n        return null;\n    }\n  }\n\n  // get the amount of armor with artifice slot\n  let availableArtificeCount = items.filter(\n    (d) =>\n      ((!d.isExotic || !config.ignoreExistingExoticArtificeSlots) &&\n        d.perk == ArmorPerkOrSlot.SlotArtifice) ||\n      (config.assumeEveryLegendaryIsArtifice && !d.isExotic) ||\n      (config.assumeEveryExoticIsArtifice && d.isExotic)\n  ).length;\n\n  if (hasArtificeClassItem) availableArtificeCount += 1;\n\n  // get distance\n  const distances = [\n    Math.max(0, config.minimumStatTiers[0].value * 10 - stats[0]),\n    Math.max(0, config.minimumStatTiers[1].value * 10 - stats[1]),\n    Math.max(0, config.minimumStatTiers[2].value * 10 - stats[2]),\n    Math.max(0, config.minimumStatTiers[3].value * 10 - stats[3]),\n    Math.max(0, config.minimumStatTiers[4].value * 10 - stats[4]),\n    Math.max(0, config.minimumStatTiers[5].value * 10 - stats[5]),\n  ];\n\n  if (config.onlyShowResultsWithNoWastedStats) {\n    for (let stat: ArmorStat = 0; stat < 6; stat++) {\n      const v = 10 - (stats[stat] % 10);\n      distances[stat] = Math.max(distances[stat], v < 10 ? v : 0);\n    }\n  }\n\n  // distances required to reduce wasted stat points :)\n  const optionalDistances = [0, 0, 0, 0, 0, 0];\n  if (config.tryLimitWastedStats)\n    for (let stat: ArmorStat = 0; stat < 6; stat++) {\n      if (\n        distances[stat] == 0 &&\n        !config.minimumStatTiers[stat].fixed &&\n        stats[stat] < 100 &&\n        stats[stat] % 10 > 0\n      ) {\n        optionalDistances[stat] = 10 - (stats[stat] % 10);\n      }\n    }\n  const totalOptionalDistances = optionalDistances.reduce((a, b) => a + b, 0);\n  // if the sum of distances is > (10*5)+(3*artificeCount), we can abort here\n  //const distanceSum = distances.reduce((a, b) => a + b, 0);\n  const distanceSum =\n    distances[0] + distances[1] + distances[2] + distances[3] + distances[4] + distances[5];\n  if (distanceSum > 10 * 5 + 3 * availableArtificeCount) return null;\n\n  let result: StatModifier[] | null;\n  if (distanceSum == 0 && totalOptionalDistances == 0) result = [];\n  else\n    result = get_mods_precalc(\n      config,\n      distances,\n      optionalDistances,\n      availableArtificeCount,\n      availableModCost,\n      config.modOptimizationStrategy\n    );\n\n  if (result == null) return null;\n\n  //#region 3x100 and 4x100 optimization\n  //#################################################################################\n  // 3x100 and 4x100 optimization\n  // This code could be in its own function, but even calling an empty method\n  // with the required parameters increases the runtime by A LOT (25% on my end)\n  //################################################################################\n  //*/\n  const distancesTo100 = [\n    Math.max(0, 100 - stats[0]),\n    Math.max(0, 100 - stats[1]),\n    Math.max(0, 100 - stats[2]),\n    Math.max(0, 100 - stats[3]),\n    Math.max(0, 100 - stats[4]),\n    Math.max(0, 100 - stats[5]),\n  ];\n\n  // find every combo of three stats which sum is less than 65; no duplicates\n  let combos3x100 = [];\n  let combos4x100 = [];\n  for (let i = 0; i < 4; i++) {\n    for (let j = i + 1; j < 5; j++) {\n      for (let k = j + 1; k < 6; k++) {\n        let dx = distances.slice();\n        dx[i] = distancesTo100[i];\n        dx[j] = distancesTo100[j];\n        dx[k] = distancesTo100[k];\n        let distanceSum = dx[0] + dx[1] + dx[2] + dx[3] + dx[4] + dx[5];\n        if (distanceSum <= 65) {\n          combos3x100.push([i, j, k]);\n\n          for (let l = k + 1; l < 6; l++) {\n            let dy = dx.slice();\n            dy[l] = distancesTo100[l];\n            let distanceSum = dy[0] + dy[1] + dy[2] + dy[3] + dy[4] + dy[5];\n            if (distanceSum <= 65) {\n              combos4x100.push([i, j, k, l]);\n            }\n          }\n        }\n      }\n    }\n  }\n  if (combos3x100.length > 0) {\n    // now validate the combos using get_mods_precalc with optimize=false\n    for (let combo of combos3x100) {\n      const newDistances = distances.slice();\n      for (let i of combo) {\n        newDistances[i] = distancesTo100[i];\n      }\n      const mods = get_mods_precalc(\n        config,\n        newDistances,\n        [0, 0, 0, 0, 0, 0],\n        availableArtificeCount,\n        availableModCost,\n        ModOptimizationStrategy.None\n      );\n      if (mods != null) {\n        runtime.statCombo3x100.add((1 << combo[0]) + (1 << combo[1]) + (1 << combo[2]));\n      }\n    }\n    // now validate the combos using get_mods_precalc with optimize=false\n    for (let combo of combos4x100) {\n      const newDistances = distances.slice();\n      for (let i of combo) {\n        newDistances[i] = distancesTo100[i];\n      }\n      const mods = get_mods_precalc(\n        config,\n        newDistances,\n        [0, 0, 0, 0, 0, 0],\n        availableArtificeCount,\n        availableModCost,\n        ModOptimizationStrategy.None\n      );\n      if (mods != null) {\n        runtime.statCombo4x100.add(\n          (1 << combo[0]) + (1 << combo[1]) + (1 << combo[2]) + (1 << combo[3])\n        );\n      }\n    }\n  }\n  //*/\n  //#################################################################################\n  // END OF 3x100 and 4x100 optimization\n  //#################################################################################\n  //#endregion\n\n  //#region Tier Availability Testing\n  //#################################################################################\n  // Tier Availability Testing\n  //#################################################################################\n  //*\n  for (let stat = 0; stat < 6; stat++) {\n    if (runtime.maximumPossibleTiers[stat] < stats[stat]) {\n      runtime.maximumPossibleTiers[stat] = stats[stat];\n    }\n\n    const oldDistance = distances[stat];\n    for (\n      let tier = 10;\n      tier >= config.minimumStatTiers[stat as ArmorStat].value &&\n      tier > runtime.maximumPossibleTiers[stat] / 10;\n      tier--\n    ) {\n      if (stats[stat] >= tier * 10) break;\n      const v = 10 - (stats[stat] % 10);\n      distances[stat] = Math.max(v < 10 ? v : 0, tier * 10 - stats[stat]);\n      const mods = get_mods_precalc(\n        config,\n        distances,\n        [0, 0, 0, 0, 0, 0],\n        availableArtificeCount,\n        availableModCost,\n        ModOptimizationStrategy.None\n      );\n      //const mods = null;\n      if (mods != null) {\n        runtime.maximumPossibleTiers[stat] = tier * 10;\n        break;\n      }\n    }\n    distances[stat] = oldDistance;\n  }\n  //console.debug(\"b \"+runtime.maximumPossibleTiers,n)\n  //console.warn(n)\n  //*/\n  //#################################################################################\n  // END OF Tier Availability Testing\n  //#################################################################################\n\n  //#endregion\n\n  if (doNotOutput) return [];\n\n  const usedArtifice = result.filter((d) => 0 == d % 3);\n  const usedMods = result.filter((d) => 0 != d % 3);\n\n  for (let statModifier of result) {\n    const stat = Math.floor((statModifier - 1) / 3);\n    stats[stat] += STAT_MOD_VALUES[statModifier][1];\n  }\n  const waste1 = getWaste(stats);\n  if (config.onlyShowResultsWithNoWastedStats && waste1 > 0) return null;\n\n  return createArmorSet(\n    helmet,\n    gauntlet,\n    chest,\n    leg,\n    usedArtifice,\n    usedMods,\n    stats,\n    statsWithoutMods\n  );\n}\n\nfunction get_mods_precalc(\n  config: BuildConfiguration,\n  distances: number[],\n  optionalDistances: number[],\n  availableArtificeCount: number,\n  availableModCost: number[],\n  optimize: ModOptimizationStrategy = ModOptimizationStrategy.None\n): StatModifier[] | null {\n  // check distances <= 65\n  const totalDistance =\n    distances[0] + distances[1] + distances[2] + distances[3] + distances[4] + distances[5];\n  if (totalDistance > 65) return null;\n\n  const modCombinations = config.onlyShowResultsWithNoWastedStats\n    ? precalculatedZeroWasteModCombinations\n    : precalculatedModCombinations;\n\n  // grab the precalculated mods for the distances\n  const precalculatedMods = [\n    modCombinations[distances[0]] || [[0, 0, 0, 0]], // mobility\n    modCombinations[distances[1]] || [[0, 0, 0, 0]], // resilience\n    modCombinations[distances[2]] || [[0, 0, 0, 0]], // recovery\n    modCombinations[distances[3]] || [[0, 0, 0, 0]], // discipline\n    modCombinations[distances[4]] || [[0, 0, 0, 0]], // intellect\n    modCombinations[distances[5]] || [[0, 0, 0, 0]], // strength\n  ];\n\n  // we handle locked exact stats as zero-waste in terms  of the mod selection\n  if (config.allowExactStats) {\n    for (let i = 0; i < 6; i++) {\n      if (config.minimumStatTiers[i as ArmorStat].fixed && distances[i] > 0) {\n        precalculatedMods[i] = precalculatedZeroWasteModCombinations[distances[i]] || [\n          [0, 0, 0, 0],\n        ];\n        // and now also remove every solution with >= 10 points of \"overshoot\"\n        precalculatedMods[i] = precalculatedMods[i].filter((d) => d[3] - distances[i] < 10);\n      }\n    }\n  }\n\n  // add optional distances to the precalculated mods\n  const limit = 3;\n  for (let i = 0; i < optionalDistances.length; i++) {\n    if (optionalDistances[i] > 0) {\n      const additionalCombosA = modCombinations[optionalDistances[i]].filter(\n        (d) =>\n          d[2] == 0 && // disallow major mods\n          d[3] % 10 > 0 && // we do not want to add exact stat tiers\n          (optionalDistances[i] + d[3]) % 10 < optionalDistances[i] // and the changes must have less waste than before\n      );\n      //(d) => d[3] % 10 > 0);\n      if (additionalCombosA != null) {\n        precalculatedMods[i] = additionalCombosA.slice(0, limit).concat(precalculatedMods[i]);\n      }\n    }\n  }\n  let bestMods: any = null;\n  let bestScore = 1000;\n\n  const availableModCostLen = availableModCost.length;\n  const minAvailableModCost = availableModCost[availableModCostLen - 1];\n\n  // const maxAvailableModCost = availableModCost[0];\n\n  function validateMods(usedModCost: number[]): boolean {\n    let usedModCount = usedModCost.length;\n    if (usedModCount == 0) return true;\n    if (usedModCount > availableModCostLen) return false;\n    // sort usedMods ascending\n    usedModCost.sort((a, b) => b - a);\n    // check if the usedMods are valid\n    // substract the usedMods from the availableMods, start at the highest cost\n    for (let i = 0; i < availableModCost.length && i < usedModCount; i++) {\n      if (availableModCost[i] < usedModCost[i]) return false;\n    }\n\n    return true;\n  }\n\n  const costMinor = [1, 2, 2, 1, 2, 1];\n  const costMajor = [3, 4, 4, 3, 4, 3];\n\n  function score(entries: [number, number, number, number][]) {\n    if (optimize == ModOptimizationStrategy.ReduceUsedModSockets) {\n      const n1 = entries.reduce((a, b) => a + b[1] + b[2], 0);\n      return n1;\n    } else if (optimize == ModOptimizationStrategy.ReduceUsedModPoints) {\n      return entries.reduce(\n        (a, b, currentIndex) => a + costMinor[currentIndex] * b[1] + costMajor[currentIndex] * b[2],\n        0\n      );\n    }\n    return entries.reduce((a, b) => a + b[3], 0);\n  }\n\n  function validate(\n    entries: [number, number, number, number][],\n    alsoValidateMods = false\n  ): boolean {\n    // sum up the stats\n    const sum = entries.reduce(\n      (a, b, i) => [a[0] + b[0], a[1] + b[1], a[2] + b[2], a[3] + b[3] - distances[i]],\n      [0, 0, 0, 0]\n    );\n\n    if (score(entries) > bestScore) return false;\n    if (sum[0] > availableArtificeCount) return false;\n    if (sum[1] + sum[2] > availableModCostLen) return false;\n    if (sum[3] < 0) return false;\n\n    // test availableModCosts\n    // the used mods translate as follows:\n    // entries[0], entries[3] and entries[5]: minor 1, major 3\n    // entries[1], entries[2] and entries[4]: minor 2, major 4\n\n    if (!alsoValidateMods || minAvailableModCost == 5) return true;\n\n    let usedModCost: number[] = [];\n    for (let statIdx = 0; statIdx < entries.length; statIdx++) {\n      const entry = entries[statIdx];\n      const isSmallMod = statIdx == 0 || statIdx == 3 || statIdx == 5;\n      let minorModCost = isSmallMod ? 1 : 2;\n      let majorModCost = isSmallMod ? 3 : 4;\n\n      for (let minor = 0; minor < entry[1]; minor++) usedModCost.push(minorModCost);\n      for (let major = 0; major < entry[2]; major++) usedModCost.push(majorModCost);\n    }\n\n    if (usedModCost.length == 0) return true;\n    if (!validateMods(usedModCost)) return false;\n\n    return true;\n  }\n\n  const mustExecuteOptimization = totalDistance > 0 && optimize != ModOptimizationStrategy.None;\n  root: for (let mobility of precalculatedMods[0]) {\n    if (!validate([mobility])) continue;\n    for (let resilience of precalculatedMods[1]) {\n      if (!validate([mobility, resilience])) continue;\n      for (let recovery of precalculatedMods[2]) {\n        if (!validate([mobility, resilience, recovery])) continue;\n        if (mustExecuteOptimization && score([mobility, resilience, recovery]) >= bestScore)\n          continue;\n        for (let discipline of precalculatedMods[3]) {\n          if (!validate([mobility, resilience, recovery, discipline])) continue;\n          if (\n            mustExecuteOptimization &&\n            score([mobility, resilience, recovery, discipline]) >= bestScore\n          )\n            continue;\n          for (let intellect of precalculatedMods[4]) {\n            if (!validate([mobility, resilience, recovery, discipline, intellect])) continue;\n            if (\n              mustExecuteOptimization &&\n              score([mobility, resilience, recovery, discipline, intellect]) >= bestScore\n            )\n              continue;\n            inner: for (let strength of precalculatedMods[5]) {\n              let mods = [mobility, resilience, recovery, discipline, intellect, strength];\n\n              if (!validate(mods, true)) continue;\n\n              // Fill optional distances\n              for (let m = 0; m < 6; m++)\n                if (optionalDistances[m] > 0 && mods[m][3] == 0 && bestMods != null) continue inner;\n\n              let scoreVal = score(mods);\n              if (scoreVal < bestScore) {\n                bestScore = scoreVal;\n                bestMods = mods;\n                if (!mustExecuteOptimization) {\n                  break root;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  if (bestMods === null) return null;\n\n  const usedMods = [];\n  for (let i = 0; i < bestMods.length; i++) {\n    for (let n = 0; n < bestMods[i][0]; n++) usedMods.push(3 + 3 * i);\n    for (let n = 0; n < bestMods[i][1]; n++) usedMods.push(1 + 3 * i);\n    for (let n = 0; n < bestMods[i][2]; n++) usedMods.push(2 + 3 * i);\n  }\n\n  return usedMods;\n}\n\nexport function getSkillTier(stats: number[]) {\n  return (\n    Math.floor(Math.min(100, stats[ArmorStat.Mobility]) / 10) +\n    Math.floor(Math.min(100, stats[ArmorStat.Resilience]) / 10) +\n    Math.floor(Math.min(100, stats[ArmorStat.Recovery]) / 10) +\n    Math.floor(Math.min(100, stats[ArmorStat.Discipline]) / 10) +\n    Math.floor(Math.min(100, stats[ArmorStat.Intellect]) / 10) +\n    Math.floor(Math.min(100, stats[ArmorStat.Strength]) / 10)\n  );\n}\n\nexport function getWaste(stats: number[]) {\n  return (\n    (stats[ArmorStat.Mobility] > 100\n      ? stats[ArmorStat.Mobility] - 100\n      : stats[ArmorStat.Mobility] % 10) +\n    (stats[ArmorStat.Resilience] > 100\n      ? stats[ArmorStat.Resilience] - 100\n      : stats[ArmorStat.Resilience] % 10) +\n    (stats[ArmorStat.Recovery] > 100\n      ? stats[ArmorStat.Recovery] - 100\n      : stats[ArmorStat.Recovery] % 10) +\n    (stats[ArmorStat.Discipline] > 100\n      ? stats[ArmorStat.Discipline] - 100\n      : stats[ArmorStat.Discipline] % 10) +\n    (stats[ArmorStat.Intellect] > 100\n      ? stats[ArmorStat.Intellect] - 100\n      : stats[ArmorStat.Intellect] % 10) +\n    (stats[ArmorStat.Strength] > 100\n      ? stats[ArmorStat.Strength] - 100\n      : stats[ArmorStat.Strength] % 10)\n  );\n}\n"],"x_google_ignoreList":[8,9,10,11]}