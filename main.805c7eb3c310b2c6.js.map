{"version":3,"file":"main.805c7eb3c310b2c6.js","mappings":"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C,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,GACJ,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,GACJ,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,KACf,GAAI,GACJ,GAAI,GACJ,GAAI,CAAC,CAAC,EAAG,EAAG,EAAG,MC1fJC,GAAsF,CACjG,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,KAEZ,GAAI,CACF,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG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","names":["ModInformation","ModOrAbility","WhisperOfDurance","id","name","description","type","ModifierType","Stasis","bonus","stat","ArmorStat","Strength","value","cost","requiredArmorAffinity","hash","WhisperOfChains","Recovery","WhisperOfConduction","Intellect","Resilience","WhisperOfBonds","WhisperOfHunger","WhisperOfFractures","Discipline","WhisperOfImpetus","WhisperOfTorment","EchoOfExpulsion","Void","EchoOfProvision","EchoOfPersistence","SpecialArmorStat","ClassAbilityRegenerationStat","EchoOfLeeching","EchoOfDomineering","EchoOfDilation","Mobility","EchoOfUndermining","EchoOfInstability","EchoOfHarvest","EchoOfObscurity","EchoOfStarvation","EchoOfVigilance","EmberOfBenelovence","Solar","EmberOfBeams","EmberOfEmpyrean","EmberOfCombustion","EmberOfChar","EmberOfTempering","EmberOfEruption","EmberOfWonder","EmberOfSearing","EmberOfTorches","EmberOfMercy","SparkOfBrilliance","Arc","SparkOfFeedback","SparkOfDischarge","SparkOfFocus","SparkOfVolts","SparkOfResistance","SparkOfShock","ThreadOfFury","Strand","ThreadOfAscent","ThreadOfFinality","ThreadOfWarding","ThreadOfTransmutation","ThreadOfEvolution","ThreadOfBinding","ThreadOfGeneration","ThreadOfPropagation","FacetOfAwakening","Prismatic","FacetOfCourage","FacetOfDawn","FacetOfDefiance","FacetOfDevotion","FacetOfDominance","FacetOfGrace","FacetOfHonor","FacetOfJustice","FacetOfProtection","FacetOfPurpose","FacetOfRuin","FacetOfSacrifice","MAXIMUM_STAT_MOD_AMOUNT","FORCE_USE_NO_EXOTIC","FORCE_USE_ANY_EXOTIC","Database","Dexie","constructor","super","this","version","stores","manifestArmor","inventoryArmor","manifestCollectibles","vendorNames","ArmorSlot","ArmorSlotNone","ArmorSlotHelmet","ArmorSlotGauntlet","ArmorSlotChest","ArmorSlotLegs","ArmorSlotClass","StatModifier","NONE","MINOR_MOBILITY","MAJOR_MOBILITY","ARTIFICE_MOBILITY","MINOR_RESILIENCE","MAJOR_RESILIENCE","ARTIFICE_RESILIENCE","MINOR_RECOVERY","MAJOR_RECOVERY","ARTIFICE_RECOVERY","MINOR_DISCIPLINE","MAJOR_DISCIPLINE","ARTIFICE_DISCIPLINE","MINOR_INTELLECT","MAJOR_INTELLECT","ARTIFICE_INTELLECT","MINOR_STRENGTH","MAJOR_STRENGTH","ARTIFICE_STRENGTH","STAT_MOD_VALUES","ArmorStatNames","ArmorStatHashes","ArmorStatIconUrls","ArmorPerkOrSlot","None","SlotCrotasEnd","SlotRootOfNightmares","SlotKingsFall","SlotVowOfTheDisciple","SlotVaultOfGlass","SlotDeepStoneCrypt","SlotGardenOfSalvation","SlotLastWish","SlotArtifice","PerkIronBanner","SlotNightmare","GuardianGamesClassItem","PerkEchoesOfGlory","SlotSalvationsEdge","SlotEidosApprentice","COUNT","MapAlternativeToArmorPerkOrSlot","ArmorPerkOrSlotNames","ArmorPerkOrSlotIcons","ArmorPerkSocketHashes","ArmorPerkOrSlotDIMText","SubclassHashes","ModOptimizationStrategy","ReduceUsedModSockets","ReduceUsedModPoints","CombatStyleMod","SubclassNames","CommonMaterialModule","MatButtonModule","MatFormFieldModule","MatSelectModule","MatOptionModule","MatSliderModule","MatInputModule","MatSlideToggleModule","MatTableModule","MatCardModule","MatTooltipModule","MatProgressBarModule","MatIconModule","MatSortModule","MatPaginatorModule","MatToolbarModule","MatMenuModule","MatButtonToggleModule","MatListModule","MatExpansionModule","MatDialogModule","MatSnackBarModule","MatProgressSpinnerModule","MatTabsModule","MatChipsModule","MatSidenavModule","ReactiveFormsModule","FormsModule","precalculatedZeroWasteModCombinations","precalculatedModCombinations","isIPermutatorArmorSet","obj","Object","prototype","hasOwnProperty","call","checkSlots","config","constantModslotRequirement","availableClassItemTypes","helmet","gauntlet","chest","leg","exoticId","selectedExotics","requirements","slice","isExotic","assumeEveryExoticIsArtifice","armorPerks","fixed","perk","valid","has","slot","bad","n","Math","max","requiredClassItemType","k","handlePermutation","runtime","constantBonus","availableModCost","doNotOutput","hasArtificeClassItem","hasExoticClassItem","hasMasterworkedClassItem","items","totalStatBonus","i","length","item","masterworked","assumeExoticsMasterworked","assumeLegendariesMasterworked","stats","getStatSum","mobility","resilience","recovery","discipline","intellect","strength","addConstent1Resilience","statsWithoutMods","minimumStatTiers","allowExactStats","availableArtificeCount","filter","d","ignoreExistingExoticArtificeSlots","assumeEveryLegendaryIsArtifice","distances","onlyShowResultsWithNoWastedStats","v","optionalDistances","tryLimitWastedStats","totalOptionalDistances","reduce","a","b","distanceSum","result","get_mods_precalc","modOptimizationStrategy","distancesTo100","combos3x100","combos4x100","j","dx","push","l","dy","combo","newDistances","statCombo3x100","add","statCombo4x100","maximumPossibleTiers","oldDistance","tier","usedArtifice","usedMods","statModifier","floor","waste1","getWaste","createArmorSet","statsWithMods","armor","classItemPerk","optimize","totalDistance","modCombinations","precalculatedMods","additionalCombosA","concat","bestMods","bestScore","availableModCostLen","minAvailableModCost","costMinor","costMajor","score","entries","currentIndex","validate","alsoValidateMods","sum","usedModCost","statIdx","entry","isSmallMod","minorModCost","majorModCost","minor","major","validateMods","usedModCount","sort","mustExecuteOptimization","root","inner","mods","m","scoreVal","getSkillTier","min","addEventListener","_ref","_asyncToGenerator","data","threadSplit","undefined","startTime","Date","now","console","time","current","environment","featureFlags","enableZeroWaste","enableModslotLimitation","maximumModSlots","helmets","useFotlArmor","indexOf","gauntlets","chests","legs","count","splitEntry","keepLength","round","startIndex","endIndex","splice","classItems","amountExoticClassItems","amountLegendaryClassItems","availableClassItemPerkTypes","Set","map","availableClassItemPerkTypesExotic","assumeClassItemIsArtifice","prepareConstantStatBonus","mod","enabledMods","characterClass","prepareConstantModslotRequirement","constantPerkRequirement","constantAvailableModslots","prepareConstantAvailableModslots","hasArtificeClassItemExotic","requiresAtLeastOneExotic","exoticClassItem","find","exoticClassItemIsEnforced","results","resultsLength","listedResults","totalResults","estimatedCalculations","estimateCombinationsToBeChecked","totalCalculations","exoticHelmets","legendaryHelmets","exoticGauntlets","legendaryGauntlets","exoticChests","legendaryChests","exoticLegs","legendaryLegs","checkedCalculations","lastProgressReportTime","info","debug","JSON","stringify","progressBarDelay","hasMasterworkedClassItemExotic","hasMasterworkedClassItemLegendary","assumeClassItemMasterworked","generateArmorCombinations","slotCheckResult","hasOneExotic","limitParsedResults","postMessage","done","timeEnd","permutationCount","itemCount","totalTime","_x","apply","arguments","revision","production","beta","canary","apiKey","clientId","client_secret","offlineMode","highlight_project_id","enableGuardianGamesFeatures","getDifferences","object1","object2","differences","keys","forEach","key","typedKey","_isEqual","from","to","changes","StatusProviderService","__status","calculatingResults","calculatingPermutations","updatingResultsTable","updatingInventory","updatingManifest","updatingVendors","apiError","authError","__last_Status","structuredClone","_status","BehaviorSubject","status","asObservable","getStatus","modifyStatus","cb","next","setApiError","clearApiError","setAuthError","clearAuthError","factory","ɵfac","providedIn","AuthService","http","router","_logoutEvent","ReplaySubject","logoutEvent","refreshTokenExpired","refreshTokenExpiringAt","autoRegenerateTokens","_this","tokenInfo","lastRefresh","dateNow","refreshToken","timing","generateTokens","getCurrentMembershipData","_this2","parse","localStorage","getItem","currentMembershipData","setItem","refresh","_this3","CLIENT_ID","CLIENT_SECRET","body","authCode","post","headers","toPromise","then","log","accessToken","access_token","refresh_token","refresh_expires_in","s","catch","err","isAuthenticated","newCode","removeItem","Number","parseInt","toString","clearManifestInfo","clearLoginInfo","logout","_this4","navigate","i0","i1","i2","i3","HandleBungieLoginComponent","activatedRoute","loginService","ngOnInit","queryParams","subscribe","params","code","window","location","search","substr","selectors","decls","vars","template","rf","ctx","AppComponent","title","is_beta","is_canary","consts","AppComponent_mat_toolbar_0_Template","LoginComponent","startLogin","href","AuthenticatedGuard","auth","canActivate","route","state","NotAuthenticatedGuard","getDefaultStatDict","BuildConfiguration","disabledItems","maximumStatMods","putArtificeMods","allowBlueArmorPieces","ignoreSunsetArmor","includeVendorRolls","includeCollectionRolls","onlyUseMasterworkedExotics","onlyUseMasterworkedLegendaries","showWastedStatsColumn","showPotentialTierColumn","selectedModElement","buildEmptyConfiguration","InventoryArmorSource","Inventory","Collections","Vendor","createArmorItem","manifestItem","itemInstanceId","source","Error","assign","mayBeBugged","energyLevel","created_at","updated_at","applyInvestmentStats","r","investmentStats","totalStats","DatabaseService","verno","upgrade","tx","_ref2","clearDatabase","_x2","initialize","open","writeManifestArmor","clear","bulkPut","db","resetDatabase","delete","lastManifestUpdate","lastManifestVersion","lastManifestRevision","lastManifestDbName","updatedAt","lzCompOptions","outputEncoding","lzDecompOptions","inputEncoding","ConfigurationService","readonlyConfigurationSnapshot","__configuration","loadCurrentConfiguration","__LastConfiguration","_configuration","configuration","_storedConfigurations","listSavedConfigurations","storedConfigurations","modifyConfiguration","saveCurrentConfiguration","saveConfiguration","list","c","index","compressed","lzutf8","doesSavedConfigurationExist","loadSavedConfiguration","checkAndFixOldSavedConfigurations","tiers","minimumStatTier","selectedExoticHash","deleteStoredConfiguration","saveCurrentConfigurationToName","dummy","getCurrentConfigBase64Compressed","getAllStoredConfigurationsBase64Compressed","getStoredConfigurationBase64Compressed","resetCurrentConfiguration","HttpClientService","authService","$httpWithoutBearerToken","$http","$httpWithoutApiKey","$httpPost","url","Authorization","pipe","retry","error","bearerToken","retryCount","options","get","res","ErrorStatus","MembershipService","clearCachedData","getMembershipDataForCurrentUser","membershipData","membershipDataAge","H","identify","membershipId","membershipType","highlightDisplayName","displayName","avatar","iconPath","bungieGlobalDisplayName","bungieGlobalDisplayNameCode","applicableMembershipTypes","memberships","Response","destinyMemberships","crossSaveOverride","lastLoggedInProfileIndex","lastPlayed","membership","profile","getProfile","components","destinyMembershipId","dateLastPlayed","date","getCharacters","destinyMembership","characters","values","characterId","clazz","classType","emblemUrl","emblemBackgroundPath","collectInvestmentStats","itemInvestmentStats","plugHashes","newStats","statTypeHash","plugs","statPlugHashes","plm","BungieApiService","config_assumeEveryLegendaryIsArtifice","transferItem","targetCharacter","equip","r1","transferResult","moveItemToVault","payload","itemId","itemReferenceHash","itemHash","stackSize","transferToVault","equipPayload","equipItem","getUnlockedExoticArmor","characterCollectibles","manifestExoticArmorItemHashes","toArray","acc","cur","itemHashes","flatMap","char","collectibles","_","updateArmorItems","force","_this5","unlockedExoticArmorItemHashes","allItems","profileInventory","charI","characterEquipment","characterInventories","materials","previousValue","currentValue","quantity","glimmerEntry","profileCurrencies","idSet","cx","modsData","itemType","fromEntries","bucketHash","itemComponents","instances","energy","instance","warn","energyCapacity","socketsList","sockets","socket","plugHash","perks","p","perkHash","Boolean","collectionRollItems","Array","exoticItemHash","manifestArmorItem","collectionItem","socketEntries","singleInitialItemHash","updateDatabaseItems","newItems","_this6","ids_noSource","bulkDelete","bulkAdd","getArmorPerk","scks","reusablePlugSetHash","socketHash","slotType","kvpair","updateVendorNames","manifestTables","_this7","vendorInfo","DestinyVendorDefinition","vendorId","vendorName","displayProperties","updateAbilities","allAbilities","DestinyInventoryItemDefinition","plug","plugCategoryIdentifier","match","updateExoticCollectibles","_this8","exoticArmorCollectibles","DestinyCollectibleDefinition","inventory","tierTypeName","updateManifest","_this9","manifestCache","destinyManifest","getDestinyManifest","manifestVersion","getDestinyManifestSlice","tableNames","language","bucketTypeHash","tierType","itemCategoryHashes","isArmor2","socketTypeHash","exoticPerkHash","sunsetPowerCaps","isSunset","quality","versions","includes","powerCapHash","icon","watermarkIcon","displayVersionWatermarkIcons","armor2","rarity","itemSubType","i4","i5","VENDOR_NEXT_REFRESH_KEY","VendorsWithParent","vendorHash","parentHash","VendorsService","where","getVendorArmorItemsForCharacter","manifestItems","vendorsResponse","getVendors","allVendors","vendors","allVendorsMap","Map","_vendorHash","vendor","enabled","parent","sales","saleItems","vendorItemIndex","saleItem","refreshDate","nextRefreshDate","getTime","vendorArmorItems","VendorPromises","getVendor","vendorResponse","vendorItemStats","itemStats","augments","statsOverride","statHash","reason","Promise","all","isVendorCacheValid","nextRefreshTimeStr","nextVendorRefresh","isFinite","information","shouldRefresh","writeVendorCache","toISOString","updateVendorArmorItemsCache","e","setMinutes","getMinutes","InventoryService","api","allArmorResults","currentClass","_calculationProgress","Subject","calculationProgress","_config","totalPermutationCount","resultMaximumTiers","resultStatCombo3x100","resultStatCombo4x100","inventoryArmorItems","permutatorArmorItems","endResults","refreshing","_inventory","_manifest","manifest","_armorResults","armorResults","workers","dataAlreadyFetched","events","debounceTime","val","NavigationEnd","killWorkers","clearResults","refreshAll","shouldCalculateResults","forceArmor","forceManifest","armorUpdated","manifestUpdated","updateInventoryItems","updateVendorsAsync","triggerArmorUpdateAndUpdateResults","triggerInventoryUpdate","triggerResultsUpdate","updateResults","success","finally","w","terminate","nthreads","doneWorkerCount","_ref3","equals","first","_x3","distinct","rhs","isEqualItem","estimateRequiredThreads","threadCalculationAmountArr","threadCalculationDoneArr","oldProgressValue","Worker","__webpack_require__","tu","URL","u","onmessage","_ref4","ev","sumTotal","sumDone","newProgress","elem","armorSet","x","y","exotic","watermark","artifice","modCount","modCost","statsNoMods","waste","transferState","classItem","usesCollectionRoll","some","usesVendorRoll","_x4","onerror","largestArmorBucket","calculationMultiplier","maximumCalculationPerThread","ceil","navigator","hardwareConcurrency","getItemCountForClass","pieces","getExoticsForClass","exotics","ex","inCollection","inInventory","inVendor","errorLoop","alert","i6","i7","BASE_URL","CHARACTER_STATS_URL","UPDATES_URL","LOCAL_STORAGE_STATS_VERSION_KEY","LOCAL_STORAGE_STATS_KEY","ClarityService","inv","_characterStats","characterStats","load","loadCharacterStats","fetchUpdateData","storedData","liveVersion","storedVersion","lastUpdate","schemaVersion","fetchLiveCharacterStats","CharacterStatType","Speed","Percentage","Time","TimeMMSS","PercentagePerSecond","CharacterStatsService","clarity","allStatEntries","overrides","updateCharacterStats","ability","set","Overrides","flat","generateEntries","valueType","statName","element","exoticHashes","exoticOverrides","o","Hash","override","applyExoticArmorOverride","originalEntry","Requirements","overrideIcons","CooldownOverride","Scalar","reqIndex","scalar","base","rest","abilityList","Abilities","SuperAbilities","getClassAndElementForAbility","parts","split","className","elementName","Cooldowns","ChangelogEntryType","ADD","REMOVE","MODIFIED","CHANGELOG_DATA","text","issues","ChangelogDialogComponent","changelog","changelogData","ChangelogService","dialog","setChangelogSeenFlag","lastViewedChangelog","mustShowChangelog","openChangelogDialog","afterClosed","VarDirectiveDirective","ngVar","context","$implicit","hasView","vcRef","createEmbeddedView","templateRef","inputs","ChangelogDialogControllerComponent","ngAfterViewInit","encapsulation","AppV2CoreComponent_div_0_div_2_mat_toolbar_1_Template","stat_r11","_r16","_r4","toggle","ctx_r5","activeLinkIndex","idx_r14","link_r13","link","_r18","ctx_r7","idx_r20","link_r19","AppV2CoreComponent_div_0_span_61_mat_progress_bar_1_Template","stat_r21","ctx_r27","computationProgress","AppV2CoreComponent_div_0_div_63_mat_card_1_Template","AppV2CoreComponent_div_0_div_63_mat_card_2_Template","AppV2CoreComponent_div_0_div_63_mat_card_3_Template","AppV2CoreComponent_div_0_div_63_mat_card_4_Template","AppV2CoreComponent_div_0_div_63_mat_card_5_Template","stat_r23","AppV2CoreComponent_div_0_mat_toolbar_1_Template","AppV2CoreComponent_div_0_div_2_Template","_r30","AppV2CoreComponent_div_0_a_16_Template","ctx_r31","AppV2CoreComponent_div_0_button_28_Template","AppV2CoreComponent_div_0_a_43_Template","ctx_r32","ctx_r33","ctx_r34","AppV2CoreComponent_div_0_span_61_Template","AppV2CoreComponent_div_0_div_63_Template","stat_r1","ctx_r0","isHandset$","navLinks","_r8","AppV2CoreComponent","breakpointObserver","observe","Breakpoints","Handset","Small","XSmall","matches","shareReplay","tab","progress","AppV2CoreComponent_div_0_Template","ctx_r2","parsedResults","ctx_r3","element_r69","ctx_r21","element_r70","ctx_r23","element_r71","ctx_r25","element_r72","element_r73","ctx_r29","element_r74","element_r75","element_r76","ResultsComponent_td_76_img_1_Template","ResultsComponent_td_76_img_2_Template","ResultsComponent_td_76_img_3_Template","ResultsComponent_td_79_img_2_Template","ResultsComponent_td_79_img_3_Template","element_r83","ResultsComponent_td_82_mat_icon_1_Template","ResultsComponent_td_82_mat_icon_2_Template","ResultsComponent_td_82_mat_icon_3_Template","ctx_r39","expandedElement","element_r86","checkIfAnyItemsMayBeInvalid","element_r91","element_r92","element_r93","ctx_r46","shownColumns","element_r94","element_r95","_r97","ctx_r96","ctx_r48","_r100","ctx_r99","saveBuilds","ResultItemMoveState","TRANSFER_NONE","WAITING_FOR_TRANSFER","TRANSFERRING","TRANSFERRED","ERROR_DURING_TRANSFER","ResultsComponent","_results","_config_assumeLegendariesMasterworked","_config_assumeExoticsMasterworked","_config_assumeClassItemMasterworked","_config_maximumStatMods","_config_selectedExotics","_config_tryLimitWastedStats","_config_onlyUseMasterworkedExotics","_config_onlyUseMasterworkedLegendaries","_config_includeCollectionRolls","_config_includeVendorRolls","_config_onlyShowResultsWithNoWastedStats","_config_assumeEveryLegendaryIsArtifice","_config_assumeEveryExoticIsArtifice","_config_ignoreExistingExoticArtificeSlots","_config_modslotLimitation","_config_armorPerkLimitation","tableDataSource","MatTableDataSource","paginator","selectedClass","ngUnsubscribe","takeUntil","columns","updateData","sortingDataAccessor","sortHeaderId","ngOnDestroy","complete","jsonData","configCompressed","document","createElement","download","createObjectURL","Blob","setAttribute","appendChild","click","viewQuery","MatPaginator","MatSort","ResultsComponent_ng_container_5_Template","ResultsComponent_ng_container_6_Template","ResultsComponent_mat_icon_20_Template","ResultsComponent_mat_icon_21_Template","ResultsComponent_mat_chip_option_32_Template","ResultsComponent_mat_chip_option_33_Template","ResultsComponent_mat_chip_option_34_Template","ResultsComponent_mat_chip_option_35_Template","ResultsComponent_mat_chip_option_36_Template","ResultsComponent_mat_chip_option_37_Template","ResultsComponent_mat_chip_option_38_Template","ResultsComponent_mat_chip_option_39_Template","ResultsComponent_mat_chip_option_40_Template","ResultsComponent_mat_chip_option_41_Template","ResultsComponent_mat_chip_option_42_Template","ResultsComponent_mat_chip_option_43_Template","ResultsComponent_mat_chip_option_44_Template","ResultsComponent_mat_chip_option_45_Template","ResultsComponent_mat_chip_option_46_Template","ResultsComponent_mat_chip_option_47_Template","ResultsComponent_th_54_Template","ResultsComponent_td_55_Template","ResultsComponent_th_57_Template","ResultsComponent_td_58_Template","ResultsComponent_th_60_Template","ResultsComponent_td_61_Template","ResultsComponent_th_63_Template","ResultsComponent_td_64_Template","ResultsComponent_th_66_Template","ResultsComponent_td_67_Template","ResultsComponent_th_69_Template","ResultsComponent_td_70_Template","ResultsComponent_th_72_Template","ResultsComponent_td_73_Template","ResultsComponent_th_75_Template","ResultsComponent_td_76_Template","ResultsComponent_th_78_Template","ResultsComponent_td_79_Template","ResultsComponent_th_81_Template","ResultsComponent_td_82_Template","ResultsComponent_th_84_Template","ResultsComponent_td_85_Template","ResultsComponent_th_87_Template","ResultsComponent_td_88_Template","ResultsComponent_th_90_Template","ResultsComponent_td_91_Template","ResultsComponent_td_93_Template","ResultsComponent_tr_94_Template","ResultsComponent_tr_95_Template","ResultsComponent_tr_96_Template","ResultsComponent_mat_card_actions_98_Template","_c0","_c1","trigger","style","height","transition","animate","MASTERWORK_COST_LEGENDARY","shards","glimmer","core","prism","ascshard","MASTERWORK_COST_EXOTIC","InventoryArmorSourceNames","VendorNamePipe","database","transform","pure","VendorIdFromItemIdPipe","startsWith","substring","isNaN","itemTooltip","stat_r2","ctx_r6","getWidth","ArmorTooltipComponent_tr_15_span_4_Template","ArmorTooltipComponent_tr_15_span_5_Template","ArmorTooltipComponent_tr_15_div_10_Template","ctx_r1","getArmorStatName","i_r3","ArmorTooltipComponent","getSourceText","getTotalStats","isVendorItem","ArmorTooltipComponent_tr_11_Template","ArmorTooltipComponent_tr_15_Template","ItemTooltipRendererDirective","_overlay","_overlayPositionBuilder","_elementRef","showToolTip","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","offsetY","_overlayRef","create","addPanelClass","show","hasAttached","attach","ComponentPortal","hide","closeToolTip","detach","hostBindings","ItemIconServiceService","itemLookup","getItemCached","getExoticPerkDescription","isFromVendor","isFromCollection","ItemIconComponent_div_0_img_1_Template","ItemIconComponent_div_0_img_2_Template","ItemIconComponent_div_0_div_3_Template","ItemIconComponent_div_0_div_4_Template","ItemIconComponent","iconService","ItemIconComponent_div_0_Template","ArmorPerkIconComponent_ng_container_1_img_3_Template","customIconMods","ArmorPerkIconComponent","ArmorPerkIconComponent_ng_container_1_Template","ArmorPerkIconComponent_ng_container_2_Template","CountElementInListPipe","searchItem","i_r25","ctx_r28","bonus_r36","ExpandedResultContentComponent_ng_container_22_tr_1_u_2_Template","ExpandedResultContentComponent_ng_container_22_tr_1_span_3_Template","ExpandedResultContentComponent_ng_container_22_tr_1_ng_container_4_Template","_r42","ctx_r41","disableItem","ExpandedResultContentComponent_ng_container_22_tr_1_td_15_Template","ExpandedResultContentComponent_ng_container_22_tr_1_td_16_Template","ExpandedResultContentComponent_ng_container_22_tr_1_td_17_Template","ExpandedResultContentComponent_ng_container_22_tr_1_td_18_Template","items_r23","ctx_r24","config_assumeLegendariesMasterworked","config_assumeExoticsMasterworked","ExpandedResultContentComponent_ng_container_22_tr_1_Template","_r46","ctx_r45","disableAllItems","_r48","ctx_r47","stats_r49","ctx_r50","ctx_r51","ctx_r52","ctx_r53","ctx_r54","ctx_r55","ExpandedResultContentComponent_tr_25_td_3_Template","ExpandedResultContentComponent_tr_25_td_4_Template","ExpandedResultContentComponent_tr_25_td_5_Template","ExpandedResultContentComponent_tr_25_td_6_Template","ExpandedResultContentComponent_tr_25_td_7_Template","ExpandedResultContentComponent_tr_25_td_8_Template","ExpandedResultContentComponent_span_30_span_1_Template","configValues","ExpandedResultContentComponent_span_32_span_1_Template","ExpandedResultContentComponent_span_34_span_1_Template","ExpandedResultContentComponent_span_36_span_1_Template","ctx_r8","ExpandedResultContentComponent_span_38_span_1_Template","ctx_r9","ExpandedResultContentComponent_span_40_span_1_Template","ctx_r10","count_r75","ExpandedResultContentComponent_tr_41_td_3_span_1_Template","count_r78","ExpandedResultContentComponent_tr_41_td_5_span_1_Template","count_r81","ExpandedResultContentComponent_tr_41_td_7_span_1_Template","count_r84","ExpandedResultContentComponent_tr_41_td_9_span_1_Template","count_r87","ExpandedResultContentComponent_tr_41_td_11_span_1_Template","count_r90","ExpandedResultContentComponent_tr_41_td_13_span_1_Template","ExpandedResultContentComponent_tr_41_td_3_Template","ExpandedResultContentComponent_tr_41_td_5_Template","ExpandedResultContentComponent_tr_41_td_7_Template","ExpandedResultContentComponent_tr_41_td_9_Template","ExpandedResultContentComponent_tr_41_td_11_Template","ExpandedResultContentComponent_tr_41_td_13_Template","mods_r68","ctx_r11","count_r100","ExpandedResultContentComponent_tr_42_td_3_span_1_Template","count_r103","ExpandedResultContentComponent_tr_42_td_5_span_1_Template","count_r106","ExpandedResultContentComponent_tr_42_td_7_span_1_Template","count_r109","ExpandedResultContentComponent_tr_42_td_9_span_1_Template","count_r112","ExpandedResultContentComponent_tr_42_td_11_span_1_Template","count_r115","ExpandedResultContentComponent_tr_42_td_13_span_1_Template","ExpandedResultContentComponent_tr_42_td_3_Template","ExpandedResultContentComponent_tr_42_td_5_Template","ExpandedResultContentComponent_tr_42_td_7_Template","ExpandedResultContentComponent_tr_42_td_9_Template","ExpandedResultContentComponent_tr_42_td_11_Template","ExpandedResultContentComponent_tr_42_td_13_Template","mods_r93","ctx_r12","count_r125","ExpandedResultContentComponent_ng_container_43_td_4_span_1_Template","count_r128","ExpandedResultContentComponent_ng_container_43_td_6_span_1_Template","count_r131","ExpandedResultContentComponent_ng_container_43_td_8_span_1_Template","count_r134","ExpandedResultContentComponent_ng_container_43_td_10_span_1_Template","count_r137","ExpandedResultContentComponent_ng_container_43_td_12_span_1_Template","count_r140","ExpandedResultContentComponent_ng_container_43_td_14_span_1_Template","ExpandedResultContentComponent_ng_container_43_td_4_Template","ExpandedResultContentComponent_ng_container_43_td_6_Template","ExpandedResultContentComponent_ng_container_43_td_8_Template","ExpandedResultContentComponent_ng_container_43_td_10_Template","ExpandedResultContentComponent_ng_container_43_td_12_Template","ExpandedResultContentComponent_ng_container_43_td_14_Template","mods_r118","ctx_r13","stats_r143","ctx_r14","cost_r144","ExpandedResultContentComponent_ng_container_45_div_1_span_2_Template","ExpandedResultContentComponent_ng_container_45_div_1_span_3_Template","ExpandedResultContentComponent_ng_container_45_div_1_span_4_Template","ExpandedResultContentComponent_ng_container_45_div_1_span_5_Template","ExpandedResultContentComponent_ng_container_45_div_1_Template","total","_r157","ctx_r156","openSnackBar","text_r155","item1_r161","ExpandedResultContentComponent_ng_container_71_li_1_li_3_Template","mwItems_r158","ExpandedResultContentComponent_ng_container_71_li_1_Template","minorCount_r171","majorCount_r173","ExpandedResultContentComponent_li_72_ul_2_ng_container_1_ng_container_1_li_1_span_1_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_1_ng_container_1_li_1_ng_container_2_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_1_ng_container_1_li_1_span_3_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_1_ng_container_1_li_1_ng_container_5_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_1_ng_container_1_li_1_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_1_ng_container_1_Template","mods_r164","ctx_r165","minorCount_r185","majorCount_r187","ExpandedResultContentComponent_li_72_ul_2_ng_container_3_ng_container_1_li_1_span_1_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_3_ng_container_1_li_1_ng_container_2_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_3_ng_container_1_li_1_span_3_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_3_ng_container_1_li_1_ng_container_5_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_3_ng_container_1_li_1_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_3_ng_container_1_Template","ctx_r166","minorCount_r199","majorCount_r201","ExpandedResultContentComponent_li_72_ul_2_ng_container_5_ng_container_1_li_1_span_1_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_5_ng_container_1_li_1_ng_container_2_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_5_ng_container_1_li_1_span_3_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_5_ng_container_1_li_1_ng_container_5_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_5_ng_container_1_li_1_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_5_ng_container_1_Template","ctx_r167","minorCount_r213","majorCount_r215","ExpandedResultContentComponent_li_72_ul_2_ng_container_7_ng_container_1_li_1_span_1_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_7_ng_container_1_li_1_ng_container_2_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_7_ng_container_1_li_1_span_3_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_7_ng_container_1_li_1_ng_container_5_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_7_ng_container_1_li_1_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_7_ng_container_1_Template","ctx_r168","minorCount_r227","majorCount_r229","ExpandedResultContentComponent_li_72_ul_2_ng_container_9_ng_container_1_li_1_span_1_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_9_ng_container_1_li_1_ng_container_2_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_9_ng_container_1_li_1_span_3_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_9_ng_container_1_li_1_ng_container_5_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_9_ng_container_1_li_1_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_9_ng_container_1_Template","ctx_r169","minorCount_r241","majorCount_r243","ExpandedResultContentComponent_li_72_ul_2_ng_container_11_ng_container_1_li_1_span_1_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_11_ng_container_1_li_1_ng_container_2_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_11_ng_container_1_li_1_span_3_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_11_ng_container_1_li_1_ng_container_5_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_11_ng_container_1_li_1_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_11_ng_container_1_Template","ctx_r170","ExpandedResultContentComponent_li_72_ul_2_ng_container_1_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_3_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_5_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_7_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_9_Template","ExpandedResultContentComponent_li_72_ul_2_ng_container_11_Template","ctx_r163","ExpandedResultContentComponent_li_72_ul_2_Template","ctx_r19","info_r259","ExpandedResultContentComponent_li_74_ng_container_3_ng_container_1_li_1_Template","ctx_r258","ExpandedResultContentComponent_li_74_ng_container_3_ng_container_1_Template","ctx_r255","mod_r257","info_r264","ExpandedResultContentComponent_li_74_ng_container_4_ng_container_1_li_1_Template","ctx_r263","ExpandedResultContentComponent_li_74_ng_container_4_ng_container_1_Template","ctx_r256","mod_r262","ExpandedResultContentComponent_li_74_ng_container_3_Template","ExpandedResultContentComponent_li_74_ng_container_4_Template","ctx_r20","config_enabledMods","d_r269","ExpandedResultContentComponent_tr_107_td_5_div_1_Template","ExpandedResultContentComponent_tr_107_td_5_Template","statId_r267","getColumnForStat","getTiersForStat","exotic_r272","ExpandedResultContentComponent_ng_container_121_tr_1_Template","ExpandedResultContentComponent","_snackBar","bungieApi","showGenericClassItemRow","armorStatIds","config_characterClass","config_assumeClassItemMasterworked","DIMUrl","buildItemIdString","join","classItemFilters","message","duration","politeness","generateDIMLink","mayAnyItemBeBugged","getCharacterId","moveItems","allSuccessful","getItemsThatMustBeMasterworked","calculateRequiredMasterworkCost","costList","entryName","fragments","modInfo","artificemod","statConstraints","assumeArmorMasterwork","minTier","maxTier","exoticArmorHash","exos","exoticHash","loadout","parameters","equipped","unequipped","clearSpace","socketOverrides","subclassHash","encodeURIComponent","goToDIM","statId","configValueTiers","moddedTiersMinor","cvt","getRequiredMasterworkBonus","ExpandedResultContentComponent_mat_toolbar_1_Template","ExpandedResultContentComponent_ng_container_22_Template","ExpandedResultContentComponent_tr_23_Template","ExpandedResultContentComponent_tr_24_Template","ExpandedResultContentComponent_tr_25_Template","ExpandedResultContentComponent_span_30_Template","ExpandedResultContentComponent_span_32_Template","ExpandedResultContentComponent_span_34_Template","ExpandedResultContentComponent_span_36_Template","ExpandedResultContentComponent_span_38_Template","ExpandedResultContentComponent_span_40_Template","ExpandedResultContentComponent_tr_41_Template","ExpandedResultContentComponent_tr_42_Template","ExpandedResultContentComponent_ng_container_43_Template","ExpandedResultContentComponent_tr_44_Template","ExpandedResultContentComponent_ng_container_45_Template","ExpandedResultContentComponent_ng_container_47_Template","ExpandedResultContentComponent_span_69_Template","ExpandedResultContentComponent_ng_container_71_Template","ExpandedResultContentComponent_li_72_Template","ExpandedResultContentComponent_li_74_Template","ExpandedResultContentComponent_tr_107_Template","ExpandedResultContentComponent_ng_container_121_Template","ChangelogListComponent_ng_container_1_mat_list_item_3_mat_icon_1_Template","ChangelogListComponent_ng_container_1_mat_list_item_3_mat_icon_2_Template","ChangelogListComponent_ng_container_1_mat_list_item_3_mat_icon_3_Template","entry_r3","ChangelogListComponent_ng_container_1_mat_list_item_3_Template","log_r1","ChangelogListComponent","ChangelogListComponent_ng_container_1_Template","text_r1","HelpPageComponent","knownIssues","HelpPageComponent_li_112_Template","differenceTier","entry_r2","ctx_r15","dif_r16","formatEntry","StatCooldownTooltipComponent_ng_container_12_tr_1_ng_container_1_ng_container_6_ng_container_1_td_1_span_1_Template","selectedTierValue_r10","currentTierValue_r5","tierDifference_r12","StatCooldownTooltipComponent_ng_container_12_tr_1_ng_container_1_ng_container_6_ng_container_1_td_1_Template","StatCooldownTooltipComponent_ng_container_12_tr_1_ng_container_1_ng_container_6_ng_container_1_td_2_Template","StatCooldownTooltipComponent_ng_container_12_tr_1_ng_container_1_ng_container_6_ng_container_1_Template","getPercentageDifference","itemHash_r22","StatCooldownTooltipComponent_ng_container_12_tr_1_ng_container_1_img_2_Template","StatCooldownTooltipComponent_ng_container_12_tr_1_ng_container_1_ng_container_6_Template","StatCooldownTooltipComponent_ng_container_12_tr_1_ng_container_1_ng_container_8_Template","ctx_r4","valueFunction","StatCooldownTooltipComponent_ng_container_12_tr_1_ng_container_1_Template","StatCooldownTooltipComponent_ng_container_12_tr_1_Template","StatCooldownTooltipComponent","parseFloat","toFixed","t","speedTextFormatter","reformatTimeMMMSS","str","formatTimeMMMSS","seconds","abs","sec","reformatTimeSplit","formatTimeSplit","ms","v1","v2","StatCooldownTooltipComponent_th_11_Template","StatCooldownTooltipComponent_ng_container_12_Template","StatCooldownTooltipDirective","tooltipTier","tooltipStat","tooltipDifferenceTier","tooltipRef","i_r6","setValue","isAddedByConfigMods","selectedTier","maximumAvailableTier","StatTierSelectionComponent_ng_container_0_mat_button_toggle_2_Template","TierRange","$event","_r10","setValueMob","StatTierSelectionComponent","statsByMods","locked","selectedTierChange","EventEmitter","lockedChange","newValue","emit","inputEvent","target","toggleLockState","outputs","StatTierSelectionComponent_ng_container_0_Template","StatTierSelectionComponent_ng_container_1_Template","StatTierSelectionComponent_mat_icon_3_Template","StatTierSelectionComponent_mat_icon_4_Template","StatIconComponent","enum_r5","_r7","setSelectedTier","setLockState","config_allowExactStats","d_r9","_r13","useStatPreset","DesiredStatSelectionComponent_button_13_app_stat_icon_1_Template","d_r14","ctx_r17","DesiredStatSelectionComponent_button_21_app_stat_icon_1_Template","calcScore","pow","DesiredStatSelectionComponent","_statCombo4x100","_statCombo3x100","config_zero_waste","config_mod_strategy","config_reduce_waste","tmpStatsByMods","enabledMod","clearStatSelection","armorStat","setModOptimizationStrategy","toggleReduceWaste","DesiredStatSelectionComponent_tr_1_Template","DesiredStatSelectionComponent_button_13_Template","DesiredStatSelectionComponent_button_21_Template","_r1","_r3","artificeUrl","artificeCount_r2","TableModDisplayComponent_ng_container_1_div_1_Template","getStatName","stat_r6","modType_r8","ModUrl","count_r10","TableModDisplayComponent_ng_container_3_ng_container_1_ng_container_1_div_1_Template","TableModDisplayComponent_ng_container_3_ng_container_1_ng_container_1_Template","TableModDisplayComponent_ng_container_3_ng_container_1_Template","modTypeIndex","TableModDisplayComponent","modIndex","TableModDisplayComponent_ng_container_1_Template","TableModDisplayComponent_ng_container_3_Template","slot_r11","ModUrls","i_r13","_r15","selection","perk_r16","setArmorPerk","armorPerk","slotName","SlotLimitationSelectionComponent","featureDisabled","ModRange","possible","fixedExoticInThisSlot","isPossible","configSelectedClass","configAssumeLegendaryIsArtifice","configSelectedExoticSum","configSelectedExotic","configAssumeClassItemIsArtifice","configAssumeExoticIsArtifice","armorPerkLock","hoveredSlot","disabled","availableArmorPerks","runPossibilityCheck","and","f","newExoticSum","mustRunPossibilityCheck","toggleArmorPerkLock","getStatIconUrl","SlotLimitationSelectionComponent_div_14_Template","SlotLimitationSelectionComponent_mat_button_toggle_16_Template","stopPropagation","SlotLimitationSelectionComponent_mat_icon_24_Template","SlotLimitationSelectionComponent_mat_icon_25_Template","SlotLimitationSelectionComponent_ng_container_28_Template","SlotLimitationSelectionComponent_img_30_Template","SlotLimitationSelectionComponent_img_31_Template","SlotLimitationSelectionComponent_img_32_Template","SlotLimitationSelectionComponent_img_33_Template","SlotLimitationSelectionComponent_img_34_Template","SlotLimitationTitleComponent","DesiredModLimitSelectionComponent","possibilityList","allPossible","disabledSlotLimitation","updatePossibility","DesiredModLimitSelectionComponent_mat_toolbar_0_Template","DesiredModLimitSelectionComponent_mat_toolbar_16_Template","exoticPerk","ExoticPerkTooltipComponent_tr_12_ng_container_3_ng_container_2_Template","ExoticPerkTooltipComponent_tr_12_ng_container_3_Template","ExoticPerkTooltipComponent_tr_12_ng_container_4_Template","collection","ExoticPerkTooltipComponent","exoticPerkNotThere","ExoticPerkTooltipComponent_img_5_Template","ExoticPerkTooltipComponent_tr_8_Template","ExoticPerkTooltipComponent_tr_9_Template","ExoticPerkTooltipComponent_tr_10_Template","ExoticPerkTooltipComponent_tr_11_Template","ExoticPerkTooltipComponent_tr_12_Template","ExoticTooltipDirective","exoticTooltipInVendor","exoticTooltipInCollection","exoticTooltip","_r9","selectExotic","_r12","exotic_r13","_r19","ctx_r18","DesiredExoticSelectionComponent_div_0_span_3_img_2_Template","DesiredExoticSelectionComponent_div_0_span_3_div_3_Template","DesiredExoticSelectionComponent_div_0_img_1_Template","DesiredExoticSelectionComponent_div_0_img_2_Template","DesiredExoticSelectionComponent_div_0_span_3_Template","itemGroup_r2","_r21","listAnimation","query","opacity","stagger","optional","DesiredExoticSelectionComponent","updateExoticsForClass","armors","uniq","seen","setAllowCollectionRolls","allow","setAllowVendorItems","setAllowBlueArmorPieces","setIgnoreSunsetArmor","ignore","setIgnoreExistingExoticArtificeSlots","shiftKey","DesiredExoticSelectionComponent_div_0_Template","DesiredExoticSelectionComponent_button_2_Template","checked","UserdataService","loadCachedData","updateCharacterData","itemCounts","char_r3","_r11","selectClass","DesiredClassSelectionComponent_div_2_span_2_Template","DesiredClassSelectionComponent_div_2_span_3_Template","DesiredClassSelectionComponent_div_2_span_4_Template","DesiredClassSelectionComponent_div_2_div_5_Template","idx_r4","storedMaterials","DesiredClassSelectionComponent","userdata","classAvailable","findIndex","chr","loadStoredMaterials","updateItemCount","DesiredClassSelectionComponent_div_1_Template","DesiredClassSelectionComponent_div_2_Template","DesiredClassSelectionComponent_div_3_Template","ModDescriptionTooltipComponent","ModTooltipDirective","_r6","setElement","selectedElement","d_r1","element_r32","selectedMods","value_r35","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_6_span_1_span_1_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_6_span_1_span_2_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_6_span_1_Template","getModifierTextForValue","element_r33","value_r42","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_9_span_1_span_1_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_9_span_1_span_2_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_9_span_1_Template","element_r40","value_r49","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_12_span_1_span_1_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_12_span_1_span_2_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_12_span_1_Template","element_r47","value_r56","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_15_span_1_span_1_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_15_span_1_span_2_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_15_span_1_Template","element_r54","value_r63","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_18_span_1_span_1_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_18_span_1_span_2_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_18_span_1_Template","element_r61","value_r70","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_21_span_1_span_1_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_21_span_1_span_2_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_21_span_1_Template","element_r68","row_r75","_r77","ctx_r76","handleRowClick","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_th_2_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_3_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_th_5_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_6_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_th_8_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_9_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_th_11_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_12_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_th_14_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_15_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_th_17_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_18_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_th_20_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_td_21_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_tr_22_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_tr_23_Template","displayedColumns","DesiredModsSelectionComponent_span_0_ng_container_2_h3_1_Template","DesiredModsSelectionComponent_span_0_ng_container_2_span_2_Template","DesiredModsSelectionComponent_span_0_ng_container_2_table_3_Template","group","DesiredModsSelectionComponent_span_0_ng_container_1_Template","DesiredModsSelectionComponent_span_0_ng_container_2_Template","idx_r2","DesiredModsSelectionComponent","modifiers","toLowerCase","dataSource","row","pos","toDisableMods","position","features","provide","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","useValue","disableToggleValue","disableDragValue","DesiredModsSelectionComponent_span_0_Template","f_r3","help","cp","AdvancedSettingsComponent_div_0_div_3_mat_icon_3_Template","AdvancedSettingsComponent_div_0_div_3_mat_icon_4_Template","impactsResultCount","AdvancedSettingsComponent_div_0_div_3_Template","category_r1","fields2","AdvancedSettingsComponent","fieldKeys","Events","Masterwork","cf","AdvancedSettingsComponent_div_0_Template","ConfirmDialogComponent","dialogRef","onNoClick","close","MAT_DIALOG_DATA","LoadAndSaveSettingsComponent_mat_option_23_span_3_Template","LoadAndSaveSettingsComponent_mat_option_23_span_4_Template","LoadAndSaveSettingsComponent_mat_option_23_span_5_Template","element_r22","element_r26","LoadAndSaveSettingsComponent_td_37_span_1_Template","LoadAndSaveSettingsComponent_td_37_span_2_Template","LoadAndSaveSettingsComponent_td_37_span_3_Template","element_r27","element_r31","element_r34","element_r35","element_r36","element_r37","_r39","ctx_r38","ctx_r40","copySingleSettingToClipboard","_r44","ctx_r43","copyAllSettingsToClipboard","LoadAndSaveSettingsComponent","formBuilder","clipboard","selectedEntry","storedConfigs","settingsNameForm","importTextForm","content","submit","width","reset","clearEverything","runImport","jsonText","isArray","jsonDatum","copy","LoadAndSaveSettingsComponent_mat_option_23_Template","LoadAndSaveSettingsComponent_th_33_Template","LoadAndSaveSettingsComponent_td_34_Template","LoadAndSaveSettingsComponent_th_36_Template","LoadAndSaveSettingsComponent_td_37_Template","LoadAndSaveSettingsComponent_th_39_Template","LoadAndSaveSettingsComponent_td_40_Template","LoadAndSaveSettingsComponent_th_42_Template","LoadAndSaveSettingsComponent_td_43_Template","LoadAndSaveSettingsComponent_th_45_Template","LoadAndSaveSettingsComponent_td_46_Template","LoadAndSaveSettingsComponent_th_48_Template","LoadAndSaveSettingsComponent_td_49_Template","LoadAndSaveSettingsComponent_th_51_Template","LoadAndSaveSettingsComponent_td_52_Template","LoadAndSaveSettingsComponent_th_54_Template","LoadAndSaveSettingsComponent_td_55_Template","LoadAndSaveSettingsComponent_th_57_Template","LoadAndSaveSettingsComponent_td_58_Template","LoadAndSaveSettingsComponent_tr_59_Template","LoadAndSaveSettingsComponent_tr_60_Template","LoadAndSaveSettingsComponent_ng_container_61_Template","tmp_1_0","i_r10","_r14","enableItem","IgnoredItemsListComponent_div_0_div_1_span_6_br_2_Template","generateTooltip","idx_r11","IgnoredItemsListComponent_div_0_div_1_div_1_Template","IgnoredItemsListComponent_div_0_div_1_div_2_Template","IgnoredItemsListComponent_div_0_div_1_div_3_Template","IgnoredItemsListComponent_div_0_div_1_div_4_Template","IgnoredItemsListComponent_div_0_div_1_div_5_Template","IgnoredItemsListComponent_div_0_div_1_span_6_Template","idx_r3","entries_r2","IgnoredItemsListComponent_div_0_div_1_Template","IgnoredItemsListComponent","instanceId","newDisabledItems","itemInstance","IgnoredItemsListComponent_div_0_Template","SettingsComponent","ArmorPickerPageComponent","idx1_r6","clusterInformation","mean","ArmorClusterPageComponent_ng_container_92_mat_card_1_ng_container_9_tr_1_Template","ArmorClusterPageComponent_ng_container_92_mat_card_1_ng_container_9_Template","cluster_r1","getDIMStringForCluster","ArmorClusterPageComponent_ng_container_92_mat_card_1_Template","clusterData","size","centroids","std","ArmorClusterPageComponent","clusters","exoticFilter","masterworkFilter","classFilter","Update","getClusterid","cluster","vectorDistance","sqrt","currentDist","MAX_VALUE","currentId","dist","ArmorClusterPageComponent_ng_container_92_Template","id2_r11","idx1_r8","ci_r10","ArmorInvestigationPageComponent_ng_container_122_ng_container_5_ng_container_29_div_9_Template","armor_r3","entry_r7","plug_r14","getPlugSum","getPlugString","ArmorInvestigationPageComponent_ng_container_122_ng_container_5_ng_container_29_Template","ArmorInvestigationPageComponent_ng_container_122_ng_container_5_tr_40_Template","totalSum","ArmorInvestigationPageComponent_ng_container_122_ng_container_5_Template","getCategoryName","armorItems_r1","ArmorInvestigationPageComponent","minMobility","minResilience","minRecovery","minDiscipline","minIntellect","minStrength","anyPlugWithN","anyPlugBelowN","allPlugsWithN","allPlugsBelowN","armorName","armorHash","armorId","armorItemsPerSlot","plugData","updateItems","plugId","plugInfo","armorItems","localeCompare","filterItems","pl","ArmorInvestigationPageComponent_ng_container_122_Template","AccountConfigPageComponent","downloadArmorInformation","downloadManifestInformation","resetEverything","init","tracingOrigins","inlineImages","networkRecording","recordHeadersAndBody","urlBlocklist","routes","path","component","children","loadChildren","bind","TheorizerPageModule","redirectTo","AppModule","bootstrap","CommonModule","BrowserModule","BrowserAnimationsModule","HttpClientModule","RouterModule","forRoot","useHash","ClipboardModule","LayoutModule","i8","i9","i10","i11","i12","i13","enableProdMode","__NgCli_bootstrap_1","bootstrapModule"],"sourceRoot":"webpack:///","sources":["./src/app/data/ModInformation.ts","./src/app/data/constants.ts","./src/app/data/database.ts","./src/app/data/enum/armor-slot.ts","./src/app/data/enum/armor-stat.ts","./src/app/data/enum/mod-optimization-strategy.ts","./src/app/data/enum/modOrAbility.ts","./src/app/data/enum/modifierType.ts","./src/app/modules/common-material/common-material.module.ts","./src/app/data/generated/precalculatedZeroWasteModCombinations.ts","./src/app/data/generated/precalculatedModCombinations.ts","./src/app/data/types/IPermutatorArmorSet.ts","./src/app/services/results-builder.worker.ts","./src/environments/environment.prod.ts","./src/app/data/commonFunctions.ts","./src/app/services/status-provider.service.ts","./src/app/services/auth.service.ts","./src/app/components/handle-bungie-login/handle-bungie-login.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/guards/authenticated.guard.ts","./src/app/guards/not-authenticated.guard.ts","./src/app/data/buildConfiguration.ts","./src/app/data/types/IInventoryArmor.ts","./src/app/services/database.service.ts","./src/app/services/configuration.service.ts","./src/app/services/http-client.service.ts","./src/app/services/membership.service.ts","./src/app/services/bungie-api.service.ts","./src/app/services/vendors.service.ts","./src/app/services/inventory.service.ts","./src/app/services/clarity.service.ts","./src/app/services/character-stats.service.ts","./src/app/data/changelog.ts","./src/app/components/authenticated-v2/components/changelog-dialog/changelog-dialog.component.ts","./src/app/components/authenticated-v2/components/changelog-dialog/changelog-dialog.component.html","./src/app/services/changelog.service.ts","./src/app/components/authenticated-v2/components/var-directive.directive.ts","./src/app/components/authenticated-v2/components/changelog-dialog-controller/changelog-dialog-controller.component.ts","./src/app/components/authenticated-v2/app-v2-core/app-v2-core.component.html","./src/app/components/authenticated-v2/app-v2-core/app-v2-core.component.ts","./src/app/components/authenticated-v2/results/results.component.html","./src/app/components/authenticated-v2/results/results.component.ts","./src/app/data/masterworkCost.ts","./src/app/data/enum/armor-source.ts","./src/app/components/authenticated-v2/pipes/vendor-name-pipe.ts","./src/app/components/authenticated-v2/overlays/armor-tooltip-component/armor-tooltip.component.html","./src/app/components/authenticated-v2/overlays/armor-tooltip-component/armor-tooltip.component.ts","./src/app/components/authenticated-v2/overlays/armor-tooltip-component/item-tooltip-renderer.directive.ts","./src/app/services/item-icon-service.service.ts","./src/app/components/authenticated-v2/components/item-icon/item-icon.component.html","./src/app/components/authenticated-v2/components/item-icon/item-icon.component.ts","./src/app/components/authenticated-v2/components/armor-perk-icon/armor-perk-icon.component.html","./src/app/components/authenticated-v2/components/armor-perk-icon/armor-perk-icon.component.ts","./src/app/components/authenticated-v2/results/expanded-result-content/count-element-in-list.pipe.ts","./src/app/components/authenticated-v2/results/expanded-result-content/expanded-result-content.component.html","./src/app/components/authenticated-v2/results/expanded-result-content/expanded-result-content.component.ts","./src/app/components/authenticated-v2/components/changelog-list/changelog-list.component.html","./src/app/components/authenticated-v2/components/changelog-list/changelog-list.component.ts","./src/app/components/authenticated-v2/subpages/help-page/help-page.component.html","./src/app/components/authenticated-v2/subpages/help-page/help-page.component.ts","./src/app/components/authenticated-v2/overlays/stat-cooldown-tooltip/stat-cooldown-tooltip.component.html","./src/app/components/authenticated-v2/overlays/stat-cooldown-tooltip/stat-cooldown-tooltip.component.ts","./src/app/data/cooldowns/cooldown_definitions.ts","./src/app/components/authenticated-v2/overlays/stat-cooldown-tooltip/stat-cooldown-tooltip.directive.ts","./src/app/components/authenticated-v2/settings/desired-stat-selection/stat-tier-selection/stat-tier-selection.component.html","./src/app/components/authenticated-v2/settings/desired-stat-selection/stat-tier-selection/stat-tier-selection.component.ts","./src/app/components/authenticated-v2/components/stat-icon/stat-icon.component.ts","./src/app/components/authenticated-v2/components/stat-icon/stat-icon.component.html","./src/app/components/authenticated-v2/settings/desired-stat-selection/desired-stat-selection.component.html","./src/app/components/authenticated-v2/settings/desired-stat-selection/desired-stat-selection.component.ts","./src/app/components/authenticated-v2/results/table-mod-display/table-mod-display.component.html","./src/app/components/authenticated-v2/results/table-mod-display/table-mod-display.component.ts","./src/app/components/authenticated-v2/settings/desired-mod-limit-selection/slot-limitation-selection/slot-limitation-selection.component.html","./src/app/components/authenticated-v2/settings/desired-mod-limit-selection/slot-limitation-selection/slot-limitation-selection.component.ts","./src/app/components/authenticated-v2/settings/desired-mod-limit-selection/slot-limitation-title/slot-limitation-title.component.ts","./src/app/components/authenticated-v2/settings/desired-mod-limit-selection/slot-limitation-title/slot-limitation-title.component.html","./src/app/components/authenticated-v2/settings/desired-mod-limit-selection/desired-mod-limit-selection.component.html","./src/app/components/authenticated-v2/settings/desired-mod-limit-selection/desired-mod-limit-selection.component.ts","./src/app/components/authenticated-v2/overlays/exotic-perk-tooltip/exotic-perk-tooltip.component.html","./src/app/components/authenticated-v2/overlays/exotic-perk-tooltip/exotic-perk-tooltip.component.ts","./src/app/components/authenticated-v2/overlays/exotic-perk-tooltip/exotic-tooltip.directive.ts","./src/app/components/authenticated-v2/settings/desired-exotic-selection/desired-exotic-selection.component.html","./src/app/components/authenticated-v2/settings/desired-exotic-selection/desired-exotic-selection.component.ts","./src/app/services/userdata.service.ts","./src/app/components/authenticated-v2/settings/desired-class-selection/desired-class-selection.component.html","./src/app/components/authenticated-v2/settings/desired-class-selection/desired-class-selection.component.ts","./src/app/components/authenticated-v2/overlays/mod-description-tooltip/mod-description-tooltip.component.ts","./src/app/components/authenticated-v2/overlays/mod-description-tooltip/mod-description-tooltip.component.html","./src/app/components/authenticated-v2/overlays/mod-description-tooltip/mod-tooltip.directive.ts","./src/app/components/authenticated-v2/settings/desired-mods-selection/desired-mods-selection.component.html","./src/app/components/authenticated-v2/settings/desired-mods-selection/desired-mods-selection.component.ts","./src/app/components/authenticated-v2/settings/advanced-settings/advanced-settings.component.html","./src/app/components/authenticated-v2/settings/advanced-settings/advanced-settings.component.ts","./src/app/components/authenticated-v2/components/confirm-dialog/confirm-dialog.component.ts","./src/app/components/authenticated-v2/components/confirm-dialog/confirm-dialog.component.html","./src/app/components/authenticated-v2/settings/load-and-save-settings/load-and-save-settings.component.html","./src/app/components/authenticated-v2/settings/load-and-save-settings/load-and-save-settings.component.ts","./src/app/components/authenticated-v2/settings/ignored-items-list/ignored-items-list.component.html","./src/app/components/authenticated-v2/settings/ignored-items-list/ignored-items-list.component.ts","./src/app/components/authenticated-v2/settings/settings.component.ts","./src/app/components/authenticated-v2/settings/settings.component.html","./src/app/components/authenticated-v2/subpages/armor-picker-page/armor-picker-page.component.ts","./src/app/components/authenticated-v2/subpages/armor-picker-page/armor-picker-page.component.html","./src/app/components/authenticated-v2/subpages/armor-cluster-page/armor-cluster-page.component.html","./src/app/components/authenticated-v2/subpages/armor-cluster-page/armor-cluster-page.component.ts","./src/app/components/authenticated-v2/subpages/armor-investigation-page/armor-investigation-page.component.html","./src/app/components/authenticated-v2/subpages/armor-investigation-page/armor-investigation-page.component.ts","./src/app/components/authenticated-v2/subpages/account-config-page/account-config-page.component.ts","./src/app/components/authenticated-v2/subpages/account-config-page/account-config-page.component.html","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EnumDictionary } from \"./types/EnumDictionary\";\nimport { ModOrAbility } from \"./enum/modOrAbility\";\nimport { Modifier } from \"./modifier\";\nimport { ModifierType } from \"./enum/modifierType\";\nimport { ArmorStat, SpecialArmorStat } from \"./enum/armor-stat\";\nimport { DestinyEnergyType } from \"bungie-api-ts/destiny2/interfaces\";\n\nexport const ModInformation: EnumDictionary<ModOrAbility, Modifier> = {\n  // region Stasis\n  [ModOrAbility.WhisperOfDurance]: {\n    id: ModOrAbility.WhisperOfDurance,\n    name: \"Whisper of Durance\",\n    description:\n      \"Slow that you apply to targets lasts longer. For those abilities that linger, their duration will also increase.\",\n    type: ModifierType.Stasis,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 3469412969,\n  },\n  [ModOrAbility.WhisperOfChains]: {\n    id: ModOrAbility.WhisperOfChains,\n    name: \"Whisper of Chains\",\n    description:\n      \"While you are near frozen targets or a friendly Stasis crystal, you take reduced damage from targets.\",\n    type: ModifierType.Stasis,\n    bonus: [{ stat: ArmorStat.Recovery, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 537774540,\n  },\n  [ModOrAbility.WhisperOfConduction]: {\n    id: ModOrAbility.WhisperOfConduction,\n    name: \"Whisper of Conduction\",\n    description: \"Nearby Stasis shards track to your position.\",\n    type: ModifierType.Stasis,\n    bonus: [\n      { stat: ArmorStat.Intellect, value: 10 },\n      { stat: ArmorStat.Resilience, value: 10 },\n    ],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2483898429,\n  },\n  [ModOrAbility.WhisperOfBonds]: {\n    id: ModOrAbility.WhisperOfBonds,\n    name: \"Whisper of Bonds\",\n    description: \"Defeating frozen targets generates an Orb of Power.\",\n    type: ModifierType.Stasis,\n    bonus: [{ stat: ArmorStat.Intellect, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 3469412974,\n  },\n  [ModOrAbility.WhisperOfHunger]: {\n    id: ModOrAbility.WhisperOfHunger,\n    name: \"Whisper of Hunger\",\n    description: \"Increases the melee energy gained from picking up Stasis shards.\",\n    type: ModifierType.Stasis,\n    bonus: [{ stat: ArmorStat.Strength, value: -20 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2483898431,\n  },\n  [ModOrAbility.WhisperOfFractures]: {\n    id: ModOrAbility.WhisperOfFractures,\n    name: \"Whisper of Fractures\",\n    description: \"Your melee energy recharges faster when you are near two or more targets.\",\n    type: ModifierType.Stasis,\n    bonus: [{ stat: ArmorStat.Discipline, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 537774542,\n  },\n  [ModOrAbility.WhisperOfImpetus]: {\n    id: ModOrAbility.WhisperOfImpetus,\n    name: \"Whisper of Impetus\",\n    description:\n      \"Damaging targets with a Stasis melee reloads your stowed weapons and grants you a temporary boost to weapon ready speed.\",\n    type: ModifierType.Stasis,\n    bonus: [{ stat: ArmorStat.Resilience, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 537774543,\n  },\n  [ModOrAbility.WhisperOfTorment]: {\n    id: ModOrAbility.WhisperOfTorment,\n    name: \"Whisper of Torment\",\n    description:\n      \"You gain grenade energy each time you take damage from targets. Having Frost Armor increases the amount of energy gained.\",\n    type: ModifierType.Stasis,\n    bonus: [{ stat: ArmorStat.Discipline, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 537774541,\n  },\n  // endregion Stasis\n\n  // region Void\n  [ModOrAbility.EchoOfExpulsion]: {\n    id: ModOrAbility.EchoOfExpulsion,\n    name: \"Echo of Expulsion\",\n    description: \"Void ability final blows cause targets to explode.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Intellect, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2272984665,\n  },\n  [ModOrAbility.EchoOfProvision]: {\n    id: ModOrAbility.EchoOfProvision,\n    name: \"Echo of Provision\",\n    description: \"Damaging targets with grenades grants melee energy.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Strength, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2272984664,\n  },\n  [ModOrAbility.EchoOfPersistence]: {\n    id: ModOrAbility.EchoOfPersistence,\n    name: \"Echo of Persistence\",\n    description:\n      \"Void buffs applied to you (Invisibility, Overshield, and Devour) have increased duration.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: SpecialArmorStat.ClassAbilityRegenerationStat, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2272984671,\n  },\n  [ModOrAbility.EchoOfLeeching]: {\n    id: ModOrAbility.EchoOfLeeching,\n    name: \"Echo of Leeching\",\n    description: \"Melee final blows start health regeneration for you and nearby allies.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Resilience, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2272984670,\n  },\n  [ModOrAbility.EchoOfDomineering]: {\n    id: ModOrAbility.EchoOfDomineering,\n    name: \"Echo of Domineering\",\n    description:\n      \"After suppressing a target, you gain greatly increased mobility for a short duration, and your equipped weapon is reloaded from reserves.\\n\\nDefeating suppressed targets creates a Void Breach.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Discipline, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2272984657,\n  },\n  [ModOrAbility.EchoOfDilation]: {\n    id: ModOrAbility.EchoOfDilation,\n    name: \"Echo of Dilation\",\n    description: \"While crouched, you sneak faster and gain enhanced radar resolution.\",\n    type: ModifierType.Void,\n    bonus: [\n      { stat: ArmorStat.Mobility, value: 10 },\n      { stat: ArmorStat.Intellect, value: 10 },\n    ],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2272984656,\n  },\n  [ModOrAbility.EchoOfUndermining]: {\n    id: ModOrAbility.EchoOfUndermining,\n    name: \"Echo of Undermining\",\n    description: \"Your Void grenades weaken targets.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Discipline, value: -20 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2272984668,\n  },\n  [ModOrAbility.EchoOfInstability]: {\n    id: ModOrAbility.EchoOfInstability,\n    name: \"Echo of Instability\",\n    description: \"Defeating targets with grenades grants Volatile Rounds to your Void weapons.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2661180600,\n  },\n  [ModOrAbility.EchoOfHarvest]: {\n    id: ModOrAbility.EchoOfHarvest,\n    name: \"Echo of Harvest\",\n    description: \"Defeating weakened targets creates an Orb of Power and a Void Breach.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Intellect, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2661180601,\n  },\n  [ModOrAbility.EchoOfObscurity]: {\n    id: ModOrAbility.EchoOfObscurity,\n    name: \"Echo of Obscurity\",\n    description: \"Finisher final blows grant Invisibility.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Recovery, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2661180602,\n  },\n  [ModOrAbility.EchoOfStarvation]: {\n    id: ModOrAbility.EchoOfStarvation,\n    name: \"Echo of Starvation\",\n    description: \"Picking up a Void Breach or an Orb of Power grants Devour.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Recovery, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2661180603,\n  },\n  [ModOrAbility.EchoOfVigilance]: {\n    id: ModOrAbility.EchoOfVigilance,\n    name: \"Echo of Vigilance\",\n    description:\n      \"Defeating a target while your shields are depleted grants you a temporary Void overshield.\",\n    type: ModifierType.Void,\n    bonus: [{ stat: ArmorStat.Recovery, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 3854948621,\n  },\n  // endregion Void\n\n  // region Solar\n  [ModOrAbility.EmberOfBenelovence]: {\n    id: ModOrAbility.EmberOfBenelovence,\n    name: \"Ember of Benevolence\",\n    description:\n      \"Applying restoration, cure,  or radiant to allies grants increased grenade, melee, and class ability regeneration for a short duration.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Discipline, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 362132292,\n  },\n  [ModOrAbility.EmberOfBeams]: {\n    id: ModOrAbility.EmberOfBeams,\n    name: \"Ember of Beams\",\n    description: \"Your Solar Super projectiles have stronger target acquisition.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Intellect, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 362132295,\n  },\n  [ModOrAbility.EmberOfEmpyrean]: {\n    id: ModOrAbility.EmberOfEmpyrean,\n    name: \"Ember of Empyrean\",\n    description:\n      \"Solar weapon or ability final blows extend the duration of restoration and radiant effects applied to you.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Resilience, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 362132294,\n  },\n  [ModOrAbility.EmberOfCombustion]: {\n    id: ModOrAbility.EmberOfCombustion,\n    name: \"Ember of Combustion\",\n    description:\n      \"Final blows with a Solar Super causes targets to ignite and creates a Firesprite.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 362132289,\n  },\n  [ModOrAbility.EmberOfChar]: {\n    id: ModOrAbility.EmberOfChar,\n    name: \"Ember of Char\",\n    description: \"Your Solar ignitions spread scorch to affected targets.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Discipline, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 362132291,\n  },\n  [ModOrAbility.EmberOfTempering]: {\n    id: ModOrAbility.EmberOfTempering,\n    name: \"Ember of Tempering\",\n    description:\n      \"Solar weapon final blows grant you and your allies increased recovery for a short duration. Stacks 3 times.\\n\\nWhile Ember of Tempering is active, your weapons have increased airborne effectiveness, and your Solar weapon final blows create a Firesprite.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Recovery, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 362132290,\n  },\n  [ModOrAbility.EmberOfEruption]: {\n    id: ModOrAbility.EmberOfEruption,\n    name: \"Ember of Eruption\",\n    description: \"Your Solar ignitions have increased area of effect.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 1051276348,\n  },\n  [ModOrAbility.EmberOfWonder]: {\n    id: ModOrAbility.EmberOfWonder,\n    name: \"Ember of Wonder\",\n    description:\n      \"Rapidly defeating multiple targets with Solar ignitions generates an Orb of Power.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Resilience, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 1051276350,\n  },\n  [ModOrAbility.EmberOfSearing]: {\n    id: ModOrAbility.EmberOfSearing,\n    name: \"Ember of Searing\",\n    description: \"Defeating scorched targets grants melee energy and creates a Firesprite.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Recovery, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 1051276351,\n  },\n  [ModOrAbility.EmberOfTorches]: {\n    id: ModOrAbility.EmberOfTorches,\n    name: \"Ember of Torches\",\n    description: \"Powered melee attacks against combatants make you and nearby allies radiant.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Discipline, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 362132288,\n  },\n  [ModOrAbility.EmberOfMercy]: {\n    id: ModOrAbility.EmberOfMercy,\n    name: \"Ember of Mercy\",\n    description:\n      \"When you revive an ally, you and other nearby allies gain restoration.\\n\\nPicking up a Firesprite grants restoration.\",\n    type: ModifierType.Solar,\n    bonus: [{ stat: ArmorStat.Resilience, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 4180586737,\n  },\n  // endregion Solar\n\n  // region Arc\n  [ModOrAbility.SparkOfBrilliance]: {\n    id: ModOrAbility.SparkOfBrilliance,\n    name: \"Spark of Brilliance\",\n    description: \"Defeating a blinded target with precision damage creates a blinding explosion.\",\n    type: ModifierType.Arc,\n    bonus: [{ stat: ArmorStat.Intellect, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 3277705905,\n  },\n  [ModOrAbility.SparkOfFeedback]: {\n    id: ModOrAbility.SparkOfFeedback,\n    name: \"Spark of Feedback\",\n    description: \"Taking melee damage briefly increases your outgoing melee damage.\",\n    type: ModifierType.Arc,\n    bonus: [{ stat: ArmorStat.Resilience, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 3277705907,\n  },\n  [ModOrAbility.SparkOfDischarge]: {\n    id: ModOrAbility.SparkOfDischarge,\n    name: \"Spark of Discharge\",\n    description: \"Arc weapon final blows have a chance to create an Ionic Trace.\",\n    type: ModifierType.Arc,\n    bonus: [{ stat: ArmorStat.Strength, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 1727069362,\n  },\n  [ModOrAbility.SparkOfFocus]: {\n    id: ModOrAbility.SparkOfFocus,\n    name: \"Spark of Focus\",\n    description: \"After sprinting for a short time, your class ability regeneration is increased.\",\n    type: ModifierType.Arc,\n    bonus: [{ stat: SpecialArmorStat.ClassAbilityRegenerationStat, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 1727069360,\n  },\n  [ModOrAbility.SparkOfVolts]: {\n    id: ModOrAbility.SparkOfVolts,\n    name: \"Spark of Volts\",\n    description: \"Finishers make you amplified.\",\n    type: ModifierType.Arc,\n    bonus: [{ stat: ArmorStat.Recovery, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 3277705904,\n  },\n  [ModOrAbility.SparkOfResistance]: {\n    id: ModOrAbility.SparkOfResistance,\n    name: \"Spark of Resistance\",\n    description: \"While surrounded by combatants, you are more resistant to incoming damage.\",\n    type: ModifierType.Arc,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 1727069366,\n  },\n  [ModOrAbility.SparkOfShock]: {\n    id: ModOrAbility.SparkOfShock,\n    name: \"Spark of Shock\",\n    description: \"Your Arc grenades jolt targets.\",\n    type: ModifierType.Arc,\n    bonus: [{ stat: ArmorStat.Discipline, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 1727069364,\n  },\n  // endregion Arc\n\n  // region Strand\n  [ModOrAbility.ThreadOfFury]: {\n    id: ModOrAbility.ThreadOfFury,\n    name: \"Thread of Fury\",\n    description: \"Damaging targets with a Tangle grants melee energy.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Strength, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 4208512219,\n  },\n  [ModOrAbility.ThreadOfAscent]: {\n    id: ModOrAbility.ThreadOfAscent,\n    name: \"Thread of Ascent\",\n    description:\n      \"Activating your grenade ability reloads your equipped weapon and grants bonus airborne effectiveness and handling for a short duration.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Mobility, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 4208512216,\n  },\n  [ModOrAbility.ThreadOfFinality]: {\n    id: ModOrAbility.ThreadOfFinality,\n    name: \"Thread of Finality\",\n    description: \"Finisher final blows create Threadlings.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Recovery, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 4208512217,\n  },\n  [ModOrAbility.ThreadOfWarding]: {\n    id: ModOrAbility.ThreadOfWarding,\n    name: \"Thread of Warding\",\n    description: \"Picking up an Orb of Power grants Woven Mail.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Resilience, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 4208512222,\n  },\n  [ModOrAbility.ThreadOfTransmutation]: {\n    id: ModOrAbility.ThreadOfTransmutation,\n    name: \"Thread of Transmutation\",\n    description: \"While you have Woven Mail, weapon final blows create a Tangle.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 4208512221,\n  },\n  [ModOrAbility.ThreadOfEvolution]: {\n    id: ModOrAbility.ThreadOfEvolution,\n    name: \"Thread of Evolution\",\n    description: \"Threadlings travel farther and deal additional damage.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Intellect, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 4208512211,\n  },\n  [ModOrAbility.ThreadOfBinding]: {\n    id: ModOrAbility.ThreadOfBinding,\n    name: \"Thread of Binding\",\n    description: \"Super final blows emit a suspending burst from the target.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Resilience, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 3192552688,\n  },\n  [ModOrAbility.ThreadOfGeneration]: {\n    id: ModOrAbility.ThreadOfGeneration,\n    name: \"Thread of Generation\",\n    description: \"Dealing damage generates grenade energy.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Discipline, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 3192552691,\n  },\n  [ModOrAbility.ThreadOfPropagation]: {\n    id: ModOrAbility.ThreadOfPropagation,\n    name: \"Thread of Propagation\",\n    description: \"Powered melee final blows grant your Strand weapons Unraveling Rounds.\",\n    type: ModifierType.Strand,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 4208512210,\n  },\n  // endregion Strand\n\n  // region Prismatic\n  [ModOrAbility.FacetOfAwakening]: {\n    id: ModOrAbility.FacetOfAwakening,\n    name: \"Facet of Awakening\",\n    description:\n      \"Rapid elemental final blows and Super final blows generate an elemental pickup of the matching damage type.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Resilience, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 124726505,\n  },\n  [ModOrAbility.FacetOfCourage]: {\n    id: ModOrAbility.FacetOfCourage,\n    name: \"Facet of Courage\",\n    description:\n      \"Your Light abilities deal increased damage to targets afflicted with Darkness debuffs.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Discipline, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2626922124,\n  },\n  [ModOrAbility.FacetOfDawn]: {\n    id: ModOrAbility.FacetOfDawn,\n    name: \"Facet of Dawn\",\n    description:\n      \"Powered melee hits against targets make you Radiant. Powered melee final blows make both you and nearby allies Radiant.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Strength, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2626922126,\n  },\n  [ModOrAbility.FacetOfDefiance]: {\n    id: ModOrAbility.FacetOfDefiance,\n    name: \"Facet of Defiance\",\n    description:\n      \"Finishers create a detonation that either jolts, scorches, slows, severs, or makes targets volatile based on the damage type of your equipped Super.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Recovery, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 74393640,\n  },\n  [ModOrAbility.FacetOfDevotion]: {\n    id: ModOrAbility.FacetOfDevotion,\n    name: \"Facet of Devotion\",\n    description:\n      \"Defeating targets afflicted with a Darkness debuff grants bonus Light Transcendence energy.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2626922125,\n  },\n  [ModOrAbility.FacetOfDominance]: {\n    id: ModOrAbility.FacetOfDominance,\n    name: \"Facet of Dominance\",\n    description: \"Your Void grenades weaken targets, and your Arc grenades jolt targets.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Discipline, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 124726504,\n  },\n  [ModOrAbility.FacetOfGrace]: {\n    id: ModOrAbility.FacetOfGrace,\n    name: \"Facet of Grace\",\n    description:\n      \"Defeating targets with Kinetic weapons grants you bonus Transcendence energy. Defeating targets with your Super grants you and nearby allies bonus Transcendence energy.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Resilience, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2626922121,\n  },\n  [ModOrAbility.FacetOfHonor]: {\n    id: ModOrAbility.FacetOfHonor,\n    name: \"Facet of Honor\",\n    description:\n      \"Collecting an elemental pickup or destroying a Tangle grants Transcendence energy of the same type.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 124726501,\n  },\n  [ModOrAbility.FacetOfJustice]: {\n    id: ModOrAbility.FacetOfJustice,\n    name: \"Facet of Justice\",\n    description: \"While Transcendent, your ability final blows explode.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Intellect, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2626922115,\n  },\n  [ModOrAbility.FacetOfProtection]: {\n    id: ModOrAbility.FacetOfProtection,\n    name: \"Facet of Protection\",\n    description: \"While surrounded by enemies, you are more resistant to incoming damage.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Strength, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 2626922120,\n  },\n  [ModOrAbility.FacetOfPurpose]: {\n    id: ModOrAbility.FacetOfPurpose,\n    name: \"Facet of Purpose\",\n    description:\n      \"Picking up an Orb of Power grants either Amplified, Restoration, Frost Armor, Woven Mail, or Overshield, based on the damage type of your equipped super.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Recovery, value: -10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 124726498,\n  },\n  [ModOrAbility.FacetOfRuin]: {\n    id: ModOrAbility.FacetOfRuin,\n    name: \"Facet of Ruin\",\n    description:\n      \"Increases the size and damage of the burst when you shatter a Stasis crystal or frozen target and increases the area of effect of Solar ignitions.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Mobility, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 124726499,\n  },\n  [ModOrAbility.FacetOfSacrifice]: {\n    id: ModOrAbility.FacetOfSacrifice,\n    name: \"Facet of Sacrifice\",\n    description:\n      \"While you have a Light buff, ability final blows grant bonus Darkness Transcendence energy.\",\n    type: ModifierType.Prismatic,\n    bonus: [{ stat: ArmorStat.Discipline, value: 10 }],\n    cost: 1,\n    requiredArmorAffinity: DestinyEnergyType.Any,\n    hash: 124726502,\n  },\n  // endregion Prismatic\n};\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport const MAXIMUM_STAT_MOD_AMOUNT = 5;\n\nexport const FORCE_USE_NO_EXOTIC = -1;\nexport const FORCE_USE_ANY_EXOTIC = -2;\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Dexie from \"dexie\";\nimport { IManifestArmor } from \"./types/IManifestArmor\";\nimport { IInventoryArmor } from \"./types/IInventoryArmor\";\nimport { IManifestCollectible } from \"./types/IManifestCollectible\";\nimport { IVendorInfo } from \"./types/IVendorInfo\";\n\nexport class Database extends Dexie {\n  manifestArmor!: Dexie.Table<IManifestArmor, number>;\n  inventoryArmor!: Dexie.Table<IInventoryArmor, number>;\n\n  // Maps the collectible hash to the inventory item hash\n  manifestCollectibles!: Dexie.Table<IManifestCollectible>;\n  // Maps the vendor id to the vendor name\n  vendorNames!: Dexie.Table<IVendorInfo, number>;\n\n  constructor() {\n    super(\"d2armorpicker-v2\");\n    this.version(26).stores({\n      manifestArmor: \"id++, hash, isExotic\",\n      inventoryArmor:\n        \"id++, itemInstanceId, isExotic, hash, name, masterworked, clazz, slot, source\",\n      manifestCollectibles: \"id++, hash\",\n      vendorNames: \"id++, vendorId\",\n    });\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport enum ArmorSlot {\n  ArmorSlotNone,\n  ArmorSlotHelmet,\n  ArmorSlotGauntlet,\n  ArmorSlotChest,\n  ArmorSlotLegs,\n  ArmorSlotClass,\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EnumDictionary } from \"../types/EnumDictionary\";\nimport { DestinyClass } from \"bungie-api-ts/destiny2\";\nimport { ModifierType, Subclass } from \"./modifierType\";\n\nexport enum StatModifier {\n  NONE,\n  MINOR_MOBILITY,\n  MAJOR_MOBILITY,\n  ARTIFICE_MOBILITY,\n  MINOR_RESILIENCE,\n  MAJOR_RESILIENCE,\n  ARTIFICE_RESILIENCE,\n  MINOR_RECOVERY,\n  MAJOR_RECOVERY,\n  ARTIFICE_RECOVERY,\n  MINOR_DISCIPLINE,\n  MAJOR_DISCIPLINE,\n  ARTIFICE_DISCIPLINE,\n  MINOR_INTELLECT,\n  MAJOR_INTELLECT,\n  ARTIFICE_INTELLECT,\n  MINOR_STRENGTH,\n  MAJOR_STRENGTH,\n  ARTIFICE_STRENGTH,\n}\n\nexport enum ArmorStat {\n  Mobility,\n  Resilience,\n  Recovery,\n  Discipline,\n  Intellect,\n  Strength,\n}\n\n// Stat Enum, bonus, cost, mod hash\nexport const STAT_MOD_VALUES: EnumDictionary<StatModifier, [ArmorStat, number, number, number]> = {\n  [StatModifier.NONE]: [ArmorStat.Strength, 0, 0, 0],\n  [StatModifier.MINOR_MOBILITY]: [ArmorStat.Mobility, 5, 1, 1703647492],\n  [StatModifier.MAJOR_MOBILITY]: [ArmorStat.Mobility, 10, 3, 4183296050],\n  [StatModifier.ARTIFICE_MOBILITY]: [ArmorStat.Mobility, 3, 0, 2322202118],\n  [StatModifier.MINOR_RESILIENCE]: [ArmorStat.Resilience, 5, 2, 2532323436],\n  [StatModifier.MAJOR_RESILIENCE]: [ArmorStat.Resilience, 10, 4, 1180408010],\n  [StatModifier.ARTIFICE_RESILIENCE]: [ArmorStat.Resilience, 3, 0, 199176566],\n  [StatModifier.MINOR_RECOVERY]: [ArmorStat.Recovery, 5, 2, 1237786518],\n  [StatModifier.MAJOR_RECOVERY]: [ArmorStat.Recovery, 10, 4, 4204488676],\n  [StatModifier.ARTIFICE_RECOVERY]: [ArmorStat.Recovery, 3, 0, 539459624],\n  [StatModifier.MINOR_DISCIPLINE]: [ArmorStat.Discipline, 5, 1, 4021790309],\n  [StatModifier.MAJOR_DISCIPLINE]: [ArmorStat.Discipline, 10, 3, 1435557120],\n  [StatModifier.ARTIFICE_DISCIPLINE]: [ArmorStat.Discipline, 3, 0, 617569843],\n  [StatModifier.MINOR_INTELLECT]: [ArmorStat.Intellect, 5, 2, 350061697],\n  [StatModifier.MAJOR_INTELLECT]: [ArmorStat.Intellect, 10, 4, 2724608735],\n  [StatModifier.ARTIFICE_INTELLECT]: [ArmorStat.Intellect, 3, 0, 3160845295],\n  [StatModifier.MINOR_STRENGTH]: [ArmorStat.Strength, 5, 1, 2639422088],\n  [StatModifier.MAJOR_STRENGTH]: [ArmorStat.Strength, 10, 3, 4287799666],\n  [StatModifier.ARTIFICE_STRENGTH]: [ArmorStat.Strength, 3, 0, 2507624050],\n};\n\nexport const ArmorStatNames: EnumDictionary<ArmorStat, string> = {\n  [ArmorStat.Mobility]: \"Mobility\",\n  [ArmorStat.Resilience]: \"Resilience\",\n  [ArmorStat.Recovery]: \"Recovery\",\n  [ArmorStat.Discipline]: \"Discipline\",\n  [ArmorStat.Intellect]: \"Intellect\",\n  [ArmorStat.Strength]: \"Strength\",\n};\n\nexport const ArmorStatHashes: EnumDictionary<ArmorStat, number> = {\n  [ArmorStat.Mobility]: 2996146975,\n  [ArmorStat.Resilience]: 392767087,\n  [ArmorStat.Recovery]: 1943323491,\n  [ArmorStat.Discipline]: 1735777505,\n  [ArmorStat.Intellect]: 144602215,\n  [ArmorStat.Strength]: 4244567218,\n};\n\nexport const ArmorStatIconUrls: EnumDictionary<ArmorStat, string> = {\n  [ArmorStat.Mobility]:\n    \"https://www.bungie.net/common/destiny2_content/icons/e26e0e93a9daf4fdd21bf64eb9246340.png\",\n  [ArmorStat.Resilience]:\n    \"https://www.bungie.net/common/destiny2_content/icons/202ecc1c6febeb6b97dafc856e863140.png\",\n  [ArmorStat.Recovery]:\n    \"https://www.bungie.net/common/destiny2_content/icons/128eee4ee7fc127851ab32eac6ca91cf.png\",\n  [ArmorStat.Discipline]:\n    \"https://www.bungie.net/common/destiny2_content/icons/79be2d4adef6a19203f7385e5c63b45b.png\",\n  [ArmorStat.Intellect]:\n    \"https://www.bungie.net/common/destiny2_content/icons/d1c154469670e9a592c9d4cbdcae5764.png\",\n  [ArmorStat.Strength]:\n    \"https://www.bungie.net/common/destiny2_content/icons/ea5af04ccd6a3470a44fd7bb0f66e2f7.png\",\n};\n\nexport enum SpecialArmorStat {\n  ClassAbilityRegenerationStat = 10,\n}\n\nexport enum ArmorPerkOrSlot {\n  None,\n  SlotCrotasEnd = 2,\n  SlotRootOfNightmares,\n  SlotKingsFall,\n  SlotVowOfTheDisciple,\n  SlotVaultOfGlass,\n  SlotDeepStoneCrypt,\n  SlotGardenOfSalvation,\n  SlotLastWish,\n  SlotArtifice,\n  PerkIronBanner,\n  SlotNightmare,\n  // A special case just for guardian games class items.\n  GuardianGamesClassItem = 18,\n\n  PerkEchoesOfGlory = 20,\n  SlotSalvationsEdge,\n  SlotEidosApprentice,\n  COUNT,\n}\n\n// In the case that a perk has multiple possible hashes, we can use this to determine a mapping\nexport const MapAlternativeToArmorPerkOrSlot: EnumDictionary<number, ArmorPerkOrSlot> = {\n  [1760565003]: ArmorPerkOrSlot.PerkEchoesOfGlory,\n};\n\nexport const ArmorPerkOrSlotNames: EnumDictionary<ArmorPerkOrSlot, string> = {\n  [ArmorPerkOrSlot.None]: \"None\",\n  [ArmorPerkOrSlot.SlotCrotasEnd]: \"Crota's End Modslot\",\n  [ArmorPerkOrSlot.SlotRootOfNightmares]: \"Root of Nightmares Modslot\",\n  [ArmorPerkOrSlot.SlotKingsFall]: \"King's Fall Modslot\",\n  [ArmorPerkOrSlot.SlotVowOfTheDisciple]: \"Vow of the Disciple Modslot\",\n  [ArmorPerkOrSlot.SlotVaultOfGlass]: \"Vault of Glass Modslot\",\n  [ArmorPerkOrSlot.SlotDeepStoneCrypt]: \"Deep Stone Crypt Modslot\",\n  [ArmorPerkOrSlot.SlotGardenOfSalvation]: \"Garden of Salvation Modslot\",\n  [ArmorPerkOrSlot.SlotLastWish]: \"Last Wish Modslot\",\n  [ArmorPerkOrSlot.SlotArtifice]: \"Artifice Modslot\",\n  [ArmorPerkOrSlot.PerkIronBanner]: \"Iron Banner Perk\",\n  [ArmorPerkOrSlot.SlotNightmare]: \"Nightmare Hunt Modslot\",\n  [ArmorPerkOrSlot.GuardianGamesClassItem]: \"Guardian Games\",\n  [ArmorPerkOrSlot.PerkEchoesOfGlory]: \"Echoes of Glory Perk\",\n  [ArmorPerkOrSlot.SlotSalvationsEdge]: \"Salvation's Edge Modslot\",\n  [ArmorPerkOrSlot.SlotEidosApprentice]: \"Eido's Apprentice Perk\",\n  [ArmorPerkOrSlot.COUNT]: \"\",\n};\n\nexport const ArmorPerkOrSlotIcons: EnumDictionary<ArmorPerkOrSlot, string> = {\n  [ArmorPerkOrSlot.None]: \"https://www.bungie.net/img/misc/missing_icon_d2.png\",\n  //[ArmorPerkOrSlot.None]: \"https://www.bungie.net/common/destiny2_content/icons/58afd7d17e7b58883b94fd5ba2e66b76.png\",\n  [ArmorPerkOrSlot.SlotCrotasEnd]:\n    \"https://www.bungie.net/common/destiny2_content/icons/7ddce334fe8391848f408227439c1d7a.png\",\n  [ArmorPerkOrSlot.SlotRootOfNightmares]:\n    \"https://www.bungie.net/common/destiny2_content/icons/f2b6ec58e14244e4972705897667c246.png\",\n  [ArmorPerkOrSlot.SlotKingsFall]:\n    \"https://www.bungie.net/common/destiny2_content/icons/0e515c7cf25a2f2350b788e6f5b7f8eb.png\",\n  [ArmorPerkOrSlot.SlotVowOfTheDisciple]:\n    \"https://www.bungie.net/common/destiny2_content/icons/b84b6ea72dd05de7123aa2ae87ba0d6a.png\",\n  [ArmorPerkOrSlot.SlotVaultOfGlass]:\n    \"https://www.bungie.net/common/destiny2_content/icons/7c9a2d95113de19c5acdbed57775abf4.png\",\n  [ArmorPerkOrSlot.SlotDeepStoneCrypt]:\n    \"https://www.bungie.net/common/destiny2_content/icons/d6452d010cfe72a51a9089ec68ab223c.png\",\n  [ArmorPerkOrSlot.SlotGardenOfSalvation]:\n    \"https://www.bungie.net/common/destiny2_content/icons/53d6e3505cd03d4026b3dbbd9ccc19b6.jpg\",\n  [ArmorPerkOrSlot.SlotLastWish]:\n    \"https://www.bungie.net/common/destiny2_content/icons/76f0c1520fa384ceb27bd2469225dd8a.png\",\n  [ArmorPerkOrSlot.SlotArtifice]:\n    \"https://www.bungie.net/common/destiny2_content/icons/46eec78bb7864641bbd7ba1fd4f9f248.png\",\n  [ArmorPerkOrSlot.PerkIronBanner]:\n    \"https://bungie.net/common/destiny2_content/icons/DestinyActivityModeDefinition_fe57052d7cf971f7502daa75a2ca2437.png\",\n  [ArmorPerkOrSlot.SlotNightmare]:\n    \"https://www.bungie.net/common/destiny2_content/icons/53d6e3505cd03d4026b3dbbd9ccc19b6.jpg\",\n  [ArmorPerkOrSlot.GuardianGamesClassItem]:\n    \"https://www.bungie.net/common/destiny2_content/icons/DestinyEventCardDefinition_ce6c2cf855dce694bcc89803b6bc44b7.png\",\n  [ArmorPerkOrSlot.SlotSalvationsEdge]:\n    \"https://www.bungie.net/common/destiny2_content/icons/f4a1f99b49ecf412726d71ea9ee15540.png\",\n  [ArmorPerkOrSlot.PerkEchoesOfGlory]:\n    \"https://www.bungie.net/common/destiny2_content/icons/c67322c917e16f3b8a4cb962e3f11166.png\",\n  [ArmorPerkOrSlot.SlotEidosApprentice]:\n    \"https://www.bungie.net/common/destiny2_content/icons/e083d8a85c2c60825204d14b9e9263b7.png\",\n  [ArmorPerkOrSlot.COUNT]: \"\",\n};\n\n// List of armorInventoryItem.sockets.socketEntries[n].singleInitialItemHash values for each type\n// GuardianGamesClassItem is excluded as these are checked by item hash\nexport const ArmorPerkSocketHashes: EnumDictionary<\n  Exclude<\n    ArmorPerkOrSlot,\n    ArmorPerkOrSlot.GuardianGamesClassItem | ArmorPerkOrSlot.None | ArmorPerkOrSlot.COUNT\n  >,\n  number\n> = {\n  [ArmorPerkOrSlot.SlotCrotasEnd]: 717667840,\n  [ArmorPerkOrSlot.SlotRootOfNightmares]: 4144354978,\n  [ArmorPerkOrSlot.SlotKingsFall]: 1728096240,\n  [ArmorPerkOrSlot.SlotVowOfTheDisciple]: 2447143568,\n  [ArmorPerkOrSlot.SlotVaultOfGlass]: 3738398030,\n  [ArmorPerkOrSlot.SlotDeepStoneCrypt]: 4055462131,\n  [ArmorPerkOrSlot.SlotGardenOfSalvation]: 706611068,\n  [ArmorPerkOrSlot.SlotLastWish]: 1679876242,\n  [ArmorPerkOrSlot.SlotArtifice]: 3727270518,\n  [ArmorPerkOrSlot.PerkIronBanner]: 2472875850,\n  [ArmorPerkOrSlot.SlotNightmare]: 1180997867,\n  [ArmorPerkOrSlot.SlotSalvationsEdge]: 4059283783,\n  [ArmorPerkOrSlot.PerkEchoesOfGlory]: 2352831367,\n  [ArmorPerkOrSlot.SlotEidosApprentice]: 273417606,\n};\n\nexport const ArmorPerkOrSlotDIMText: EnumDictionary<\n  Exclude<ArmorPerkOrSlot, ArmorPerkOrSlot.None | ArmorPerkOrSlot.COUNT>,\n  string\n> = {\n  [ArmorPerkOrSlot.SlotCrotasEnd]: \"modslot:crotasend\",\n  [ArmorPerkOrSlot.SlotRootOfNightmares]: \"modslot:rootofnightmares\",\n  [ArmorPerkOrSlot.SlotKingsFall]: \"modslot:kingsfall\",\n  [ArmorPerkOrSlot.SlotVowOfTheDisciple]: \"modslot:vowofthedisciple\",\n  [ArmorPerkOrSlot.SlotVaultOfGlass]: \"modslot:vaultofglass\",\n  [ArmorPerkOrSlot.SlotDeepStoneCrypt]: \"modslot:deepstonecrypt\",\n  [ArmorPerkOrSlot.SlotGardenOfSalvation]: \"modslot:gardenofsalvation\",\n  [ArmorPerkOrSlot.SlotLastWish]: \"modslot:lastwish\",\n  [ArmorPerkOrSlot.SlotArtifice]: 'perkname:\"artifice armor\"',\n  [ArmorPerkOrSlot.PerkIronBanner]: 'perkname:\"iron lord\\'s pride\"',\n  [ArmorPerkOrSlot.SlotNightmare]: \"modslot:nightmare\",\n  [ArmorPerkOrSlot.GuardianGamesClassItem]: \"(hash:537041732 or hash:366019830 or hash:1013401891)\",\n  [ArmorPerkOrSlot.PerkEchoesOfGlory]: 'exactperk:\"echoes of glory\"',\n  [ArmorPerkOrSlot.SlotSalvationsEdge]: \"(source:salvationsedge is:armor)\",\n  [ArmorPerkOrSlot.SlotEidosApprentice]: 'perkname:\"eido\\'s apprentice\"',\n};\n\nexport const SubclassHashes: EnumDictionary<\n  Exclude<DestinyClass, DestinyClass.Unknown>,\n  EnumDictionary<Subclass, number>\n> = {\n  [DestinyClass.Hunter]: {\n    [ModifierType.Stasis]: 873720784,\n    [ModifierType.Void]: 2453351420,\n    [ModifierType.Solar]: 2240888816,\n    [ModifierType.Arc]: 2328211300,\n    [ModifierType.Strand]: 3785442599,\n    [ModifierType.Prismatic]: 4282591831,\n  },\n  [DestinyClass.Titan]: {\n    [ModifierType.Stasis]: 613647804,\n    [ModifierType.Void]: 2842471112,\n    [ModifierType.Solar]: 2550323932,\n    [ModifierType.Arc]: 2932390016,\n    [ModifierType.Strand]: 242419885,\n    [ModifierType.Prismatic]: 1616346845,\n  },\n  [DestinyClass.Warlock]: {\n    [ModifierType.Stasis]: 3291545503,\n    [ModifierType.Void]: 2849050827,\n    [ModifierType.Solar]: 3941205951,\n    [ModifierType.Arc]: 3168997075,\n    [ModifierType.Strand]: 4204413574,\n    [ModifierType.Prismatic]: 3893112950,\n  },\n};\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport enum ModOptimizationStrategy {\n  None = 0,\n  ReduceUsedModSockets,\n  ReduceUsedModPoints,\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport enum ModOrAbility {\n  WhisperOfDurance = 1000,\n  WhisperOfChains,\n  WhisperOfConduction,\n  // WhisperOfShards,\n\n  // WhisperOfHedrons = 1100,\n  WhisperOfBonds = 1101,\n  WhisperOfHunger,\n  WhisperOfFractures,\n  WhisperOfTorment,\n\n  // VOID\n  EchoOfExpulsion = 1200,\n  EchoOfProvision,\n  EchoOfPersistence,\n  EchoOfLeeching,\n  EchoOfDomineering,\n  EchoOfDilation,\n  EchoOfUndermining,\n\n  EchoOfInstability, //+10 str\n  EchoOfHarvest,\n  EchoOfObscurity, //+10rec\n  EchoOfStarvation,\n  EchoOfVigilance,\n\n  // SOLAR\n  EmberOfBenelovence = 1300,\n  EmberOfBeams,\n  EmberOfEmpyrean,\n  EmberOfCombustion,\n  EmberOfChar,\n  EmberOfTempering,\n  EmberOfEruption,\n  EmberOfWonder,\n  EmberOfSearing,\n  EmberOfTorches,\n  EmberOfMercy,\n  //EchoOfExchange ,\n  //EchoOfRemnants,\n  //EchoOfReprisal,\n\n  SparkOfBrilliance = 1400,\n  SparkOfFeedback,\n  SparkOfDischarge,\n  SparkOfFocus,\n  SparkOfVolts,\n  SparkOfResistance,\n  SparkOfShock,\n\n  // Artifact mods,\n  //MobileRetrofit = 1500, // +5 Mobility\n  //ResilientRetrofit, // +5 Resilience\n\n  // Strand\n  ThreadOfFury = 1600,\n  ThreadOfAscent,\n  ThreadOfFinality,\n  ThreadOfWarding,\n  ThreadOfTransmutation,\n  ThreadOfEvolution,\n  ThreadOfBinding,\n  ThreadOfGeneration,\n  ThreadOfPropagation,\n\n  // These names are mapped to the fragment hash\n  WhisperOfImpetus = 537774543,\n\n  // Prismatic\n  FacetOfAwakening = 1700,\n  FacetOfCourage,\n  FacetOfDawn,\n  FacetOfDefiance,\n  FacetOfDevotion,\n  FacetOfDominance,\n  FacetOfGrace,\n  FacetOfHonor,\n  FacetOfJustice,\n  FacetOfProtection,\n  FacetOfPurpose,\n  FacetOfRuin,\n  FacetOfSacrifice,\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EnumDictionary } from \"../types/EnumDictionary\";\n\nexport enum ModifierType {\n  CombatStyleMod,\n  Stasis,\n  Void,\n  Solar,\n  Arc,\n  Strand,\n  Prismatic,\n}\n\nexport type Subclass = Exclude<ModifierType, ModifierType.CombatStyleMod>;\n\nexport const SubclassNames: EnumDictionary<Subclass, string> = {\n  [ModifierType.Arc]: \"Arc\",\n  [ModifierType.Solar]: \"Solar\",\n  [ModifierType.Void]: \"Void\",\n  [ModifierType.Stasis]: \"Stasis\",\n  [ModifierType.Strand]: \"Strand\",\n  [ModifierType.Prismatic]: \"Prismatic\",\n};\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from \"@angular/core\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatOptionModule } from \"@angular/material/core\";\nimport { MatSliderModule } from \"@angular/material/slider\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatChipsModule } from \"@angular/material/chips\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [],\n  imports: [\n    MatButtonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatSliderModule,\n    MatInputModule,\n    MatSlideToggleModule,\n    MatTableModule,\n    MatCardModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n    MatIconModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatButtonToggleModule,\n    MatListModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTabsModule,\n    MatChipsModule,\n    MatSidenavModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  exports: [\n    ReactiveFormsModule,\n    FormsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatSliderModule,\n    MatInputModule,\n    MatSlideToggleModule,\n    MatTableModule,\n    MatCardModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n    MatIconModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatButtonToggleModule,\n    MatListModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTabsModule,\n    MatChipsModule,\n    MatSidenavModule,\n  ],\n})\nexport class CommonMaterialModule {}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n// Dicts: [artifice, minor, major, total]\n\nexport const precalculatedZeroWasteModCombinations: {\n  [key: number]: [number, number, number, number][];\n} = {\n  1: [\n    [2, 1, 0, 11],\n    [2, 3, 0, 21],\n    [2, 1, 1, 21],\n    [2, 1, 2, 31],\n  ],\n  2: [\n    [4, 0, 0, 12],\n    [4, 2, 0, 22],\n    [4, 0, 1, 22],\n    [4, 4, 0, 32],\n    [4, 0, 2, 32],\n  ],\n  3: [\n    [1, 0, 0, 3],\n    [1, 2, 0, 13],\n    [1, 0, 1, 13],\n    [1, 4, 0, 23],\n    [1, 2, 1, 23],\n    [1, 0, 2, 23],\n    [1, 2, 2, 33],\n  ],\n  4: [\n    [3, 1, 0, 14],\n    [3, 3, 0, 24],\n    [3, 1, 1, 24],\n    [3, 1, 2, 34],\n  ],\n  5: [\n    [0, 1, 0, 5],\n    [5, 0, 0, 15],\n    [0, 3, 0, 15],\n    [0, 1, 1, 15],\n    [5, 2, 0, 25],\n    [5, 0, 1, 25],\n    [0, 3, 1, 25],\n    [0, 1, 2, 25],\n    [5, 4, 0, 35],\n    [5, 0, 2, 35],\n    [0, 3, 2, 35],\n  ],\n  6: [\n    [2, 0, 0, 6],\n    [2, 2, 0, 16],\n    [2, 0, 1, 16],\n    [2, 4, 0, 26],\n    [2, 2, 1, 26],\n    [2, 0, 2, 26],\n    [2, 2, 2, 36],\n    [2, 0, 3, 36],\n    [2, 2, 3, 46],\n  ],\n  7: [\n    [4, 1, 0, 17],\n    [4, 3, 0, 27],\n    [4, 1, 1, 27],\n    [4, 5, 0, 37],\n    [4, 1, 2, 37],\n    [4, 1, 3, 47],\n  ],\n  8: [\n    [1, 1, 0, 8],\n    [1, 3, 0, 18],\n    [1, 1, 1, 18],\n    [1, 5, 0, 28],\n    [1, 3, 1, 28],\n    [1, 1, 2, 28],\n    [1, 3, 2, 38],\n    [1, 1, 3, 38],\n  ],\n  9: [\n    [3, 0, 0, 9],\n    [3, 2, 0, 19],\n    [3, 0, 1, 19],\n    [3, 4, 0, 29],\n    [3, 2, 1, 29],\n    [3, 0, 2, 29],\n    [3, 2, 2, 39],\n    [3, 0, 3, 39],\n    [3, 2, 3, 49],\n  ],\n  10: [\n    [0, 2, 0, 10],\n    [0, 0, 1, 10],\n    [5, 1, 0, 20],\n    [0, 4, 0, 20],\n    [0, 2, 1, 20],\n    [0, 0, 2, 20],\n    [5, 3, 0, 30],\n    [5, 1, 1, 30],\n    [0, 4, 1, 30],\n    [0, 2, 2, 30],\n    [0, 0, 3, 30],\n    [5, 5, 0, 40],\n    [5, 1, 2, 40],\n    [0, 2, 3, 40],\n    [5, 1, 3, 50],\n  ],\n  11: [\n    [2, 1, 0, 11],\n    [2, 3, 0, 21],\n    [2, 1, 1, 21],\n    [2, 5, 0, 31],\n    [2, 3, 1, 31],\n    [2, 1, 2, 31],\n    [2, 3, 2, 41],\n    [2, 1, 3, 41],\n  ],\n  12: [\n    [4, 0, 0, 12],\n    [4, 2, 0, 22],\n    [4, 0, 1, 22],\n    [4, 4, 0, 32],\n    [4, 2, 1, 32],\n    [4, 0, 2, 32],\n    [4, 2, 2, 42],\n    [4, 0, 3, 42],\n    [4, 2, 3, 52],\n  ],\n  13: [\n    [1, 2, 0, 13],\n    [1, 0, 1, 13],\n    [1, 4, 0, 23],\n    [1, 2, 1, 23],\n    [1, 0, 2, 23],\n    [1, 4, 1, 33],\n    [1, 2, 2, 33],\n    [1, 0, 3, 33],\n    [1, 2, 3, 43],\n  ],\n  14: [\n    [3, 1, 0, 14],\n    [3, 3, 0, 24],\n    [3, 1, 1, 24],\n    [3, 5, 0, 34],\n    [3, 3, 1, 34],\n    [3, 1, 2, 34],\n    [3, 3, 2, 44],\n    [3, 1, 3, 44],\n  ],\n  15: [\n    [5, 0, 0, 15],\n    [0, 3, 0, 15],\n    [0, 1, 1, 15],\n    [5, 2, 0, 25],\n    [0, 5, 0, 25],\n    [5, 0, 1, 25],\n    [0, 3, 1, 25],\n    [0, 1, 2, 25],\n    [5, 4, 0, 35],\n    [5, 2, 1, 35],\n    [5, 0, 2, 35],\n    [0, 3, 2, 35],\n    [0, 1, 3, 35],\n    [5, 2, 2, 45],\n    [5, 0, 3, 45],\n    [5, 2, 3, 55],\n  ],\n  16: [\n    [2, 2, 0, 16],\n    [2, 0, 1, 16],\n    [2, 4, 0, 26],\n    [2, 2, 1, 26],\n    [2, 0, 2, 26],\n    [2, 4, 1, 36],\n    [2, 2, 2, 36],\n    [2, 0, 3, 36],\n    [2, 2, 3, 46],\n    [2, 0, 4, 46],\n  ],\n  17: [\n    [4, 1, 0, 17],\n    [4, 3, 0, 27],\n    [4, 1, 1, 27],\n    [4, 5, 0, 37],\n    [4, 3, 1, 37],\n    [4, 1, 2, 37],\n    [4, 3, 2, 47],\n    [4, 1, 3, 47],\n    [4, 1, 4, 57],\n  ],\n  18: [\n    [1, 3, 0, 18],\n    [1, 1, 1, 18],\n    [1, 5, 0, 28],\n    [1, 3, 1, 28],\n    [1, 1, 2, 28],\n    [1, 3, 2, 38],\n    [1, 1, 3, 38],\n    [1, 1, 4, 48],\n  ],\n  19: [\n    [3, 2, 0, 19],\n    [3, 0, 1, 19],\n    [3, 4, 0, 29],\n    [3, 2, 1, 29],\n    [3, 0, 2, 29],\n    [3, 4, 1, 39],\n    [3, 2, 2, 39],\n    [3, 0, 3, 39],\n    [3, 2, 3, 49],\n    [3, 0, 4, 49],\n  ],\n  20: [\n    [5, 1, 0, 20],\n    [0, 4, 0, 20],\n    [0, 2, 1, 20],\n    [0, 0, 2, 20],\n    [5, 3, 0, 30],\n    [5, 1, 1, 30],\n    [0, 4, 1, 30],\n    [0, 2, 2, 30],\n    [0, 0, 3, 30],\n    [5, 5, 0, 40],\n    [5, 3, 1, 40],\n    [5, 1, 2, 40],\n    [0, 2, 3, 40],\n    [0, 0, 4, 40],\n    [5, 3, 2, 50],\n    [5, 1, 3, 50],\n    [5, 1, 4, 60],\n  ],\n  21: [\n    [2, 3, 0, 21],\n    [2, 1, 1, 21],\n    [2, 5, 0, 31],\n    [2, 3, 1, 31],\n    [2, 1, 2, 31],\n    [2, 3, 2, 41],\n    [2, 1, 3, 41],\n    [2, 1, 4, 51],\n  ],\n  22: [\n    [4, 2, 0, 22],\n    [4, 0, 1, 22],\n    [4, 4, 0, 32],\n    [4, 2, 1, 32],\n    [4, 0, 2, 32],\n    [4, 4, 1, 42],\n    [4, 2, 2, 42],\n    [4, 0, 3, 42],\n    [4, 2, 3, 52],\n    [4, 0, 4, 52],\n  ],\n  23: [\n    [1, 4, 0, 23],\n    [1, 2, 1, 23],\n    [1, 0, 2, 23],\n    [1, 4, 1, 33],\n    [1, 2, 2, 33],\n    [1, 0, 3, 33],\n    [1, 2, 3, 43],\n    [1, 0, 4, 43],\n  ],\n  24: [\n    [3, 3, 0, 24],\n    [3, 1, 1, 24],\n    [3, 5, 0, 34],\n    [3, 3, 1, 34],\n    [3, 1, 2, 34],\n    [3, 3, 2, 44],\n    [3, 1, 3, 44],\n    [3, 1, 4, 54],\n  ],\n  25: [\n    [5, 2, 0, 25],\n    [0, 5, 0, 25],\n    [5, 0, 1, 25],\n    [0, 3, 1, 25],\n    [0, 1, 2, 25],\n    [5, 4, 0, 35],\n    [5, 2, 1, 35],\n    [5, 0, 2, 35],\n    [0, 3, 2, 35],\n    [0, 1, 3, 35],\n    [5, 4, 1, 45],\n    [5, 2, 2, 45],\n    [5, 0, 3, 45],\n    [0, 1, 4, 45],\n    [5, 2, 3, 55],\n    [5, 0, 4, 55],\n  ],\n  26: [\n    [2, 4, 0, 26],\n    [2, 2, 1, 26],\n    [2, 0, 2, 26],\n    [2, 4, 1, 36],\n    [2, 2, 2, 36],\n    [2, 0, 3, 36],\n    [2, 2, 3, 46],\n    [2, 0, 4, 46],\n    [2, 0, 5, 56],\n  ],\n  27: [\n    [4, 3, 0, 27],\n    [4, 1, 1, 27],\n    [4, 5, 0, 37],\n    [4, 3, 1, 37],\n    [4, 1, 2, 37],\n    [4, 3, 2, 47],\n    [4, 1, 3, 47],\n    [4, 1, 4, 57],\n  ],\n  28: [\n    [1, 5, 0, 28],\n    [1, 3, 1, 28],\n    [1, 1, 2, 28],\n    [1, 3, 2, 38],\n    [1, 1, 3, 38],\n    [1, 1, 4, 48],\n  ],\n  29: [\n    [3, 4, 0, 29],\n    [3, 2, 1, 29],\n    [3, 0, 2, 29],\n    [3, 4, 1, 39],\n    [3, 2, 2, 39],\n    [3, 0, 3, 39],\n    [3, 2, 3, 49],\n    [3, 0, 4, 49],\n    [3, 0, 5, 59],\n  ],\n  30: [\n    [5, 3, 0, 30],\n    [5, 1, 1, 30],\n    [0, 4, 1, 30],\n    [0, 2, 2, 30],\n    [0, 0, 3, 30],\n    [5, 5, 0, 40],\n    [5, 3, 1, 40],\n    [5, 1, 2, 40],\n    [0, 2, 3, 40],\n    [0, 0, 4, 40],\n    [5, 3, 2, 50],\n    [5, 1, 3, 50],\n    [0, 0, 5, 50],\n    [5, 1, 4, 60],\n  ],\n  31: [\n    [2, 5, 0, 31],\n    [2, 3, 1, 31],\n    [2, 1, 2, 31],\n    [2, 3, 2, 41],\n    [2, 1, 3, 41],\n    [2, 1, 4, 51],\n  ],\n  32: [\n    [4, 4, 0, 32],\n    [4, 2, 1, 32],\n    [4, 0, 2, 32],\n    [4, 4, 1, 42],\n    [4, 2, 2, 42],\n    [4, 0, 3, 42],\n    [4, 2, 3, 52],\n    [4, 0, 4, 52],\n    [4, 0, 5, 62],\n  ],\n  33: [\n    [1, 4, 1, 33],\n    [1, 2, 2, 33],\n    [1, 0, 3, 33],\n    [1, 2, 3, 43],\n    [1, 0, 4, 43],\n    [1, 0, 5, 53],\n  ],\n  34: [\n    [3, 5, 0, 34],\n    [3, 3, 1, 34],\n    [3, 1, 2, 34],\n    [3, 3, 2, 44],\n    [3, 1, 3, 44],\n    [3, 1, 4, 54],\n  ],\n  35: [\n    [5, 4, 0, 35],\n    [5, 2, 1, 35],\n    [5, 0, 2, 35],\n    [0, 3, 2, 35],\n    [0, 1, 3, 35],\n    [5, 4, 1, 45],\n    [5, 2, 2, 45],\n    [5, 0, 3, 45],\n    [0, 1, 4, 45],\n    [5, 2, 3, 55],\n    [5, 0, 4, 55],\n    [5, 0, 5, 65],\n  ],\n  36: [\n    [2, 4, 1, 36],\n    [2, 2, 2, 36],\n    [2, 0, 3, 36],\n    [2, 2, 3, 46],\n    [2, 0, 4, 46],\n    [2, 0, 5, 56],\n  ],\n  37: [\n    [4, 5, 0, 37],\n    [4, 3, 1, 37],\n    [4, 1, 2, 37],\n    [4, 3, 2, 47],\n    [4, 1, 3, 47],\n    [4, 1, 4, 57],\n  ],\n  38: [\n    [1, 3, 2, 38],\n    [1, 1, 3, 38],\n    [1, 1, 4, 48],\n  ],\n  39: [\n    [3, 4, 1, 39],\n    [3, 2, 2, 39],\n    [3, 0, 3, 39],\n    [3, 2, 3, 49],\n    [3, 0, 4, 49],\n    [3, 0, 5, 59],\n  ],\n  40: [\n    [5, 5, 0, 40],\n    [5, 3, 1, 40],\n    [5, 1, 2, 40],\n    [0, 2, 3, 40],\n    [0, 0, 4, 40],\n    [5, 3, 2, 50],\n    [5, 1, 3, 50],\n    [0, 0, 5, 50],\n    [5, 1, 4, 60],\n  ],\n  41: [\n    [2, 3, 2, 41],\n    [2, 1, 3, 41],\n    [2, 1, 4, 51],\n  ],\n  42: [\n    [4, 4, 1, 42],\n    [4, 2, 2, 42],\n    [4, 0, 3, 42],\n    [4, 2, 3, 52],\n    [4, 0, 4, 52],\n    [4, 0, 5, 62],\n  ],\n  43: [\n    [1, 2, 3, 43],\n    [1, 0, 4, 43],\n    [1, 0, 5, 53],\n  ],\n  44: [\n    [3, 3, 2, 44],\n    [3, 1, 3, 44],\n    [3, 1, 4, 54],\n  ],\n  45: [\n    [5, 4, 1, 45],\n    [5, 2, 2, 45],\n    [5, 0, 3, 45],\n    [0, 1, 4, 45],\n    [5, 2, 3, 55],\n    [5, 0, 4, 55],\n    [5, 0, 5, 65],\n  ],\n  46: [\n    [2, 2, 3, 46],\n    [2, 0, 4, 46],\n    [2, 0, 5, 56],\n  ],\n  47: [\n    [4, 3, 2, 47],\n    [4, 1, 3, 47],\n    [4, 1, 4, 57],\n  ],\n  48: [[1, 1, 4, 48]],\n  49: [\n    [3, 2, 3, 49],\n    [3, 0, 4, 49],\n    [3, 0, 5, 59],\n  ],\n  50: [\n    [5, 3, 2, 50],\n    [5, 1, 3, 50],\n    [0, 0, 5, 50],\n    [5, 1, 4, 60],\n  ],\n  51: [[2, 1, 4, 51]],\n  52: [\n    [4, 2, 3, 52],\n    [4, 0, 4, 52],\n    [4, 0, 5, 62],\n  ],\n  53: [[1, 0, 5, 53]],\n  54: [[3, 1, 4, 54]],\n  55: [\n    [5, 2, 3, 55],\n    [5, 0, 4, 55],\n    [5, 0, 5, 65],\n  ],\n  56: [[2, 0, 5, 56]],\n  57: [[4, 1, 4, 57]],\n  58: [],\n  59: [[3, 0, 5, 59]],\n  60: [[5, 1, 4, 60]],\n  61: [],\n  62: [[4, 0, 5, 62]],\n  63: [],\n  64: [],\n  65: [[5, 0, 5, 65]],\n};\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n// Dicts: [artifice, minor, major, total]\n\nexport const precalculatedModCombinations: { [key: number]: [number, number, number, number][] } = {\n  1: [\n    [1, 0, 0, 3],\n    [0, 1, 0, 5],\n    [0, 0, 1, 10],\n  ],\n  2: [\n    [1, 0, 0, 3],\n    [0, 1, 0, 5],\n    [0, 0, 1, 10],\n  ],\n  3: [\n    [1, 0, 0, 3],\n    [0, 1, 0, 5],\n    [0, 0, 1, 10],\n  ],\n  4: [\n    [0, 1, 0, 5],\n    [2, 0, 0, 6],\n    [0, 0, 1, 10],\n  ],\n  5: [\n    [0, 1, 0, 5],\n    [2, 0, 0, 6],\n    [0, 0, 1, 10],\n  ],\n  6: [\n    [2, 0, 0, 6],\n    [1, 1, 0, 8],\n    [0, 2, 0, 10],\n    [0, 0, 1, 10],\n  ],\n  7: [\n    [1, 1, 0, 8],\n    [3, 0, 0, 9],\n    [0, 2, 0, 10],\n    [0, 0, 1, 10],\n  ],\n  8: [\n    [1, 1, 0, 8],\n    [3, 0, 0, 9],\n    [0, 2, 0, 10],\n    [0, 0, 1, 10],\n  ],\n  9: [\n    [3, 0, 0, 9],\n    [0, 2, 0, 10],\n    [0, 0, 1, 10],\n    [2, 1, 0, 11],\n  ],\n  10: [\n    [0, 2, 0, 10],\n    [0, 0, 1, 10],\n    [2, 1, 0, 11],\n    [4, 0, 0, 12],\n  ],\n  11: [\n    [2, 1, 0, 11],\n    [4, 0, 0, 12],\n    [1, 2, 0, 13],\n    [1, 0, 1, 13],\n    [0, 3, 0, 15],\n    [0, 1, 1, 15],\n    [0, 0, 2, 20],\n  ],\n  12: [\n    [4, 0, 0, 12],\n    [1, 2, 0, 13],\n    [1, 0, 1, 13],\n    [3, 1, 0, 14],\n    [0, 3, 0, 15],\n    [0, 1, 1, 15],\n    [0, 0, 2, 20],\n  ],\n  13: [\n    [1, 2, 0, 13],\n    [1, 0, 1, 13],\n    [3, 1, 0, 14],\n    [5, 0, 0, 15],\n    [0, 3, 0, 15],\n    [0, 1, 1, 15],\n    [0, 0, 2, 20],\n  ],\n  14: [\n    [3, 1, 0, 14],\n    [5, 0, 0, 15],\n    [0, 3, 0, 15],\n    [0, 1, 1, 15],\n    [2, 2, 0, 16],\n    [2, 0, 1, 16],\n    [0, 0, 2, 20],\n  ],\n  15: [\n    [5, 0, 0, 15],\n    [0, 3, 0, 15],\n    [0, 1, 1, 15],\n    [2, 2, 0, 16],\n    [2, 0, 1, 16],\n    [4, 1, 0, 17],\n    [0, 0, 2, 20],\n  ],\n  16: [\n    [2, 2, 0, 16],\n    [2, 0, 1, 16],\n    [4, 1, 0, 17],\n    [1, 3, 0, 18],\n    [1, 1, 1, 18],\n    [0, 4, 0, 20],\n    [0, 2, 1, 20],\n    [0, 0, 2, 20],\n  ],\n  17: [\n    [4, 1, 0, 17],\n    [1, 3, 0, 18],\n    [1, 1, 1, 18],\n    [3, 2, 0, 19],\n    [3, 0, 1, 19],\n    [0, 4, 0, 20],\n    [0, 2, 1, 20],\n    [0, 0, 2, 20],\n  ],\n  18: [\n    [1, 1, 1, 18],\n    [1, 3, 0, 18],\n    [3, 2, 0, 19],\n    [3, 0, 1, 19],\n    [5, 1, 0, 20],\n    [0, 4, 0, 20],\n    [0, 2, 1, 20],\n    [0, 0, 2, 20],\n  ],\n  19: [\n    [3, 2, 0, 19],\n    [3, 0, 1, 19],\n    [5, 1, 0, 20],\n    [0, 4, 0, 20],\n    [0, 2, 1, 20],\n    [0, 0, 2, 20],\n    [2, 3, 0, 21],\n    [2, 1, 1, 21],\n  ],\n  20: [\n    [5, 1, 0, 20],\n    [0, 4, 0, 20],\n    [0, 2, 1, 20],\n    [0, 0, 2, 20],\n    [2, 3, 0, 21],\n    [2, 1, 1, 21],\n    [4, 2, 0, 22],\n    [4, 0, 1, 22],\n  ],\n  21: [\n    [2, 3, 0, 21],\n    [2, 1, 1, 21],\n    [4, 2, 0, 22],\n    [4, 0, 1, 22],\n    [1, 4, 0, 23],\n    [1, 2, 1, 23],\n    [1, 0, 2, 23],\n    [0, 5, 0, 25],\n    [0, 3, 1, 25],\n    [0, 1, 2, 25],\n    [0, 0, 3, 30],\n  ],\n  22: [\n    [4, 2, 0, 22],\n    [4, 0, 1, 22],\n    [1, 4, 0, 23],\n    [1, 2, 1, 23],\n    [1, 0, 2, 23],\n    [3, 3, 0, 24],\n    [3, 1, 1, 24],\n    [0, 5, 0, 25],\n    [0, 3, 1, 25],\n    [0, 1, 2, 25],\n    [0, 0, 3, 30],\n  ],\n  23: [\n    [1, 4, 0, 23],\n    [1, 2, 1, 23],\n    [1, 0, 2, 23],\n    [3, 3, 0, 24],\n    [3, 1, 1, 24],\n    [5, 2, 0, 25],\n    [0, 5, 0, 25],\n    [5, 0, 1, 25],\n    [0, 3, 1, 25],\n    [0, 1, 2, 25],\n    [0, 0, 3, 30],\n  ],\n  24: [\n    [3, 3, 0, 24],\n    [3, 1, 1, 24],\n    [5, 2, 0, 25],\n    [0, 5, 0, 25],\n    [5, 0, 1, 25],\n    [0, 3, 1, 25],\n    [0, 1, 2, 25],\n    [2, 4, 0, 26],\n    [2, 2, 1, 26],\n    [2, 0, 2, 26],\n    [0, 0, 3, 30],\n  ],\n  25: [\n    [5, 2, 0, 25],\n    [0, 5, 0, 25],\n    [5, 0, 1, 25],\n    [0, 3, 1, 25],\n    [0, 1, 2, 25],\n    [2, 4, 0, 26],\n    [2, 2, 1, 26],\n    [2, 0, 2, 26],\n    [4, 3, 0, 27],\n    [4, 1, 1, 27],\n    [0, 0, 3, 30],\n  ],\n  26: [\n    [2, 4, 0, 26],\n    [2, 2, 1, 26],\n    [2, 0, 2, 26],\n    [4, 3, 0, 27],\n    [4, 1, 1, 27],\n    [1, 5, 0, 28],\n    [1, 3, 1, 28],\n    [1, 1, 2, 28],\n    [0, 4, 1, 30],\n    [0, 2, 2, 30],\n    [0, 0, 3, 30],\n  ],\n  27: [\n    [4, 3, 0, 27],\n    [4, 1, 1, 27],\n    [1, 5, 0, 28],\n    [1, 3, 1, 28],\n    [1, 1, 2, 28],\n    [3, 4, 0, 29],\n    [3, 2, 1, 29],\n    [3, 0, 2, 29],\n    [0, 4, 1, 30],\n    [0, 2, 2, 30],\n    [0, 0, 3, 30],\n  ],\n  28: [\n    [1, 5, 0, 28],\n    [1, 3, 1, 28],\n    [1, 1, 2, 28],\n    [3, 4, 0, 29],\n    [3, 2, 1, 29],\n    [3, 0, 2, 29],\n    [5, 3, 0, 30],\n    [5, 1, 1, 30],\n    [0, 4, 1, 30],\n    [0, 2, 2, 30],\n    [0, 0, 3, 30],\n  ],\n  29: [\n    [3, 4, 0, 29],\n    [3, 2, 1, 29],\n    [3, 0, 2, 29],\n    [5, 3, 0, 30],\n    [5, 1, 1, 30],\n    [0, 4, 1, 30],\n    [0, 2, 2, 30],\n    [0, 0, 3, 30],\n    [2, 5, 0, 31],\n    [2, 3, 1, 31],\n    [2, 1, 2, 31],\n  ],\n  30: [\n    [5, 3, 0, 30],\n    [5, 1, 1, 30],\n    [0, 4, 1, 30],\n    [0, 2, 2, 30],\n    [0, 0, 3, 30],\n    [2, 5, 0, 31],\n    [2, 3, 1, 31],\n    [2, 1, 2, 31],\n    [4, 4, 0, 32],\n    [4, 2, 1, 32],\n    [4, 0, 2, 32],\n  ],\n  31: [\n    [2, 5, 0, 31],\n    [2, 3, 1, 31],\n    [2, 1, 2, 31],\n    [4, 4, 0, 32],\n    [4, 2, 1, 32],\n    [4, 0, 2, 32],\n    [1, 4, 1, 33],\n    [1, 2, 2, 33],\n    [1, 0, 3, 33],\n    [0, 3, 2, 35],\n    [0, 1, 3, 35],\n    [0, 0, 4, 40],\n  ],\n  32: [\n    [4, 4, 0, 32],\n    [4, 2, 1, 32],\n    [4, 0, 2, 32],\n    [1, 4, 1, 33],\n    [1, 2, 2, 33],\n    [1, 0, 3, 33],\n    [3, 5, 0, 34],\n    [3, 3, 1, 34],\n    [3, 1, 2, 34],\n    [0, 3, 2, 35],\n    [0, 1, 3, 35],\n    [0, 0, 4, 40],\n  ],\n  33: [\n    [1, 4, 1, 33],\n    [1, 2, 2, 33],\n    [1, 0, 3, 33],\n    [3, 5, 0, 34],\n    [3, 3, 1, 34],\n    [3, 1, 2, 34],\n    [5, 4, 0, 35],\n    [5, 2, 1, 35],\n    [5, 0, 2, 35],\n    [0, 3, 2, 35],\n    [0, 1, 3, 35],\n    [0, 0, 4, 40],\n  ],\n  34: [\n    [3, 5, 0, 34],\n    [3, 3, 1, 34],\n    [3, 1, 2, 34],\n    [5, 4, 0, 35],\n    [5, 2, 1, 35],\n    [5, 0, 2, 35],\n    [0, 3, 2, 35],\n    [0, 1, 3, 35],\n    [2, 4, 1, 36],\n    [2, 2, 2, 36],\n    [2, 0, 3, 36],\n    [0, 0, 4, 40],\n  ],\n  35: [\n    [5, 4, 0, 35],\n    [5, 2, 1, 35],\n    [5, 0, 2, 35],\n    [0, 3, 2, 35],\n    [0, 1, 3, 35],\n    [2, 4, 1, 36],\n    [2, 2, 2, 36],\n    [2, 0, 3, 36],\n    [4, 5, 0, 37],\n    [4, 3, 1, 37],\n    [4, 1, 2, 37],\n    [0, 0, 4, 40],\n  ],\n  36: [\n    [2, 4, 1, 36],\n    [2, 2, 2, 36],\n    [2, 0, 3, 36],\n    [4, 5, 0, 37],\n    [4, 3, 1, 37],\n    [4, 1, 2, 37],\n    [1, 3, 2, 38],\n    [1, 1, 3, 38],\n    [0, 2, 3, 40],\n    [0, 0, 4, 40],\n  ],\n  37: [\n    [4, 5, 0, 37],\n    [4, 3, 1, 37],\n    [4, 1, 2, 37],\n    [1, 3, 2, 38],\n    [1, 1, 3, 38],\n    [3, 4, 1, 39],\n    [3, 2, 2, 39],\n    [3, 0, 3, 39],\n    [0, 2, 3, 40],\n    [0, 0, 4, 40],\n  ],\n  38: [\n    [1, 3, 2, 38],\n    [1, 1, 3, 38],\n    [3, 4, 1, 39],\n    [3, 2, 2, 39],\n    [3, 0, 3, 39],\n    [5, 5, 0, 40],\n    [5, 3, 1, 40],\n    [5, 1, 2, 40],\n    [0, 2, 3, 40],\n    [0, 0, 4, 40],\n  ],\n  39: [\n    [3, 4, 1, 39],\n    [3, 2, 2, 39],\n    [3, 0, 3, 39],\n    [5, 5, 0, 40],\n    [5, 3, 1, 40],\n    [5, 1, 2, 40],\n    [0, 2, 3, 40],\n    [0, 0, 4, 40],\n    [2, 3, 2, 41],\n    [2, 1, 3, 41],\n  ],\n  40: [\n    [5, 5, 0, 40],\n    [5, 3, 1, 40],\n    [5, 1, 2, 40],\n    [0, 2, 3, 40],\n    [0, 0, 4, 40],\n    [2, 3, 2, 41],\n    [2, 1, 3, 41],\n    [4, 4, 1, 42],\n    [4, 2, 2, 42],\n    [4, 0, 3, 42],\n  ],\n  41: [\n    [2, 3, 2, 41],\n    [2, 1, 3, 41],\n    [4, 4, 1, 42],\n    [4, 2, 2, 42],\n    [4, 0, 3, 42],\n    [1, 2, 3, 43],\n    [1, 0, 4, 43],\n    [0, 1, 4, 45],\n    [0, 0, 5, 50],\n  ],\n  42: [\n    [4, 4, 1, 42],\n    [4, 2, 2, 42],\n    [4, 0, 3, 42],\n    [1, 2, 3, 43],\n    [1, 0, 4, 43],\n    [3, 3, 2, 44],\n    [3, 1, 3, 44],\n    [0, 1, 4, 45],\n    [0, 0, 5, 50],\n  ],\n  43: [\n    [1, 2, 3, 43],\n    [1, 0, 4, 43],\n    [3, 3, 2, 44],\n    [3, 1, 3, 44],\n    [5, 4, 1, 45],\n    [5, 2, 2, 45],\n    [5, 0, 3, 45],\n    [0, 1, 4, 45],\n    [0, 0, 5, 50],\n  ],\n  44: [\n    [3, 3, 2, 44],\n    [3, 1, 3, 44],\n    [5, 4, 1, 45],\n    [5, 2, 2, 45],\n    [5, 0, 3, 45],\n    [0, 1, 4, 45],\n    [2, 2, 3, 46],\n    [2, 0, 4, 46],\n    [0, 0, 5, 50],\n  ],\n  45: [\n    [5, 4, 1, 45],\n    [5, 2, 2, 45],\n    [5, 0, 3, 45],\n    [0, 1, 4, 45],\n    [2, 2, 3, 46],\n    [2, 0, 4, 46],\n    [4, 3, 2, 47],\n    [4, 1, 3, 47],\n    [0, 0, 5, 50],\n  ],\n  46: [\n    [2, 2, 3, 46],\n    [2, 0, 4, 46],\n    [4, 3, 2, 47],\n    [4, 1, 3, 47],\n    [1, 1, 4, 48],\n    [0, 0, 5, 50],\n  ],\n  47: [\n    [4, 3, 2, 47],\n    [4, 1, 3, 47],\n    [1, 1, 4, 48],\n    [3, 2, 3, 49],\n    [3, 0, 4, 49],\n    [0, 0, 5, 50],\n  ],\n  48: [\n    [1, 1, 4, 48],\n    [3, 2, 3, 49],\n    [3, 0, 4, 49],\n    [5, 3, 2, 50],\n    [5, 1, 3, 50],\n    [0, 0, 5, 50],\n  ],\n  49: [\n    [3, 2, 3, 49],\n    [3, 0, 4, 49],\n    [5, 3, 2, 50],\n    [5, 1, 3, 50],\n    [0, 0, 5, 50],\n    [2, 1, 4, 51],\n  ],\n  50: [\n    [5, 3, 2, 50],\n    [5, 1, 3, 50],\n    [0, 0, 5, 50],\n    [2, 1, 4, 51],\n    [4, 2, 3, 52],\n    [4, 0, 4, 52],\n  ],\n  51: [\n    [2, 1, 4, 51],\n    [4, 2, 3, 52],\n    [4, 0, 4, 52],\n    [1, 0, 5, 53],\n  ],\n  52: [\n    [4, 2, 3, 52],\n    [4, 0, 4, 52],\n    [1, 0, 5, 53],\n    [3, 1, 4, 54],\n  ],\n  53: [\n    [1, 0, 5, 53],\n    [3, 1, 4, 54],\n    [5, 2, 3, 55],\n    [5, 0, 4, 55],\n  ],\n  54: [\n    [3, 1, 4, 54],\n    [5, 2, 3, 55],\n    [5, 0, 4, 55],\n    [2, 0, 5, 56],\n  ],\n  55: [\n    [5, 2, 3, 55],\n    [5, 0, 4, 55],\n    [2, 0, 5, 56],\n    [4, 1, 4, 57],\n  ],\n  56: [\n    [2, 0, 5, 56],\n    [4, 1, 4, 57],\n  ],\n  57: [\n    [4, 1, 4, 57],\n    [3, 0, 5, 59],\n  ],\n  58: [\n    [3, 0, 5, 59],\n    [5, 1, 4, 60],\n  ],\n  59: [\n    [3, 0, 5, 59],\n    [5, 1, 4, 60],\n  ],\n  60: [\n    [5, 1, 4, 60],\n    [4, 0, 5, 62],\n  ],\n  61: [[4, 0, 5, 62]],\n  62: [[4, 0, 5, 62]],\n  63: [[5, 0, 5, 65]],\n  64: [[5, 0, 5, 65]],\n  65: [[5, 0, 5, 65]],\n};\n","import { ArmorPerkOrSlot, StatModifier } from \"../enum/armor-stat\";\nimport { IPermutatorArmor } from \"./IPermutatorArmor\";\n\nexport interface IPermutatorArmorSet {\n  armor: number[];\n  usedArtifice: StatModifier[];\n  usedMods: StatModifier[];\n  classItemPerk: ArmorPerkOrSlot;\n  statsWithMods: number[];\n  statsWithoutMods: number[];\n}\n\nexport function createArmorSet(\n  helmet: IPermutatorArmor,\n  gauntlet: IPermutatorArmor,\n  chest: IPermutatorArmor,\n  leg: IPermutatorArmor,\n  usedArtifice: StatModifier[],\n  usedMods: StatModifier[],\n  statsWithMods: number[],\n  statsWithoutMods: number[]\n): IPermutatorArmorSet {\n  return {\n    armor: [helmet.id, gauntlet.id, chest.id, leg.id],\n    usedArtifice,\n    usedMods,\n    classItemPerk: ArmorPerkOrSlot.None,\n    statsWithMods,\n    statsWithoutMods,\n  };\n}\n\nexport function isIPermutatorArmorSet(obj: any): obj is IPermutatorArmorSet {\n  return (\n    Object.prototype.hasOwnProperty.call(obj, \"armor\") &&\n    Object.prototype.hasOwnProperty.call(obj, \"usedArtifice\") &&\n    Object.prototype.hasOwnProperty.call(obj, \"usedMods\") &&\n    Object.prototype.hasOwnProperty.call(obj, \"statsWithMods\") &&\n    Object.prototype.hasOwnProperty.call(obj, \"classItemPerk\")\n  );\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { BuildConfiguration } from \"../data/buildConfiguration\";\nimport { IDestinyArmor } from \"../data/types/IInventoryArmor\";\nimport { ArmorSlot } from \"../data/enum/armor-slot\";\nimport { FORCE_USE_ANY_EXOTIC } from \"../data/constants\";\nimport { ModInformation } from \"../data/ModInformation\";\nimport {\n  ArmorPerkOrSlot,\n  ArmorStat,\n  SpecialArmorStat,\n  STAT_MOD_VALUES,\n  StatModifier,\n} from \"../data/enum/armor-stat\";\n\nimport { environment } from \"../../environments/environment\";\n\nimport { precalculatedZeroWasteModCombinations } from \"../data/generated/precalculatedZeroWasteModCombinations\";\nimport { precalculatedModCombinations } from \"../data/generated/precalculatedModCombinations\";\nimport { ModOptimizationStrategy } from \"../data/enum/mod-optimization-strategy\";\nimport { IPermutatorArmor } from \"../data/types/IPermutatorArmor\";\nimport {\n  IPermutatorArmorSet,\n  createArmorSet,\n  isIPermutatorArmorSet,\n} from \"../data/types/IPermutatorArmorSet\";\n\nfunction checkSlots(\n  config: BuildConfiguration,\n  constantModslotRequirement: number[],\n  availableClassItemTypes: Set<ArmorPerkOrSlot>,\n  helmet: IPermutatorArmor,\n  gauntlet: IPermutatorArmor,\n  chest: IPermutatorArmor,\n  leg: IPermutatorArmor\n) {\n  var exoticId = config.selectedExotics[0] || 0;\n  let requirements = constantModslotRequirement.slice();\n  if (\n    !(helmet.isExotic && config.assumeEveryExoticIsArtifice) &&\n    config.armorPerks[ArmorSlot.ArmorSlotHelmet].fixed &&\n    config.armorPerks[ArmorSlot.ArmorSlotHelmet].value != ArmorPerkOrSlot.None &&\n    config.armorPerks[ArmorSlot.ArmorSlotHelmet].value != helmet.perk\n  )\n    return { valid: false };\n  if (\n    !(gauntlet.isExotic && config.assumeEveryExoticIsArtifice) &&\n    config.armorPerks[ArmorSlot.ArmorSlotGauntlet].fixed &&\n    config.armorPerks[ArmorSlot.ArmorSlotGauntlet].value != ArmorPerkOrSlot.None &&\n    config.armorPerks[ArmorSlot.ArmorSlotGauntlet].value != gauntlet.perk\n  )\n    return { valid: false };\n  if (\n    !(chest.isExotic && config.assumeEveryExoticIsArtifice) &&\n    config.armorPerks[ArmorSlot.ArmorSlotChest].fixed &&\n    config.armorPerks[ArmorSlot.ArmorSlotChest].value != ArmorPerkOrSlot.None &&\n    config.armorPerks[ArmorSlot.ArmorSlotChest].value != chest.perk\n  )\n    return { valid: false };\n  if (\n    !(leg.isExotic && config.assumeEveryExoticIsArtifice) &&\n    config.armorPerks[ArmorSlot.ArmorSlotLegs].fixed &&\n    config.armorPerks[ArmorSlot.ArmorSlotLegs].value != ArmorPerkOrSlot.None &&\n    config.armorPerks[ArmorSlot.ArmorSlotLegs].value != leg.perk\n  )\n    return { valid: false };\n  // also return if we can not find the correct class item.\n  if (\n    config.armorPerks[ArmorSlot.ArmorSlotClass].fixed &&\n    config.armorPerks[ArmorSlot.ArmorSlotClass].value != ArmorPerkOrSlot.None &&\n    !availableClassItemTypes.has(config.armorPerks[ArmorSlot.ArmorSlotClass].value)\n  )\n    return { valid: false };\n\n  requirements[helmet.perk]--;\n  requirements[gauntlet.perk]--;\n  requirements[chest.perk]--;\n  requirements[leg.perk]--;\n\n  // ignore exotic selection\n  if (exoticId > 0) {\n    if (helmet.hash == exoticId) requirements[config.armorPerks[helmet.slot].value]--;\n    else if (gauntlet.hash == exoticId) requirements[config.armorPerks[gauntlet.slot].value]--;\n    else if (chest.hash == exoticId) requirements[config.armorPerks[chest.slot].value]--;\n    else if (leg.hash == exoticId) requirements[config.armorPerks[leg.slot].value]--;\n  }\n\n  let bad = 0;\n  for (let n = 1; n < ArmorPerkOrSlot.COUNT; n++) bad += Math.max(0, requirements[n]);\n\n  var requiredClassItemType = ArmorPerkOrSlot.None;\n  if (bad == 1) {\n    // search if we have a class item to fulfill the stats\n    var fixed = false;\n    for (let k = 1; k < ArmorPerkOrSlot.COUNT && !fixed; k++) {\n      if (requirements[k] <= 0) continue;\n      if (availableClassItemTypes.has(k)) {\n        fixed = true;\n        requiredClassItemType = k;\n      }\n    }\n    if (fixed) bad--;\n  } else if (\n    requiredClassItemType == ArmorPerkOrSlot.None &&\n    config.armorPerks[ArmorSlot.ArmorSlotClass].fixed\n  ) {\n    requiredClassItemType = config.armorPerks[ArmorSlot.ArmorSlotClass].value;\n  }\n\n  // if (config.armorPerks[ArmorSlot.ArmorSlotClass].value != ArmorPerkOrSlot.None && !config.armorPerks[ArmorSlot.ArmorSlotClass].fixed) bad--;\n\n  return { valid: bad <= 0, requiredClassItemType };\n}\n\nfunction prepareConstantStatBonus(config: BuildConfiguration) {\n  const constantBonus = [0, 0, 0, 0, 0, 0];\n  // Apply configurated mods to the stat value\n  // Apply mods\n  for (const mod of config.enabledMods) {\n    for (const bonus of ModInformation[mod].bonus) {\n      var statId =\n        bonus.stat == SpecialArmorStat.ClassAbilityRegenerationStat\n          ? [1, 0, 2][config.characterClass]\n          : bonus.stat;\n      constantBonus[statId] += bonus.value;\n    }\n  }\n  return constantBonus;\n}\n\nfunction prepareConstantModslotRequirement(config: BuildConfiguration) {\n  let constantPerkRequirement = [];\n  for (let n = 0; n < ArmorPerkOrSlot.COUNT; n++) constantPerkRequirement.push(0);\n\n  constantPerkRequirement[config.armorPerks[ArmorSlot.ArmorSlotHelmet].value]++;\n  constantPerkRequirement[config.armorPerks[ArmorSlot.ArmorSlotChest].value]++;\n  constantPerkRequirement[config.armorPerks[ArmorSlot.ArmorSlotGauntlet].value]++;\n  constantPerkRequirement[config.armorPerks[ArmorSlot.ArmorSlotLegs].value]++;\n  constantPerkRequirement[config.armorPerks[ArmorSlot.ArmorSlotClass].value]++;\n  return constantPerkRequirement;\n}\n\nfunction prepareConstantAvailableModslots(config: BuildConfiguration) {\n  var availableModCost: number[] = [];\n  availableModCost.push(config.maximumModSlots[ArmorSlot.ArmorSlotHelmet].value);\n  availableModCost.push(config.maximumModSlots[ArmorSlot.ArmorSlotGauntlet].value);\n  availableModCost.push(config.maximumModSlots[ArmorSlot.ArmorSlotChest].value);\n  availableModCost.push(config.maximumModSlots[ArmorSlot.ArmorSlotLegs].value);\n  availableModCost.push(config.maximumModSlots[ArmorSlot.ArmorSlotClass].value);\n  return availableModCost.filter((d) => d > 0).sort((a, b) => b - a);\n}\n\nfunction* generateArmorCombinations(\n  helmets: IPermutatorArmor[],\n  gauntlets: IPermutatorArmor[],\n  chests: IPermutatorArmor[],\n  legs: IPermutatorArmor[],\n  requiresAtLeastOneExotic: boolean\n) {\n  for (let helmet of helmets) {\n    for (let gauntlet of gauntlets) {\n      if (helmet.isExotic && gauntlet.isExotic) continue;\n      for (let chest of chests) {\n        if ((helmet.isExotic || gauntlet.isExotic) && chest.isExotic) continue;\n        for (let leg of legs) {\n          if ((helmet.isExotic || gauntlet.isExotic || chest.isExotic) && leg.isExotic) continue;\n          if (\n            requiresAtLeastOneExotic &&\n            !(helmet.isExotic || gauntlet.isExotic || chest.isExotic || leg.isExotic)\n          )\n            continue;\n\n          yield [helmet, gauntlet, chest, leg];\n        }\n      }\n    }\n  }\n}\n\nfunction estimateCombinationsToBeChecked(\n  helmets: IPermutatorArmor[],\n  gauntlets: IPermutatorArmor[],\n  chests: IPermutatorArmor[],\n  legs: IPermutatorArmor[]\n) {\n  let totalCalculations = 0;\n  const exoticHelmets = helmets.filter((d) => d.isExotic).length;\n  const legendaryHelmets = helmets.length - exoticHelmets;\n  const exoticGauntlets = gauntlets.filter((d) => d.isExotic).length;\n  const legendaryGauntlets = gauntlets.length - exoticGauntlets;\n  const exoticChests = chests.filter((d) => d.isExotic).length;\n  const legendaryChests = chests.length - exoticChests;\n  const exoticLegs = legs.filter((d) => d.isExotic).length;\n  const legendaryLegs = legs.length - exoticLegs;\n  totalCalculations += exoticHelmets * legendaryGauntlets * legendaryChests * legendaryLegs;\n  totalCalculations += legendaryHelmets * exoticGauntlets * legendaryChests * legendaryLegs;\n  totalCalculations += legendaryHelmets * legendaryGauntlets * exoticChests * legendaryLegs;\n  totalCalculations += legendaryHelmets * legendaryGauntlets * legendaryChests * exoticLegs;\n  totalCalculations += legendaryHelmets * legendaryGauntlets * legendaryChests * legendaryLegs;\n  return totalCalculations;\n}\n\naddEventListener(\"message\", async ({ data }) => {\n  if (data.type != \"builderRequest\") return;\n\n  const threadSplit = data.threadSplit as { count: number; current: number };\n  const config = data.config as BuildConfiguration;\n  let items = data.items as IPermutatorArmor[];\n\n  if (threadSplit == undefined || config == undefined || items == undefined) {\n    return;\n  }\n\n  const startTime = Date.now();\n  console.time(`Total run thread#${threadSplit.current}`);\n  // toggle feature flags\n  config.onlyShowResultsWithNoWastedStats =\n    environment.featureFlags.enableZeroWaste && config.onlyShowResultsWithNoWastedStats;\n  if (!environment.featureFlags.enableModslotLimitation) {\n    config.maximumModSlots[ArmorSlot.ArmorSlotHelmet].value = 5;\n    config.maximumModSlots[ArmorSlot.ArmorSlotGauntlet].value = 5;\n    config.maximumModSlots[ArmorSlot.ArmorSlotChest].value = 5;\n    config.maximumModSlots[ArmorSlot.ArmorSlotLegs].value = 5;\n    config.maximumModSlots[ArmorSlot.ArmorSlotClass].value = 5;\n  }\n\n  let helmets = items\n    .filter((i) => i.slot == ArmorSlot.ArmorSlotHelmet)\n    .filter((k) => {\n      return (\n        !config.useFotlArmor ||\n        [\n          199733460, // titan masq\n          2545426109, // warlock\n          3224066584, // hunter\n        ].indexOf(k.hash) > -1\n      );\n    });\n  let gauntlets = items.filter((i) => i.slot == ArmorSlot.ArmorSlotGauntlet);\n  let chests = items.filter((i) => i.slot == ArmorSlot.ArmorSlotChest);\n  let legs = items.filter((i) => i.slot == ArmorSlot.ArmorSlotLegs);\n\n  // Support multithreading. find the largest set and split it by N.\n  if (threadSplit.count > 1) {\n    var splitEntry = (\n      [\n        [helmets, helmets.length],\n        [gauntlets, gauntlets.length],\n        [chests, chests.length],\n        [legs, legs.length],\n      ] as [IPermutatorArmor[], number][]\n    ).sort((a, b) => b[1] - a[1])[0][0];\n\n    var keepLength = Math.round(splitEntry.length / threadSplit.count);\n    var startIndex = keepLength * threadSplit.current; // we can delete everything before this\n    var endIndex = startIndex + keepLength; // we can delete everything after this\n    // if we have rounding issues, let the last thread do the rest\n    if (threadSplit.current == threadSplit.count - 1) endIndex = splitEntry.length;\n\n    // remove data at the end\n    splitEntry.splice(endIndex);\n    splitEntry.splice(0, startIndex);\n  }\n\n  let classItems = items.filter((i) => i.slot == ArmorSlot.ArmorSlotClass);\n  let amountExoticClassItems = classItems.filter((d) => d.isExotic).length;\n  let amountLegendaryClassItems = classItems.length - amountExoticClassItems;\n\n  let availableClassItemPerkTypes = new Set(\n    classItems.filter((d) => !d.isExotic).map((d) => d.perk)\n  );\n  let availableClassItemPerkTypesExotic = new Set(\n    classItems.filter((d) => d.isExotic).map((d) => d.perk)\n  );\n  if (\n    amountLegendaryClassItems > 0 &&\n    (config.assumeEveryLegendaryIsArtifice || config.assumeClassItemIsArtifice)\n  )\n    availableClassItemPerkTypes.add(ArmorPerkOrSlot.SlotArtifice);\n  if (amountExoticClassItems > 0 && config.assumeEveryExoticIsArtifice)\n    availableClassItemPerkTypesExotic.add(ArmorPerkOrSlot.SlotArtifice);\n\n  // runtime variables\n  const runtime = {\n    maximumPossibleTiers: [0, 0, 0, 0, 0, 0],\n    statCombo3x100: new Set(),\n    statCombo4x100: new Set(),\n  };\n  const constantBonus = prepareConstantStatBonus(config);\n  const constantModslotRequirement = prepareConstantModslotRequirement(config);\n  const constantAvailableModslots = prepareConstantAvailableModslots(config);\n  const hasArtificeClassItem = availableClassItemPerkTypes.has(ArmorPerkOrSlot.SlotArtifice);\n  const hasArtificeClassItemExotic = availableClassItemPerkTypesExotic.has(\n    ArmorPerkOrSlot.SlotArtifice\n  );\n  const requiresAtLeastOneExotic = config.selectedExotics.indexOf(FORCE_USE_ANY_EXOTIC) > -1;\n  const exoticClassItem: IPermutatorArmor | null =\n    classItems.sort((a, b) => (a.masterworked ? -1 : 1)).find((d) => d.isExotic) || null;\n  const exoticClassItemIsEnforced =\n    !!exoticClassItem && config.selectedExotics.indexOf(exoticClassItem.hash) > -1;\n\n  let results: IPermutatorArmorSet[] = [];\n  let resultsLength = 0;\n\n  let listedResults = 0;\n  let totalResults = 0;\n  let doNotOutput = false;\n\n  // contains the value of the total amount of combinations to be checked\n  let estimatedCalculations = estimateCombinationsToBeChecked(helmets, gauntlets, chests, legs);\n  let checkedCalculations = 0;\n  let lastProgressReportTime = 0;\n  console.info(`Estimated calculations for Thread#${threadSplit.current}`, estimatedCalculations);\n  console.debug(\n    `Thread#${threadSplit.current} items`,\n    JSON.stringify({\n      helmets: helmets.length,\n      gauntlets: gauntlets.length,\n      chests: chests.length,\n      legs: legs.length,\n      availableClassItemTypes: availableClassItemPerkTypes,\n    })\n  );\n\n  // define the delay; it can be 75ms if the estimated calculations are low\n  // if the estimated calculations >= 1e6, then we will use 125ms\n  let progressBarDelay = estimatedCalculations >= 1e6 ? 125 : 75;\n\n  const hasMasterworkedClassItemExotic =\n    !!exoticClassItem && (exoticClassItem.masterworked || config.assumeExoticsMasterworked);\n  const hasMasterworkedClassItemLegendary =\n    config.assumeClassItemMasterworked || config.assumeLegendariesMasterworked;\n\n  for (let [helmet, gauntlet, chest, leg] of generateArmorCombinations(\n    helmets,\n    gauntlets,\n    chests,\n    legs,\n    requiresAtLeastOneExotic\n  )) {\n    checkedCalculations++;\n    /**\n     *  At this point we already have:\n     *  - Masterworked Exotic/Legendaries, if they must be masterworked (config.onlyUseMasterworkedExotics/config.onlyUseMasterworkedLegendaries)\n     *  - disabled items were already removed (config.disabledItems)\n     */\n    const slotCheckResult = checkSlots(\n      config,\n      constantModslotRequirement,\n      availableClassItemPerkTypes,\n      helmet,\n      gauntlet,\n      chest,\n      leg\n    );\n    if (!slotCheckResult.valid) continue;\n\n    const canUseArtificeClassItem =\n      !slotCheckResult.requiredClassItemType ||\n      slotCheckResult.requiredClassItemType == ArmorPerkOrSlot.SlotArtifice;\n\n    const hasOneExotic = helmet.isExotic || gauntlet.isExotic || chest.isExotic || leg.isExotic;\n    const tmpHasArtificeClassItem =\n      hasArtificeClassItem ||\n      (!hasOneExotic && hasArtificeClassItemExotic && !config.ignoreExistingExoticArtificeSlots);\n    const hasMasterworkedClassItem = exoticClassItemIsEnforced\n      ? hasMasterworkedClassItemExotic\n      : hasMasterworkedClassItemLegendary || (!hasOneExotic && hasMasterworkedClassItemExotic);\n\n    const result = handlePermutation(\n      runtime,\n      config,\n      helmet,\n      gauntlet,\n      chest,\n      leg,\n      constantBonus,\n      constantAvailableModslots,\n      doNotOutput,\n      tmpHasArtificeClassItem && canUseArtificeClassItem,\n      exoticClassItemIsEnforced,\n      hasMasterworkedClassItem\n    );\n    // Only add 50k to the list if the setting is activated.\n    // We will still calculate the rest so that we get accurate results for the runtime values\n    if (result != null) {\n      totalResults++;\n      if (isIPermutatorArmorSet(result)) {\n        result.classItemPerk =\n          slotCheckResult.requiredClassItemType ||\n          (hasArtificeClassItem ? ArmorPerkOrSlot.SlotArtifice : ArmorPerkOrSlot.None);\n\n        // add the exotic class item if we have one and we do not have an exotic armor piece in this selection\n        if (!hasOneExotic && exoticClassItem && exoticClassItemIsEnforced) {\n          result.armor.push(exoticClassItem.id);\n        }\n\n        results.push(result);\n        resultsLength++;\n        listedResults++;\n        doNotOutput =\n          doNotOutput ||\n          (config.limitParsedResults && listedResults >= 3e4 / threadSplit.count) ||\n          listedResults >= 1e6 / threadSplit.count;\n      }\n    }\n\n    if (totalResults % 5000 == 0 && lastProgressReportTime + progressBarDelay < Date.now()) {\n      lastProgressReportTime = Date.now();\n      postMessage({ checkedCalculations, estimatedCalculations });\n    }\n\n    if (resultsLength >= 5000) {\n      // @ts-ignore\n      postMessage({ runtime, results, done: false, checkedCalculations, estimatedCalculations });\n      results = [];\n      resultsLength = 0;\n    }\n  }\n  console.timeEnd(`Total run thread#${threadSplit.current}`);\n\n  // @ts-ignore\n  postMessage({\n    runtime,\n    results,\n    done: true,\n    checkedCalculations,\n    estimatedCalculations,\n    stats: {\n      permutationCount: totalResults,\n      itemCount: items.length - classItems.length,\n      totalTime: Date.now() - startTime,\n    },\n  });\n});\n\nexport function getStatSum(\n  items: IDestinyArmor[]\n): [number, number, number, number, number, number] {\n  return [\n    items[0].mobility + items[1].mobility + items[2].mobility + items[3].mobility,\n    items[0].resilience + items[1].resilience + items[2].resilience + items[3].resilience,\n    items[0].recovery + items[1].recovery + items[2].recovery + items[3].recovery,\n    items[0].discipline + items[1].discipline + items[2].discipline + items[3].discipline,\n    items[0].intellect + items[1].intellect + items[2].intellect + items[3].intellect,\n    items[0].strength + items[1].strength + items[2].strength + items[3].strength,\n  ];\n}\n\nexport function handlePermutation(\n  runtime: any,\n  config: BuildConfiguration,\n  helmet: IPermutatorArmor,\n  gauntlet: IPermutatorArmor,\n  chest: IPermutatorArmor,\n  leg: IPermutatorArmor,\n  constantBonus: number[],\n  availableModCost: number[],\n  doNotOutput = false,\n  hasArtificeClassItem = false,\n  hasExoticClassItem = false,\n  hasMasterworkedClassItem = false\n): never[] | IPermutatorArmorSet | null {\n  const items = [helmet, gauntlet, chest, leg];\n  var totalStatBonus = 0;\n  if (hasMasterworkedClassItem) totalStatBonus += 2;\n\n  for (let i = 0; i < items.length; i++) {\n    let item = items[i]; // add masterworked value, if necessary\n    if (\n      item.masterworked ||\n      (item.isExotic && config.assumeExoticsMasterworked) ||\n      (!item.isExotic && config.assumeLegendariesMasterworked)\n    )\n      totalStatBonus += 2;\n  }\n  const stats = getStatSum(items);\n  stats[0] += totalStatBonus;\n  stats[1] += totalStatBonus + (!items[2].isExotic && config.addConstent1Resilience ? 1 : 0);\n  stats[2] += totalStatBonus;\n  stats[3] += totalStatBonus;\n  stats[4] += totalStatBonus;\n  stats[5] += totalStatBonus;\n\n  const statsWithoutMods = [stats[0], stats[1], stats[2], stats[3], stats[4], stats[5]];\n  stats[0] += constantBonus[0];\n  stats[1] += constantBonus[1];\n  stats[2] += constantBonus[2];\n  stats[3] += constantBonus[3];\n  stats[4] += constantBonus[4];\n  stats[5] += constantBonus[5];\n\n  for (let n: ArmorStat = 0; n < 6; n++) {\n    // Abort here if we are already above the limit, in case of fixed stat tiers\n    if (config.minimumStatTiers[n].fixed) {\n      if (config.allowExactStats && stats[n] / 10 - 0.001 > config.minimumStatTiers[n].value)\n        return null;\n      if (!config.allowExactStats && stats[n] / 10 >= config.minimumStatTiers[n].value + 1)\n        return null;\n    }\n  }\n\n  // get the amount of armor with artifice slot\n  let availableArtificeCount = items.filter(\n    (d) =>\n      ((!d.isExotic || !config.ignoreExistingExoticArtificeSlots) &&\n        d.perk == ArmorPerkOrSlot.SlotArtifice) ||\n      (config.assumeEveryLegendaryIsArtifice && !d.isExotic) ||\n      (config.assumeEveryExoticIsArtifice && d.isExotic)\n  ).length;\n\n  if (hasArtificeClassItem) availableArtificeCount += 1;\n\n  // get distance\n  const distances = [\n    Math.max(0, config.minimumStatTiers[0].value * 10 - stats[0]),\n    Math.max(0, config.minimumStatTiers[1].value * 10 - stats[1]),\n    Math.max(0, config.minimumStatTiers[2].value * 10 - stats[2]),\n    Math.max(0, config.minimumStatTiers[3].value * 10 - stats[3]),\n    Math.max(0, config.minimumStatTiers[4].value * 10 - stats[4]),\n    Math.max(0, config.minimumStatTiers[5].value * 10 - stats[5]),\n  ];\n\n  if (config.onlyShowResultsWithNoWastedStats) {\n    for (let stat: ArmorStat = 0; stat < 6; stat++) {\n      const v = 10 - (stats[stat] % 10);\n      distances[stat] = Math.max(distances[stat], v < 10 ? v : 0);\n    }\n  }\n\n  // distances required to reduce wasted stat points :)\n  const optionalDistances = [0, 0, 0, 0, 0, 0];\n  if (config.tryLimitWastedStats)\n    for (let stat: ArmorStat = 0; stat < 6; stat++) {\n      if (\n        distances[stat] == 0 &&\n        !config.minimumStatTiers[stat].fixed &&\n        stats[stat] < 100 &&\n        stats[stat] % 10 > 0\n      ) {\n        optionalDistances[stat] = 10 - (stats[stat] % 10);\n      }\n    }\n  const totalOptionalDistances = optionalDistances.reduce((a, b) => a + b, 0);\n  // if the sum of distances is > (10*5)+(3*artificeCount), we can abort here\n  //const distanceSum = distances.reduce((a, b) => a + b, 0);\n  const distanceSum =\n    distances[0] + distances[1] + distances[2] + distances[3] + distances[4] + distances[5];\n  if (distanceSum > 10 * 5 + 3 * availableArtificeCount) return null;\n\n  let result: StatModifier[] | null;\n  if (distanceSum == 0 && totalOptionalDistances == 0) result = [];\n  else\n    result = get_mods_precalc(\n      config,\n      distances,\n      optionalDistances,\n      availableArtificeCount,\n      availableModCost,\n      config.modOptimizationStrategy\n    );\n\n  if (result == null) return null;\n\n  //#region 3x100 and 4x100 optimization\n  //#################################################################################\n  // 3x100 and 4x100 optimization\n  // This code could be in its own function, but even calling an empty method\n  // with the required parameters increases the runtime by A LOT (25% on my end)\n  //################################################################################\n  //*/\n  const distancesTo100 = [\n    Math.max(0, 100 - stats[0]),\n    Math.max(0, 100 - stats[1]),\n    Math.max(0, 100 - stats[2]),\n    Math.max(0, 100 - stats[3]),\n    Math.max(0, 100 - stats[4]),\n    Math.max(0, 100 - stats[5]),\n  ];\n\n  // find every combo of three stats which sum is less than 65; no duplicates\n  let combos3x100 = [];\n  let combos4x100 = [];\n  for (let i = 0; i < 4; i++) {\n    for (let j = i + 1; j < 5; j++) {\n      for (let k = j + 1; k < 6; k++) {\n        let dx = distances.slice();\n        dx[i] = distancesTo100[i];\n        dx[j] = distancesTo100[j];\n        dx[k] = distancesTo100[k];\n        let distanceSum = dx[0] + dx[1] + dx[2] + dx[3] + dx[4] + dx[5];\n        if (distanceSum <= 65) {\n          combos3x100.push([i, j, k]);\n\n          for (let l = k + 1; l < 6; l++) {\n            let dy = dx.slice();\n            dy[l] = distancesTo100[l];\n            let distanceSum = dy[0] + dy[1] + dy[2] + dy[3] + dy[4] + dy[5];\n            if (distanceSum <= 65) {\n              combos4x100.push([i, j, k, l]);\n            }\n          }\n        }\n      }\n    }\n  }\n  if (combos3x100.length > 0) {\n    // now validate the combos using get_mods_precalc with optimize=false\n    for (let combo of combos3x100) {\n      const newDistances = distances.slice();\n      for (let i of combo) {\n        newDistances[i] = distancesTo100[i];\n      }\n      const mods = get_mods_precalc(\n        config,\n        newDistances,\n        [0, 0, 0, 0, 0, 0],\n        availableArtificeCount,\n        availableModCost,\n        ModOptimizationStrategy.None\n      );\n      if (mods != null) {\n        runtime.statCombo3x100.add((1 << combo[0]) + (1 << combo[1]) + (1 << combo[2]));\n      }\n    }\n    // now validate the combos using get_mods_precalc with optimize=false\n    for (let combo of combos4x100) {\n      const newDistances = distances.slice();\n      for (let i of combo) {\n        newDistances[i] = distancesTo100[i];\n      }\n      const mods = get_mods_precalc(\n        config,\n        newDistances,\n        [0, 0, 0, 0, 0, 0],\n        availableArtificeCount,\n        availableModCost,\n        ModOptimizationStrategy.None\n      );\n      if (mods != null) {\n        runtime.statCombo4x100.add(\n          (1 << combo[0]) + (1 << combo[1]) + (1 << combo[2]) + (1 << combo[3])\n        );\n      }\n    }\n  }\n  //*/\n  //#################################################################################\n  // END OF 3x100 and 4x100 optimization\n  //#################################################################################\n  //#endregion\n\n  //#region Tier Availability Testing\n  //#################################################################################\n  // Tier Availability Testing\n  //#################################################################################\n  //*\n  for (let stat = 0; stat < 6; stat++) {\n    if (runtime.maximumPossibleTiers[stat] < stats[stat]) {\n      runtime.maximumPossibleTiers[stat] = stats[stat];\n    }\n\n    const oldDistance = distances[stat];\n    for (\n      let tier = 10;\n      tier >= config.minimumStatTiers[stat as ArmorStat].value &&\n      tier > runtime.maximumPossibleTiers[stat] / 10;\n      tier--\n    ) {\n      if (stats[stat] >= tier * 10) break;\n      const v = 10 - (stats[stat] % 10);\n      distances[stat] = Math.max(v < 10 ? v : 0, tier * 10 - stats[stat]);\n      const mods = get_mods_precalc(\n        config,\n        distances,\n        [0, 0, 0, 0, 0, 0],\n        availableArtificeCount,\n        availableModCost,\n        ModOptimizationStrategy.None\n      );\n      //const mods = null;\n      if (mods != null) {\n        runtime.maximumPossibleTiers[stat] = tier * 10;\n        break;\n      }\n    }\n    distances[stat] = oldDistance;\n  }\n  //console.debug(\"b \"+runtime.maximumPossibleTiers,n)\n  //console.warn(n)\n  //*/\n  //#################################################################################\n  // END OF Tier Availability Testing\n  //#################################################################################\n\n  //#endregion\n\n  if (doNotOutput) return [];\n\n  const usedArtifice = result.filter((d) => 0 == d % 3);\n  const usedMods = result.filter((d) => 0 != d % 3);\n\n  for (let statModifier of result) {\n    const stat = Math.floor((statModifier - 1) / 3);\n    stats[stat] += STAT_MOD_VALUES[statModifier][1];\n  }\n  const waste1 = getWaste(stats);\n  if (config.onlyShowResultsWithNoWastedStats && waste1 > 0) return null;\n\n  return createArmorSet(\n    helmet,\n    gauntlet,\n    chest,\n    leg,\n    usedArtifice,\n    usedMods,\n    stats,\n    statsWithoutMods\n  );\n}\n\nfunction get_mods_precalc(\n  config: BuildConfiguration,\n  distances: number[],\n  optionalDistances: number[],\n  availableArtificeCount: number,\n  availableModCost: number[],\n  optimize: ModOptimizationStrategy = ModOptimizationStrategy.None\n): StatModifier[] | null {\n  // check distances <= 65\n  const totalDistance =\n    distances[0] + distances[1] + distances[2] + distances[3] + distances[4] + distances[5];\n  if (totalDistance > 65) return null;\n\n  const modCombinations = config.onlyShowResultsWithNoWastedStats\n    ? precalculatedZeroWasteModCombinations\n    : precalculatedModCombinations;\n\n  // grab the precalculated mods for the distances\n  const precalculatedMods = [\n    modCombinations[distances[0]] || [[0, 0, 0, 0]], // mobility\n    modCombinations[distances[1]] || [[0, 0, 0, 0]], // resilience\n    modCombinations[distances[2]] || [[0, 0, 0, 0]], // recovery\n    modCombinations[distances[3]] || [[0, 0, 0, 0]], // discipline\n    modCombinations[distances[4]] || [[0, 0, 0, 0]], // intellect\n    modCombinations[distances[5]] || [[0, 0, 0, 0]], // strength\n  ];\n\n  // we handle locked exact stats as zero-waste in terms  of the mod selection\n  if (config.allowExactStats) {\n    for (let i = 0; i < 6; i++) {\n      if (config.minimumStatTiers[i as ArmorStat].fixed && distances[i] > 0) {\n        precalculatedMods[i] = precalculatedZeroWasteModCombinations[distances[i]] || [\n          [0, 0, 0, 0],\n        ];\n        // and now also remove every solution with >= 10 points of \"overshoot\"\n        precalculatedMods[i] = precalculatedMods[i].filter((d) => d[3] - distances[i] < 10);\n      }\n    }\n  }\n\n  // add optional distances to the precalculated mods\n  const limit = 3;\n  for (let i = 0; i < optionalDistances.length; i++) {\n    if (optionalDistances[i] > 0) {\n      const additionalCombosA = modCombinations[optionalDistances[i]].filter(\n        (d) =>\n          d[2] == 0 && // disallow major mods\n          d[3] % 10 > 0 && // we do not want to add exact stat tiers\n          (optionalDistances[i] + d[3]) % 10 < optionalDistances[i] // and the changes must have less waste than before\n      );\n      //(d) => d[3] % 10 > 0);\n      if (additionalCombosA != null) {\n        precalculatedMods[i] = additionalCombosA.slice(0, limit).concat(precalculatedMods[i]);\n      }\n    }\n  }\n  let bestMods: any = null;\n  let bestScore = 1000;\n\n  const availableModCostLen = availableModCost.length;\n  const minAvailableModCost = availableModCost[availableModCostLen - 1];\n\n  // const maxAvailableModCost = availableModCost[0];\n\n  function validateMods(usedModCost: number[]): boolean {\n    let usedModCount = usedModCost.length;\n    if (usedModCount == 0) return true;\n    if (usedModCount > availableModCostLen) return false;\n    // sort usedMods ascending\n    usedModCost.sort((a, b) => b - a);\n    // check if the usedMods are valid\n    // substract the usedMods from the availableMods, start at the highest cost\n    for (let i = 0; i < availableModCost.length && i < usedModCount; i++) {\n      if (availableModCost[i] < usedModCost[i]) return false;\n    }\n\n    return true;\n  }\n\n  const costMinor = [1, 2, 2, 1, 2, 1];\n  const costMajor = [3, 4, 4, 3, 4, 3];\n\n  function score(entries: [number, number, number, number][]) {\n    if (optimize == ModOptimizationStrategy.ReduceUsedModSockets) {\n      const n1 = entries.reduce((a, b) => a + b[1] + b[2], 0);\n      return n1;\n    } else if (optimize == ModOptimizationStrategy.ReduceUsedModPoints) {\n      return entries.reduce(\n        (a, b, currentIndex) => a + costMinor[currentIndex] * b[1] + costMajor[currentIndex] * b[2],\n        0\n      );\n    }\n    return entries.reduce((a, b) => a + b[3], 0);\n  }\n\n  function validate(\n    entries: [number, number, number, number][],\n    alsoValidateMods = false\n  ): boolean {\n    // sum up the stats\n    const sum = entries.reduce(\n      (a, b, i) => [a[0] + b[0], a[1] + b[1], a[2] + b[2], a[3] + b[3] - distances[i]],\n      [0, 0, 0, 0]\n    );\n\n    if (score(entries) > bestScore) return false;\n    if (sum[0] > availableArtificeCount) return false;\n    if (sum[1] + sum[2] > availableModCostLen) return false;\n    if (sum[3] < 0) return false;\n\n    // test availableModCosts\n    // the used mods translate as follows:\n    // entries[0], entries[3] and entries[5]: minor 1, major 3\n    // entries[1], entries[2] and entries[4]: minor 2, major 4\n\n    if (!alsoValidateMods || minAvailableModCost == 5) return true;\n\n    let usedModCost: number[] = [];\n    for (let statIdx = 0; statIdx < entries.length; statIdx++) {\n      const entry = entries[statIdx];\n      const isSmallMod = statIdx == 0 || statIdx == 3 || statIdx == 5;\n      let minorModCost = isSmallMod ? 1 : 2;\n      let majorModCost = isSmallMod ? 3 : 4;\n\n      for (let minor = 0; minor < entry[1]; minor++) usedModCost.push(minorModCost);\n      for (let major = 0; major < entry[2]; major++) usedModCost.push(majorModCost);\n    }\n\n    if (usedModCost.length == 0) return true;\n    if (!validateMods(usedModCost)) return false;\n\n    return true;\n  }\n\n  const mustExecuteOptimization = totalDistance > 0 && optimize != ModOptimizationStrategy.None;\n  root: for (let mobility of precalculatedMods[0]) {\n    if (!validate([mobility])) continue;\n    for (let resilience of precalculatedMods[1]) {\n      if (!validate([mobility, resilience])) continue;\n      for (let recovery of precalculatedMods[2]) {\n        if (!validate([mobility, resilience, recovery])) continue;\n        if (mustExecuteOptimization && score([mobility, resilience, recovery]) >= bestScore)\n          continue;\n        for (let discipline of precalculatedMods[3]) {\n          if (!validate([mobility, resilience, recovery, discipline])) continue;\n          if (\n            mustExecuteOptimization &&\n            score([mobility, resilience, recovery, discipline]) >= bestScore\n          )\n            continue;\n          for (let intellect of precalculatedMods[4]) {\n            if (!validate([mobility, resilience, recovery, discipline, intellect])) continue;\n            if (\n              mustExecuteOptimization &&\n              score([mobility, resilience, recovery, discipline, intellect]) >= bestScore\n            )\n              continue;\n            inner: for (let strength of precalculatedMods[5]) {\n              let mods = [mobility, resilience, recovery, discipline, intellect, strength];\n\n              if (!validate(mods, true)) continue;\n\n              // Fill optional distances\n              for (let m = 0; m < 6; m++)\n                if (optionalDistances[m] > 0 && mods[m][3] == 0 && bestMods != null) continue inner;\n\n              let scoreVal = score(mods);\n              if (scoreVal < bestScore) {\n                bestScore = scoreVal;\n                bestMods = mods;\n                if (!mustExecuteOptimization) {\n                  break root;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  if (bestMods === null) return null;\n\n  const usedMods = [];\n  for (let i = 0; i < bestMods.length; i++) {\n    for (let n = 0; n < bestMods[i][0]; n++) usedMods.push(3 + 3 * i);\n    for (let n = 0; n < bestMods[i][1]; n++) usedMods.push(1 + 3 * i);\n    for (let n = 0; n < bestMods[i][2]; n++) usedMods.push(2 + 3 * i);\n  }\n\n  return usedMods;\n}\n\nexport function getSkillTier(stats: number[]) {\n  return (\n    Math.floor(Math.min(100, stats[ArmorStat.Mobility]) / 10) +\n    Math.floor(Math.min(100, stats[ArmorStat.Resilience]) / 10) +\n    Math.floor(Math.min(100, stats[ArmorStat.Recovery]) / 10) +\n    Math.floor(Math.min(100, stats[ArmorStat.Discipline]) / 10) +\n    Math.floor(Math.min(100, stats[ArmorStat.Intellect]) / 10) +\n    Math.floor(Math.min(100, stats[ArmorStat.Strength]) / 10)\n  );\n}\n\nexport function getWaste(stats: number[]) {\n  return (\n    (stats[ArmorStat.Mobility] > 100\n      ? stats[ArmorStat.Mobility] - 100\n      : stats[ArmorStat.Mobility] % 10) +\n    (stats[ArmorStat.Resilience] > 100\n      ? stats[ArmorStat.Resilience] - 100\n      : stats[ArmorStat.Resilience] % 10) +\n    (stats[ArmorStat.Recovery] > 100\n      ? stats[ArmorStat.Recovery] - 100\n      : stats[ArmorStat.Recovery] % 10) +\n    (stats[ArmorStat.Discipline] > 100\n      ? stats[ArmorStat.Discipline] - 100\n      : stats[ArmorStat.Discipline] % 10) +\n    (stats[ArmorStat.Intellect] > 100\n      ? stats[ArmorStat.Intellect] - 100\n      : stats[ArmorStat.Intellect] % 10) +\n    (stats[ArmorStat.Strength] > 100\n      ? stats[ArmorStat.Strength] - 100\n      : stats[ArmorStat.Strength] % 10)\n  );\n}\n","export const environment = {\n  \"version\": \"2.7.0\",\n  \"revision\": \"7c5bb91\",\n  \"production\": true,\n  \"beta\": false,\n  \"canary\": false,\n  \"apiKey\": \"9415df8eff46408aa9c0d51e4d69b94f\",\n  \"clientId\": \"37252\",\n  \"client_secret\": \"KnVcJPWr7C5y0loOfBoKSyQ-vWXR0JICrgb1aJLsLgg\",\n  \"offlineMode\": false,\n  \"highlight_project_id\": \"2d1yrx4d\",\n  \"featureFlags\": {\n    \"enableModslotLimitation\": true,\n    \"enableZeroWaste\": true,\n    \"enableGuardianGamesFeatures\": false\n  }\n};","import { isEqual as _isEqual } from \"lodash\";\n\nexport function getDifferences<T extends object>(\n  object1: T,\n  object2: T\n): {\n  changes: {\n    [key in keyof T]?: {\n      from: string;\n      to: string;\n    };\n  };\n} {\n  let differences: {\n    [key in keyof T]?: {\n      from: string;\n      to: string;\n    };\n  } = {};\n\n  // Loop through each key and compare the values\n  Object.keys(object1).forEach((key) => {\n    const typedKey = key as keyof T; // Type assertion for strict key typing\n    if (!_isEqual(object1[typedKey], object2[typedKey])) {\n      differences[typedKey] = {\n        from: JSON.stringify(object1[typedKey]),\n        to: JSON.stringify(object2[typedKey]),\n      };\n    }\n  });\n\n  return { changes: differences };\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { isEqual as _isEqual } from \"lodash\";\nimport { getDifferences } from \"../data/commonFunctions\";\n\nexport interface Status {\n  calculatingPermutations: boolean;\n  calculatingResults: boolean;\n  updatingResultsTable: boolean;\n  updatingManifest: boolean;\n  updatingInventory: boolean;\n  updatingVendors: boolean;\n\n  apiError: boolean;\n  authError: boolean;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class StatusProviderService {\n  private __status: Status = {\n    calculatingResults: false,\n    calculatingPermutations: false,\n    updatingResultsTable: false,\n    updatingInventory: false,\n    updatingManifest: false,\n    updatingVendors: false,\n\n    apiError: false, // in case the api is inaccesible or disabled\n    authError: false, // in case the login tokens are invalid and can not be refreshed\n  };\n\n  private __last_Status: Status = structuredClone(this.__status);\n\n  private _status: BehaviorSubject<Status>;\n  public readonly status: Observable<Status>;\n\n  constructor() {\n    this._status = new BehaviorSubject<Status>(this.__status);\n    this.status = this._status.asObservable();\n  }\n\n  getStatus() {\n    return this.__status;\n  }\n\n  modifyStatus(cb: (status: Status) => void) {\n    cb(this.__status);\n    if (!_isEqual(this.__last_Status, this.__status))\n      console.debug(\"Status changed\", getDifferences(this.__last_Status, this.__status));\n    this.__last_Status = structuredClone(this.__status);\n    this._status.next(this.__status);\n  }\n\n  setApiError() {\n    if (this.__status.apiError) return;\n    this.modifyStatus((status) => {\n      status.apiError = true;\n    });\n  }\n\n  clearApiError() {\n    if (!this.__status.apiError) return;\n    this.modifyStatus((status) => {\n      status.apiError = false;\n    });\n  }\n\n  setAuthError() {\n    if (this.__status.authError) return;\n    this.modifyStatus((status) => {\n      status.authError = true;\n    });\n  }\n\n  clearAuthError() {\n    if (!this.__status.authError) return;\n    this.modifyStatus((status) => {\n      status.authError = false;\n    });\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../environments/environment\";\nimport { Router } from \"@angular/router\";\nimport { Observable, ReplaySubject } from \"rxjs\";\nimport { StatusProviderService } from \"./status-provider.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  private _logoutEvent: ReplaySubject<null>;\n  public readonly logoutEvent: Observable<null>;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private status: StatusProviderService\n  ) {\n    this._logoutEvent = new ReplaySubject(1);\n    this.logoutEvent = this._logoutEvent.asObservable();\n  }\n\n  get refreshTokenExpired() {\n    return this.refreshTokenExpiringAt < Date.now();\n  }\n\n  async autoRegenerateTokens() {\n    const timing = 1000 * 3600 * 0.5; // Refresh every half hour\n    console.debug(\"Refresh Token\", {\n      tokenInfo: {\n        /*refreshToken: this.refreshToken,*/\n        refreshTokenExpiringAt: this.refreshTokenExpiringAt,\n        lastRefresh: this.lastRefresh,\n        dateNow: Date.now(),\n      },\n    });\n\n    if (\n      this.refreshToken &&\n      Date.now() < this.refreshTokenExpiringAt &&\n      Date.now() > this.lastRefresh + timing\n    ) {\n      return await this.generateTokens(true);\n    }\n    return true;\n  }\n\n  async getCurrentMembershipData(): Promise<any> {\n    const item = JSON.parse(localStorage.getItem(\"auth-membershipInfo\") || \"null\");\n    if (item == null) {\n      const currentMembershipData = this.getCurrentMembershipData();\n      localStorage.setItem(\"auth-membershipInfo\", JSON.stringify(currentMembershipData));\n      return currentMembershipData;\n    } else return item;\n  }\n\n  async generateTokens(refresh = false): Promise<boolean> {\n    console.info(\"Generate auth tokens\", \"refresh based on refresh_token:\", refresh);\n    const CLIENT_ID = environment.clientId;\n    const CLIENT_SECRET = environment.client_secret;\n    const grant_type = \"authorization_code\";\n    const TOKEN = this.authCode;\n\n    let body = `grant_type=${grant_type}&code=${TOKEN}&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`;\n    if (refresh) {\n      body = `grant_type=refresh_token&refresh_token=${this.refreshToken}&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`;\n    }\n\n    return await this.http\n      .post<any>(`https://www.bungie.net/Platform/App/OAuth/Token/`, body, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n          \"X-API-Key\": environment.apiKey,\n        },\n      })\n      .toPromise()\n      .then((value) => {\n        console.log(\"generateTokens\", value);\n        this.accessToken = value.access_token;\n        this.refreshToken = value.refresh_token;\n        this.refreshTokenExpiringAt = Date.now() + value.refresh_expires_in * 1000 - 10 * 1000;\n        this.lastRefresh = Date.now();\n        this.status.modifyStatus((s) => (s.authError = false));\n        return true;\n      })\n      .catch(async (err) => {\n        console.log({ err });\n        this.status.modifyStatus((s) => (s.authError = true));\n        return false;\n      });\n  }\n\n  isAuthenticated() {\n    return !!this.accessToken;\n  }\n\n  get authCode() {\n    return localStorage.getItem(\"code\");\n  }\n\n  set authCode(newCode: string | null) {\n    if (!newCode) {\n      console.info(\"Clearing auth code\");\n      localStorage.removeItem(\"code\");\n    } else {\n      console.info(\"Setting new auth code\");\n      localStorage.setItem(\"code\", \"\" + newCode);\n    }\n  }\n\n  get accessToken() {\n    return localStorage.getItem(\"accessToken\");\n  }\n\n  set accessToken(newCode: string | null) {\n    if (!newCode) {\n      console.info(\"Clearing access token\");\n      localStorage.removeItem(\"accessToken\");\n    } else {\n      console.info(\"Setting new access token\");\n      localStorage.setItem(\"accessToken\", \"\" + newCode);\n    }\n  }\n\n  get refreshToken() {\n    return localStorage.getItem(\"refreshToken\");\n  }\n\n  set refreshToken(newCode: string | null) {\n    if (!newCode) {\n      console.info(\"Clearing refresh token\");\n      localStorage.removeItem(\"refreshToken\");\n    } else {\n      console.info(\"Setting new refresh token\");\n      localStorage.setItem(\"refreshToken\", \"\" + newCode);\n    }\n  }\n\n  get refreshTokenExpiringAt(): number {\n    let l = localStorage.getItem(\"refreshTokenExpiringAt\") || \"0\";\n    return l ? Number.parseInt(l) : 0;\n  }\n\n  set refreshTokenExpiringAt(newCode: number | null) {\n    if (!newCode) {\n      console.info(\"Clearing refresh token\");\n      localStorage.removeItem(\"refreshTokenExpiringAt\");\n    } else {\n      console.info(\"Setting new refresh token\");\n      localStorage.setItem(\"refreshTokenExpiringAt\", \"\" + newCode);\n    }\n  }\n\n  get lastRefresh(): number {\n    let l = localStorage.getItem(\"lastRefresh\") || \"0\";\n    return l ? Number.parseInt(l) : 0;\n  }\n\n  set lastRefresh(newCode: number | null) {\n    if (!newCode) localStorage.removeItem(\"lastRefresh\");\n    else localStorage.setItem(\"lastRefresh\", newCode.toString());\n  }\n\n  clearManifestInfo() {\n    localStorage.removeItem(\"LastArmorUpdate\");\n    localStorage.removeItem(\"LastManifestUpdate\");\n  }\n\n  private clearLoginInfo() {\n    this.lastRefresh = null;\n    this.refreshTokenExpiringAt = null;\n    this.authCode = null;\n    this.accessToken = null;\n    this.refreshToken = null;\n  }\n\n  async logout() {\n    if (environment.offlineMode) {\n      console.debug(\"Offline mode, skipping logout\");\n      return;\n    }\n    try {\n      this._logoutEvent.next(null);\n      this.clearManifestInfo();\n      this.clearLoginInfo();\n    } finally {\n      await this.router.navigate([\"login\"]);\n    }\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: \"app-handle-bungie-login\",\n  templateUrl: \"./handle-bungie-login.component.html\",\n  styleUrls: [\"./handle-bungie-login.component.css\"],\n})\nexport class HandleBungieLoginComponent implements OnInit {\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private loginService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(async (params) => {\n      let code = params[\"code\"];\n      if (window.location.search.indexOf(\"?code=\") > -1) code = window.location.search.substr(6);\n\n      if (!code) return;\n\n      console.info({ code });\n\n      this.loginService.authCode = code;\n\n      console.info(\"Generate tokens with the new code\");\n      await this.loginService.generateTokens();\n\n      console.info(\"Now navigate to /\");\n      await this.router.navigate([\"/\"]);\n    });\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<mat-toolbar class=\"canary-warning\" color=\"primary\" *ngIf=\"is_canary\">\n  <span class=\"header-spacer\"></span>\n  You are using the <b>&nbsp;unstable&nbsp;</b> canary build. Some features may be unfinished or\n  vanish. Please report any issues you encounter.\n  <span class=\"header-spacer\"></span>\n</mat-toolbar>\n\n<mat-toolbar class=\"bungie-day\" color=\"accent\" > <!-- style=\"display: none\" -->\n  <span class=\"header-spacer\"></span>\n\n  <img fxHide.xs src=\"../assets/bungie-game2give-2024.jpg\" class=\"donordrive\" />\n  <a\n    href=\"https://tiltify.com/@mijago/game2give-2025\"\n    target=\"_blank\"\n    title=\"Support the Game2Give!\">\n    Please support us at the Game2Give 2025!\n  </a>\n  <span class=\"header-spacer\"></span>\n</mat-toolbar>\n\n<app-handle-bungie-login></app-handle-bungie-login>\n<router-outlet></router-outlet>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component } from \"@angular/core\";\nimport { environment } from \"../environments/environment\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent {\n  title = \"D2ArmorPicker\";\n  is_beta = environment.beta;\n  is_canary = environment.canary;\n\n  constructor() {\n    console.log(\"PRODUCTION?\", environment.production);\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component } from \"@angular/core\";\nimport { environment } from \"../../../environments/environment\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n})\nexport class LoginComponent {\n  constructor() {}\n\n  startLogin() {\n    window.location.href = `https://www.bungie.net/en/OAuth/Authorize?client_id=${environment.clientId}&response_type=code&reauth=true`;\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<mat-card appearance=\"outlined\">\n  <mat-card-header>\n    <div class=\"example-header-image\" mat-card-avatar></div>\n    <mat-card-header>\n      <mat-card-title>Destiny 2 Armor Picker</mat-card-title>\n      <mat-card-subtitle>A simple armor min-max tool by Mijago.</mat-card-subtitle>\n    </mat-card-header>\n  </mat-card-header>\n  <mat-card-content>\n    <p>\n      This tool allows you to select the optimal armor from your inventory and vault to satisfy your\n      stat needs. It also tells you which stat mods you have to use!\n      <br />\n      <br />\n      You have to log in to enable this tool to grab your armor from the API.<br />\n      If you like my tools and want to support me, head to\n      <a href=\"https://ko-fi.com/mijago\" target=\"_blank\">ko-fi.com</a> and buy me a coffee! ❤\n      <br />\n      If you found a bug or have a feature request, please open an issue\n      <a href=\"https://github.com/Mijago/D2ArmorPicker\" target=\"_blank\">in the Github Repository</a\n      >!\n    </p>\n    <p>\n      D2ArmorPicker uses the Bungie.net api and it's OAuth authorization. You log in on an official\n      Bungie.net page and D2ArmorPicker receives a temporary login token from Bungie. That means it\n      does not receive your credentials.\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button (click)=\"startLogin()\" color=\"primary\" mat-raised-button>Login</button>\n  </mat-card-actions>\n</mat-card>\n\n<mat-card appearance=\"outlined\">\n  <mat-card-header>\n    <mat-card-title> Examples </mat-card-title>\n    <mat-card-subtitle>Some examples to show what D2ArmorPicker can do.</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <mat-accordion>\n      <mat-expansion-panel class=\"mat-elevation-z11\">\n        <mat-expansion-panel-header>\n          <mat-panel-title> Stat Selection </mat-panel-title>\n          <mat-panel-description> The heart of this tool. </mat-panel-description>\n        </mat-expansion-panel-header>\n        <p>\n          First, you are able to select the stats you want. The tool will automatically parse all\n          your armor (including your vault and your postmaster), and then show you which stat\n          selections are even possible with your current gear. The tool also shows you all possible\n          loadouts with three or four stats at 100!\n          <img class=\"image-example\" src=\"assets/info/statselection.png\" />\n          <br />\n          <br />\n          There are also additional settings. You can add stasis fragments and negative and positive\n          stat mods to your builds. Also, you can select 0-waste builds (so only flat numbers).\n          D2ArmorPicker will also add stat mods to reduce wasted stats wherever possible!\n        </p>\n      </mat-expansion-panel>\n\n      <mat-expansion-panel class=\"mat-elevation-z11\">\n        <mat-expansion-panel-header>\n          <mat-panel-title> Result Display </mat-panel-title>\n          <mat-panel-description> What you will get from this tool. </mat-panel-description>\n        </mat-expansion-panel-header>\n        <p>\n          D2ArmorPicker will show you a table with many results. You can sort and filter it, and\n          then you click on one row to see which items are needed for your desired stats.\n          <img class=\"image-example\" src=\"assets/resultOverviewWithFlex.png\" />\n          <br />\n          <br />\n          The page will also give you a detailed description of what you have to do in order to get\n          to your desired build. The following screenshot shows one of the more detailed\n          descriptions:\n          <img class=\"image-example\" src=\"assets/info/whattodonow.png\" />\n        </p>\n      </mat-expansion-panel>\n\n      <mat-expansion-panel class=\"mat-elevation-z11\">\n        <mat-expansion-panel-header>\n          <mat-panel-title> Armor Clustering </mat-panel-title>\n          <mat-panel-description>\n            For the time when your vault is overflowing.\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n        <div>\n          Since version 2.0.14, D2ArmorPicker has an armor clustering feature. This means that it\n          takes all your armor and groups it in 25 groups, where all items in one group has very\n          similar stats. This can help you to clear out your vault, especially from duplicated armor\n          rolls.\n          <img class=\"image-example\" src=\"assets/info/armorClustering.png\" />\n          <br />\n          <br />\n          Take Cluster 1, for example. I copy the DIM-Query, enter it into DIM and see the following\n          results:\n          <div\n            class=\"armor-image-container\"\n            [style.display]=\"'flex'\"\n            [style.flex-direction]=\"'row'\"\n            [style.gap]=\"'10px'\">\n            <img src=\"assets/info/cluster-example/img.png\" />\n            <img src=\"assets/info/cluster-example/img_1.png\" />\n            <img src=\"assets/info/cluster-example/img_2.png\" />\n          </div>\n        </div>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </mat-card-content>\n</mat-card>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthenticatedGuard {\n  constructor(\n    public auth: AuthService,\n    public router: Router\n  ) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate([\"login\"]);\n      return false;\n    }\n    return true;\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class NotAuthenticatedGuard {\n  constructor(\n    public auth: AuthService,\n    public router: Router\n  ) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.auth.isAuthenticated()) {\n      this.router.navigate([\"/\"]);\n      return false;\n    }\n    return true;\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { ArmorPerkOrSlot, ArmorStat } from \"./enum/armor-stat\";\nimport { ModOrAbility } from \"./enum/modOrAbility\";\nimport { EnumDictionary } from \"./types/EnumDictionary\";\nimport { MAXIMUM_STAT_MOD_AMOUNT } from \"./constants\";\nimport { ArmorSlot } from \"./enum/armor-slot\";\nimport { ModifierType } from \"./enum/modifierType\";\nimport { ModOptimizationStrategy } from \"./enum/mod-optimization-strategy\";\nimport { DestinyClass } from \"bungie-api-ts/destiny2/interfaces\";\n\nexport function getDefaultStatDict(\n  value: number\n): EnumDictionary<ArmorStat, FixableSelection<number>> {\n  return {\n    [ArmorStat.Mobility]: { fixed: false, value: value },\n    [ArmorStat.Resilience]: { fixed: false, value: value },\n    [ArmorStat.Recovery]: { fixed: false, value: value },\n    [ArmorStat.Discipline]: { fixed: false, value: value },\n    [ArmorStat.Intellect]: { fixed: false, value: value },\n    [ArmorStat.Strength]: { fixed: false, value: value },\n  };\n}\n\nexport interface FixableSelection<T> {\n  value: T;\n  fixed: boolean;\n}\n\nexport class BuildConfiguration {\n  characterClass: DestinyClass = DestinyClass.Unknown;\n\n  // Add constant +1 strength\n  addConstent1Resilience = false;\n\n  assumeClassItemIsArtifice = false;\n  assumeEveryLegendaryIsArtifice = false;\n  assumeEveryExoticIsArtifice = false;\n\n  // contains a list of item instances IDs that shall not be used in builds\n  disabledItems: string[] = [];\n\n  // TODO: convert minimumStatTier -> minimumStatTiers for old configs\n  minimumStatTiers: EnumDictionary<ArmorStat, FixableSelection<number>> = {\n    [ArmorStat.Mobility]: { fixed: false, value: 0 },\n    [ArmorStat.Resilience]: { fixed: false, value: 0 },\n    [ArmorStat.Recovery]: { fixed: false, value: 0 },\n    [ArmorStat.Discipline]: { fixed: false, value: 0 },\n    [ArmorStat.Intellect]: { fixed: false, value: 0 },\n    [ArmorStat.Strength]: { fixed: false, value: 0 },\n  };\n  maximumStatMods: number = 5; // TODO: remove\n\n  // if set, then we can use the exact stats like 6x69. It will be stored as \"fixed 6.9\" in minimumStatTiers\n  allowExactStats = false;\n\n  // Fixable, BUT the bool is not yet used. Maybe in a future update.\n  maximumModSlots: EnumDictionary<ArmorSlot, FixableSelection<number>> = {\n    [ArmorSlot.ArmorSlotHelmet]: { fixed: false, value: 5 },\n    [ArmorSlot.ArmorSlotGauntlet]: { fixed: false, value: 5 },\n    [ArmorSlot.ArmorSlotChest]: { fixed: false, value: 5 },\n    [ArmorSlot.ArmorSlotLegs]: { fixed: false, value: 5 },\n    [ArmorSlot.ArmorSlotClass]: { fixed: false, value: 5 },\n    [ArmorSlot.ArmorSlotNone]: { fixed: false, value: 5 },\n  };\n\n  putArtificeMods = true;\n  useFotlArmor = true;\n  allowBlueArmorPieces = true;\n  ignoreSunsetArmor = false;\n  includeVendorRolls = false;\n  includeCollectionRolls = false;\n  assumeLegendariesMasterworked = true;\n  assumeExoticsMasterworked = true;\n  assumeClassItemMasterworked = true;\n  onlyUseMasterworkedExotics = false;\n  onlyUseMasterworkedLegendaries = false;\n  modOptimizationStrategy: ModOptimizationStrategy = ModOptimizationStrategy.None;\n  limitParsedResults = true; // Limits the amount of results that are parsed. This looses some results, but solves memory issues\n  tryLimitWastedStats = false;\n  onlyShowResultsWithNoWastedStats = false;\n  showWastedStatsColumn = false;\n  showPotentialTierColumn = false;\n\n  selectedModElement: ModifierType = ModifierType.Stasis;\n  enabledMods: ModOrAbility[] = [];\n  selectedExotics: number[] = [];\n  // mainly for the exotic class item\n  ignoreExistingExoticArtificeSlots = false;\n\n  armorPerks: EnumDictionary<ArmorSlot, FixableSelection<ArmorPerkOrSlot>> = {\n    [ArmorSlot.ArmorSlotHelmet]: { fixed: true, value: ArmorPerkOrSlot.None },\n    [ArmorSlot.ArmorSlotGauntlet]: { fixed: true, value: ArmorPerkOrSlot.None },\n    [ArmorSlot.ArmorSlotChest]: { fixed: true, value: ArmorPerkOrSlot.None },\n    [ArmorSlot.ArmorSlotLegs]: { fixed: true, value: ArmorPerkOrSlot.None },\n    [ArmorSlot.ArmorSlotClass]: { fixed: true, value: ArmorPerkOrSlot.None },\n    [ArmorSlot.ArmorSlotNone]: { fixed: true, value: ArmorPerkOrSlot.None },\n  };\n\n  static buildEmptyConfiguration(): BuildConfiguration {\n    return {\n      ignoreExistingExoticArtificeSlots: false,\n      allowExactStats: false,\n      enabledMods: [],\n      disabledItems: [],\n      addConstent1Resilience: false,\n      assumeEveryLegendaryIsArtifice: false,\n      assumeEveryExoticIsArtifice: false,\n      assumeClassItemIsArtifice: false,\n      putArtificeMods: true,\n      useFotlArmor: false,\n      maximumStatMods: MAXIMUM_STAT_MOD_AMOUNT,\n      onlyUseMasterworkedExotics: false,\n      onlyUseMasterworkedLegendaries: false,\n      ignoreSunsetArmor: false,\n      includeCollectionRolls: false,\n      includeVendorRolls: false,\n      allowBlueArmorPieces: true,\n      assumeLegendariesMasterworked: true,\n      assumeExoticsMasterworked: true,\n      assumeClassItemMasterworked: true,\n      limitParsedResults: true,\n      modOptimizationStrategy: ModOptimizationStrategy.None,\n      tryLimitWastedStats: false,\n      onlyShowResultsWithNoWastedStats: false,\n      showWastedStatsColumn: false,\n      showPotentialTierColumn: false,\n      characterClass: DestinyClass.Unknown,\n      selectedModElement: ModifierType.Prismatic,\n      selectedExotics: [],\n      maximumModSlots: {\n        [ArmorSlot.ArmorSlotHelmet]: { fixed: false, value: 5 },\n        [ArmorSlot.ArmorSlotGauntlet]: { fixed: false, value: 5 },\n        [ArmorSlot.ArmorSlotChest]: { fixed: false, value: 5 },\n        [ArmorSlot.ArmorSlotLegs]: { fixed: false, value: 5 },\n        [ArmorSlot.ArmorSlotClass]: { fixed: false, value: 5 },\n        [ArmorSlot.ArmorSlotNone]: { fixed: false, value: 5 },\n      },\n      armorPerks: {\n        [ArmorSlot.ArmorSlotHelmet]: { fixed: true, value: ArmorPerkOrSlot.None },\n        [ArmorSlot.ArmorSlotGauntlet]: { fixed: true, value: ArmorPerkOrSlot.None },\n        [ArmorSlot.ArmorSlotChest]: { fixed: true, value: ArmorPerkOrSlot.None },\n        [ArmorSlot.ArmorSlotLegs]: { fixed: true, value: ArmorPerkOrSlot.None },\n        [ArmorSlot.ArmorSlotClass]: { fixed: true, value: ArmorPerkOrSlot.None },\n        [ArmorSlot.ArmorSlotNone]: { fixed: true, value: ArmorPerkOrSlot.None },\n      },\n      minimumStatTiers: getDefaultStatDict(0),\n    };\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { ArmorSlot } from \"../enum/armor-slot\";\nimport { IDisplayManifestArmor, IManifestArmor } from \"./IManifestArmor\";\n\nexport interface ITimestampedEntry {\n  created_at: number;\n  updated_at: number;\n}\n\nexport enum InventoryArmorSource {\n  Inventory = 0,\n  Collections = 1,\n  Vendor = 2,\n}\n\nexport interface IDestinyArmor {\n  id: number;\n  hash: number;\n  slot: ArmorSlot;\n  masterworked: boolean;\n\n  mobility: number;\n  resilience: number;\n  recovery: number;\n  discipline: number;\n  intellect: number;\n  strength: number;\n\n  source: InventoryArmorSource;\n}\n\nexport interface IDisplayInventoryArmor extends IDisplayManifestArmor, IDestinyArmor {\n  itemInstanceId: string;\n  energyLevel: number;\n}\n\nexport interface IInventoryArmor\n  extends IDisplayInventoryArmor,\n    IManifestArmor,\n    IDestinyArmor,\n    ITimestampedEntry {\n  mayBeBugged: boolean; // if there was an error in the parsing\n\n  // Note: this will be empty for vendor items\n  statPlugHashes?: (number | undefined)[];\n}\n\nexport function createArmorItem(\n  manifestItem: IManifestArmor,\n  itemInstanceId: string,\n  source: InventoryArmorSource\n): IInventoryArmor {\n  if (!manifestItem) throw new Error(\"Missing manifest item\");\n\n  const item: IInventoryArmor = Object.assign(\n    {\n      id: -1,\n      itemInstanceId,\n      mayBeBugged: false,\n      masterworked: false,\n      energyLevel: 0,\n      mobility: 0,\n      resilience: 0,\n      recovery: 0,\n      discipline: 0,\n      intellect: 0,\n      strength: 0,\n      source,\n      created_at: Date.now(),\n      updated_at: Date.now(),\n    },\n    manifestItem\n  );\n  (item as any).id = undefined;\n\n  // HALLOWEEN MASKS\n  if (\n    manifestItem.hash == 2545426109 ||\n    manifestItem.hash == 199733460 ||\n    manifestItem.hash == 3224066584\n  ) {\n    item.slot = ArmorSlot.ArmorSlotHelmet;\n  }\n\n  return item;\n}\n\n// This will mutate the incoming armor item to add the relevant stats\n// plugHashes is received as a simple array of hashes,\n// as the data is in a different shape for instances vs manifest items\nexport function applyInvestmentStats(\n  r: IInventoryArmor,\n  investmentStats: { [id: number]: number }\n) {\n  r.mobility = investmentStats[2996146975];\n  r.resilience = investmentStats[392767087];\n  r.recovery = investmentStats[1943323491];\n  r.discipline = investmentStats[1735777505];\n  r.intellect = investmentStats[144602215];\n  r.strength = investmentStats[4244567218];\n}\n\n// Returns true if the items are effectively equal in stats\nexport function isEqualItem(a: IDestinyArmor, b: IDestinyArmor): boolean {\n  return (\n    a.slot === b.slot &&\n    a.hash === b.hash &&\n    a.mobility === b.mobility &&\n    a.resilience === b.resilience &&\n    a.recovery === b.recovery &&\n    a.discipline === b.discipline &&\n    a.intellect === b.intellect &&\n    a.strength === b.strength\n  );\n}\n\nexport function totalStats(a: IDestinyArmor): number {\n  return a.mobility + a.resilience + a.recovery + a.discipline + a.intellect + a.strength;\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { AuthService } from \"./auth.service\";\nimport { Database } from \"../data/database\";\nimport { IManifestArmor } from \"../data/types/IManifestArmor\";\nimport { environment } from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DatabaseService extends Database {\n  constructor(private auth: AuthService) {\n    super();\n    this.version(this.verno).upgrade(async (tx) => {\n      this.auth.clearManifestInfo();\n    });\n\n    this.auth.logoutEvent.subscribe(async (k) => {\n      await this.clearDatabase();\n    });\n  }\n\n  private initialize() {\n    this.open();\n    this.auth.clearManifestInfo();\n  }\n\n  async writeManifestArmor(items: IManifestArmor[], version: string) {\n    await this.manifestArmor.clear();\n    await this.manifestArmor.bulkPut(items);\n    localStorage.setItem(\"LastManifestUpdate\", Date.now().toString());\n    localStorage.setItem(\"last-manifest-db-name\", this.manifestArmor.db.name);\n    localStorage.setItem(\"last-manifest-revision\", environment.revision);\n    localStorage.setItem(\"last-manifest-version\", version);\n  }\n\n  private async clearDatabase() {\n    localStorage.removeItem(\"LastManifestUpdate\");\n    localStorage.removeItem(\"LastArmorUpdate\");\n    localStorage.removeItem(\"last-manifest-revision\");\n    localStorage.removeItem(\"last-manifest-db-name\");\n    await this.inventoryArmor.clear();\n  }\n\n  async resetDatabase(initialize = true) {\n    localStorage.removeItem(\"LastManifestUpdate\");\n    localStorage.removeItem(\"last-manifest-revision\");\n    localStorage.removeItem(\"last-manifest-db-name\");\n    localStorage.removeItem(\"vendor-next-refresh-time\");\n\n    localStorage.removeItem(\"LastArmorUpdate\");\n    localStorage.removeItem(\"last-armor-db-name\");\n\n    await this.delete();\n    if (initialize) this.initialize();\n  }\n\n  /**\n   * Returns the information about the current cached manifest version,\n   * if it exists and is still valid.\n   */\n  lastManifestUpdate(): { updatedAt: number; version: string } | undefined {\n    const lastManifestUpdate = localStorage.getItem(\"LastManifestUpdate\");\n    const lastManifestVersion = localStorage.getItem(\"last-manifest-version\");\n\n    const lastManifestRevision = localStorage.getItem(\"last-manifest-revision\");\n    const lastManifestDbName = localStorage.getItem(\"last-manifest-db-name\");\n\n    if (\n      !lastManifestUpdate ||\n      !lastManifestRevision ||\n      !lastManifestDbName ||\n      !lastManifestVersion\n    ) {\n      return;\n    }\n\n    if (localStorage.getItem(\"last-manifest-revision\") !== environment.revision) {\n      return;\n    }\n\n    if (lastManifestDbName !== this.inventoryArmor.db.name) {\n      return;\n    }\n\n    const lastUpdate = parseInt(lastManifestUpdate);\n\n    return {\n      updatedAt: lastUpdate,\n      version: lastManifestVersion,\n    };\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { BuildConfiguration } from \"../data/buildConfiguration\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { ModOrAbility } from \"../data/enum/modOrAbility\";\nimport * as lzutf8 from \"lzutf8\";\nimport { CompressionOptions, DecompressionOptions } from \"lzutf8\";\nimport { environment } from \"../../environments/environment\";\nimport { EnumDictionary } from \"../data/types/EnumDictionary\";\nimport { ArmorStat } from \"../data/enum/armor-stat\";\nimport { ArmorSlot } from \"../data/enum/armor-slot\";\nimport { ModInformation } from \"../data/ModInformation\";\nimport { isEqual as _isEqual } from \"lodash\";\n\nexport interface StoredConfiguration {\n  version: string;\n  name: string;\n  configuration: BuildConfiguration;\n}\n\nconst lzCompOptions = {\n  outputEncoding: \"Base64\",\n} as CompressionOptions;\n\nconst lzDecompOptions = {\n  inputEncoding: \"Base64\",\n  outputEncoding: \"String\",\n} as DecompressionOptions;\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ConfigurationService {\n  private __configuration: BuildConfiguration;\n  private __LastConfiguration: BuildConfiguration;\n\n  get readonlyConfigurationSnapshot() {\n    return Object.assign(this.__configuration, {});\n  }\n\n  private _configuration: BehaviorSubject<BuildConfiguration>;\n  public readonly configuration: Observable<BuildConfiguration>;\n\n  private _storedConfigurations: BehaviorSubject<StoredConfiguration[]>;\n  public readonly storedConfigurations: Observable<StoredConfiguration[]>;\n\n  constructor() {\n    this.__configuration = this.loadCurrentConfiguration();\n    this.__LastConfiguration = this.loadCurrentConfiguration();\n\n    this._configuration = new BehaviorSubject(this.__configuration);\n    this.configuration = this._configuration.asObservable();\n\n    this._storedConfigurations = new BehaviorSubject(this.listSavedConfigurations());\n    this.storedConfigurations = this._storedConfigurations.asObservable();\n  }\n\n  modifyConfiguration(cb: (configuration: BuildConfiguration) => void) {\n    cb(this.__configuration);\n    if (_isEqual(this.__configuration, this.__LastConfiguration)) return;\n    this.__LastConfiguration = structuredClone(this.__configuration);\n    this.saveCurrentConfiguration(this.__configuration);\n  }\n\n  saveConfiguration(name: string, config: BuildConfiguration) {\n    let list = this.listSavedConfigurations();\n    let c = this.listSavedConfigurations()\n      .map((value, index): [StoredConfiguration, number] => [value, index])\n      .filter((c) => c[0].name == name)[0];\n    if (!!c) {\n      list.splice(c[1], 1);\n    }\n    list.push({\n      configuration: config,\n      name: name,\n      version: environment.version,\n    });\n    list = list.sort((a, b) => {\n      if (a.name < b.name) return -1;\n      else if (a.name > b.name) return 1;\n      return 0;\n    });\n\n    const compressed = lzutf8.compress(JSON.stringify(list), lzCompOptions);\n    localStorage.setItem(\"storedConfigurations\", compressed);\n    this._storedConfigurations.next(list);\n  }\n\n  doesSavedConfigurationExist(name: string) {\n    return this.listSavedConfigurations().filter((c) => c.name == name).length > 0;\n  }\n\n  loadSavedConfiguration(name: string): boolean {\n    let c = this.listSavedConfigurations().filter((c) => c.name == name)[0];\n    if (!c) return false;\n    this.saveCurrentConfiguration(c.configuration);\n    return true;\n  }\n\n  checkAndFixOldSavedConfigurations(c: StoredConfiguration) {\n    c.configuration = Object.assign(BuildConfiguration.buildEmptyConfiguration(), c.configuration);\n    if (c.configuration.hasOwnProperty(\"minimumStatTier\")) {\n      let tiers = (c.configuration as any).minimumStatTier as EnumDictionary<ArmorStat, number>;\n      c.configuration.minimumStatTiers[ArmorStat.Mobility].value = tiers[ArmorStat.Mobility];\n      c.configuration.minimumStatTiers[ArmorStat.Resilience].value = tiers[ArmorStat.Resilience];\n      c.configuration.minimumStatTiers[ArmorStat.Recovery].value = tiers[ArmorStat.Recovery];\n      c.configuration.minimumStatTiers[ArmorStat.Discipline].value = tiers[ArmorStat.Discipline];\n      c.configuration.minimumStatTiers[ArmorStat.Intellect].value = tiers[ArmorStat.Intellect];\n      c.configuration.minimumStatTiers[ArmorStat.Strength].value = tiers[ArmorStat.Strength];\n      delete (c.configuration as any).minimumStatTier;\n    }\n\n    if (c.configuration.hasOwnProperty(\"selectedExoticHash\")) {\n      c.configuration.selectedExotics = [(c.configuration as any).selectedExoticHash];\n      delete (c.configuration as any).selectedExoticHash;\n    }\n    if (c.configuration.hasOwnProperty(\"maximumStatMods\")) {\n      let maxMods = (c.configuration as any).maximumStatMods as number;\n      for (let n = maxMods; n < 5; n++)\n        c.configuration.maximumModSlots[(1 + n) as ArmorSlot].value = 0;\n      delete (c.configuration as any).maximumStatMods;\n    }\n\n    // remove mods that no longer exist\n    c.configuration.enabledMods = c.configuration.enabledMods.filter((v) => !!ModInformation[v]);\n\n    // Always reset risky mods on reload\n    c.configuration.limitParsedResults = true;\n    c.configuration.addConstent1Resilience = false;\n  }\n\n  listSavedConfigurations(): StoredConfiguration[] {\n    let item;\n    try {\n      item = localStorage.getItem(\"storedConfigurations\") || \"[]\";\n      if (item.substr(0, 1) != \"[\") item = lzutf8.decompress(item, lzDecompOptions);\n    } catch (e) {\n      item = [];\n    }\n\n    let result = (JSON.parse(item) || []) as StoredConfiguration[];\n    result = result.sort((a, b) => {\n      if (a.name < b.name) return -1;\n      else if (a.name > b.name) return 1;\n      return 0;\n    });\n    result.forEach((c) => this.checkAndFixOldSavedConfigurations(c));\n    return result;\n  }\n\n  deleteStoredConfiguration(name: string) {\n    let list = this.listSavedConfigurations();\n    let c = this.listSavedConfigurations()\n      .map((value, index): [StoredConfiguration, number] => [value, index])\n      .filter((c) => c[0].name == name)[0];\n    if (!!c) {\n      list.splice(c[1], 1);\n    }\n    localStorage.setItem(\n      \"storedConfigurations\",\n      lzutf8.compress(JSON.stringify(list), lzCompOptions)\n    );\n    this._storedConfigurations.next(list);\n  }\n\n  saveCurrentConfigurationToName(name: string) {\n    this.saveConfiguration(name, this.__configuration);\n  }\n\n  saveCurrentConfiguration(configuration: BuildConfiguration) {\n    console.debug(\"Writing configuration\", { configuration: configuration });\n    // deep copy it\n    this.__configuration = Object.assign(\n      BuildConfiguration.buildEmptyConfiguration(),\n      configuration\n    );\n    this.__configuration.enabledMods = ([] as ModOrAbility[]).concat(\n      this.__configuration.enabledMods\n    );\n    this.__configuration.minimumStatTiers = Object.assign(\n      {},\n      this.__configuration.minimumStatTiers\n    );\n\n    const compressed = lzutf8.compress(JSON.stringify(this.__configuration), lzCompOptions);\n    localStorage.setItem(\"currentConfig\", compressed);\n    this._configuration.next(Object.assign({}, this.__configuration));\n  }\n\n  loadCurrentConfiguration() {\n    let config;\n    try {\n      config = localStorage.getItem(\"currentConfig\") || \"{}\";\n      if (config.substr(0, 1) != \"{\") config = lzutf8.decompress(config, lzDecompOptions);\n    } catch (e) {\n      config = {};\n    }\n\n    var dummy: StoredConfiguration = {\n      name: \"dummy\",\n      version: \"1\",\n      configuration: JSON.parse(config),\n    };\n    this.checkAndFixOldSavedConfigurations(dummy);\n    return dummy.configuration;\n  }\n\n  getCurrentConfigBase64Compressed(): string {\n    let config = localStorage.getItem(\"currentConfig\") || \"{}\";\n    if (config.substr(0, 1) == \"{\") config = lzutf8.compress(config, { outputEncoding: \"Base64\" });\n    return config;\n  }\n\n  getAllStoredConfigurationsBase64Compressed(): string {\n    let item = localStorage.getItem(\"storedConfigurations\") || \"[]\";\n    if (item.substr(0, 1) == \"[\") item = lzutf8.compress(item, { outputEncoding: \"Base64\" });\n    return item;\n  }\n\n  getStoredConfigurationBase64Compressed(name: string): string {\n    let c = this.listSavedConfigurations().filter((c) => c.name == name)[0];\n    if (!c) return \"\";\n    return lzutf8.compress(JSON.stringify(c), { outputEncoding: \"Base64\" });\n  }\n\n  resetCurrentConfiguration() {\n    this.saveCurrentConfiguration(BuildConfiguration.buildEmptyConfiguration());\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClientConfig } from \"bungie-api-ts/destiny2\";\nimport { AuthService } from \"./auth.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../environments/environment\";\nimport { StatusProviderService } from \"./status-provider.service\";\nimport { retry } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HttpClientService {\n  constructor(\n    private authService: AuthService,\n    private http: HttpClient,\n    private status: StatusProviderService\n  ) {}\n\n  async $httpWithoutBearerToken(config: HttpClientConfig) {\n    return this.$http(config, true, false, 2);\n  }\n  async $httpWithoutApiKey(config: HttpClientConfig) {\n    return this.$http(config, false, false, 2);\n  }\n\n  async $httpPost(config: HttpClientConfig) {\n    return this.http\n      .post<any>(config.url, config.body, {\n        params: config.params,\n        headers: {\n          \"X-API-Key\": environment.apiKey,\n          Authorization: \"Bearer \" + this.authService.accessToken,\n        },\n      })\n      .pipe(retry(2))\n      .toPromise()\n      .catch(async (err) => {\n        console.error(err);\n      });\n  }\n\n  async $http(config: HttpClientConfig, apiKey = true, bearerToken = true, retryCount = 2) {\n    let options = {\n      params: config.params,\n      headers: {} as any,\n    };\n    if (apiKey) options.headers[\"X-API-Key\"] = environment.apiKey;\n\n    if (bearerToken) options.headers[\"Authorization\"] = \"Bearer \" + this.authService.accessToken;\n\n    return this.http\n      .get<any>(config.url, options)\n      .pipe(retry(retryCount))\n      .toPromise()\n      .then((res) => {\n        // Clear API error, if it was set\n        this.status.clearApiError();\n        return res;\n      })\n      .catch(async (err) => {\n        console.error(err);\n        if (environment.offlineMode) {\n          console.debug(\"Offline mode, ignoring API error\");\n          return;\n        }\n        if (err.error?.ErrorStatus == \"SystemDisabled\") {\n          console.info(\"System is disabled. Revoking auth, must re-login\");\n          this.status.setApiError();\n        }\n        // if error 500, log out\n        else if (err.status == 500) {\n          console.info(\"Auth Error, probably expired token\");\n          this.status.setAuthError();\n          this.authService.logout();\n        }\n        if (err.ErrorStatus != \"Internal Server Error\") {\n          console.info(\"API-Error\");\n          //this.status.setApiError();\n        }\n      });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { DestinyComponentType, getProfile, DestinyClass } from \"bungie-api-ts/destiny2\";\nimport { AuthService } from \"./auth.service\";\nimport { GroupUserInfoCard } from \"bungie-api-ts/groupv2\";\nimport { getMembershipDataForCurrentUser } from \"bungie-api-ts/user\";\nimport { HttpClientService } from \"./http-client.service\";\nimport { StatusProviderService } from \"./status-provider.service\";\nimport { H } from \"highlight.run\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MembershipService {\n  constructor(\n    private http: HttpClientService,\n    private status: StatusProviderService,\n    private auth: AuthService\n  ) {\n    this.auth.logoutEvent.subscribe((k) => this.clearCachedData());\n  }\n\n  private clearCachedData() {\n    localStorage.removeItem(\"auth-membershipInfo\");\n    localStorage.removeItem(\"auth-membershipInfo-date\");\n  }\n\n  async getMembershipDataForCurrentUser(): Promise<GroupUserInfoCard> {\n    var membershipData: GroupUserInfoCard = JSON.parse(\n      localStorage.getItem(\"auth-membershipInfo\") || \"null\"\n    );\n    var membershipDataAge = JSON.parse(localStorage.getItem(\"auth-membershipInfo-date\") || \"0\");\n    if (membershipData && Date.now() - membershipDataAge < 1000 * 60 * 60 * 24) {\n      H.identify(`I${membershipData.membershipId}T${membershipData.membershipType}`, {\n        highlightDisplayName: `${membershipData.displayName}(I${membershipData.membershipId}T${membershipData.membershipType})`,\n        avatar: `https://bungie.net${membershipData.iconPath}`,\n        bungieGlobalDisplayName: membershipData.bungieGlobalDisplayName,\n        bungieGlobalDisplayNameCode: membershipData.bungieGlobalDisplayNameCode ?? -1,\n        membershipType: membershipData.membershipType,\n        applicableMembershipTypes: JSON.stringify(membershipData.applicableMembershipTypes),\n      });\n      return membershipData;\n    }\n\n    console.info(\"BungieApiService\", \"getMembershipDataForCurrentUser\");\n    let response = await getMembershipDataForCurrentUser((d) => this.http.$http(d));\n    let memberships = response?.Response.destinyMemberships;\n    console.info(\"Memberships:\", memberships);\n    memberships = memberships.filter(\n      (m) => m.crossSaveOverride == 0 || m.crossSaveOverride == m.membershipType\n    );\n    console.info(\"Filtered Memberships:\", memberships);\n\n    let result = null;\n    if (memberships?.length == 1) {\n      // This guardian only has one account linked, so we can proceed as normal\n      result = memberships?.[0];\n    } else {\n      // This guardian has multiple accounts linked.\n      // Fetch the last login time for each account, and use the one that was most recently used.\n      let lastLoggedInProfileIndex: any = 0;\n      let lastPlayed = 0;\n      for (let id in memberships) {\n        const membership = memberships?.[id];\n        const profile = await getProfile((d) => this.http.$http(d), {\n          components: [DestinyComponentType.Profiles],\n          membershipType: membership.membershipType,\n          destinyMembershipId: membership.membershipId,\n        });\n        if (!!profile && profile.Response?.profile.data?.dateLastPlayed) {\n          let date = Date.parse(profile.Response?.profile.data?.dateLastPlayed);\n          if (date > lastPlayed) {\n            lastPlayed = date;\n            lastLoggedInProfileIndex = id;\n          }\n        }\n      }\n      console.info(\n        \"getMembershipDataForCurrentUser\",\n        \"Selected membership data for the last logged in membership.\"\n      );\n      result = memberships?.[lastLoggedInProfileIndex];\n    }\n    localStorage.setItem(\"auth-membershipInfo\", JSON.stringify(result));\n    localStorage.setItem(\"auth-membershipInfo-date\", JSON.stringify(Date.now()));\n    H.identify(`I${result.membershipId}T${result.membershipType}`, {\n      highlightDisplayName: `${result.displayName}(I${result.membershipId}T${result.membershipType})`,\n      avatar: `https://bungie.net${result.iconPath}`,\n      bungieGlobalDisplayName: result.bungieGlobalDisplayName,\n      bungieGlobalDisplayNameCode: result.bungieGlobalDisplayNameCode ?? -1,\n      membershipType: result.membershipType,\n      applicableMembershipTypes: JSON.stringify(result.applicableMembershipTypes),\n    });\n    return result;\n  }\n\n  async getCharacters() {\n    let destinyMembership = await this.getMembershipDataForCurrentUser();\n    if (!destinyMembership) {\n      if (!this.status.getStatus().apiError) this.status.setAuthError();\n      return [];\n    }\n    this.status.clearAuthError();\n    this.status.clearApiError();\n\n    const profile = await getProfile((d) => this.http.$http(d), {\n      components: [DestinyComponentType.Characters],\n      membershipType: destinyMembership.membershipType,\n      destinyMembershipId: destinyMembership.membershipId,\n    });\n\n    if (!!profile?.Response.characters.data) this.status.clearApiError();\n\n    return (\n      Object.values(profile?.Response.characters.data || {}).map((d) => {\n        return {\n          characterId: d.characterId,\n          clazz: d.classType as DestinyClass,\n          emblemUrl: d.emblemBackgroundPath,\n          lastPlayed: Date.parse(d.dateLastPlayed),\n        };\n      }) || []\n    );\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport {\n  DestinyComponentType,\n  DestinyInventoryItemDefinition,\n  DestinyItemType,\n  DestinyCollectibleState,\n  equipItem,\n  getDestinyManifest,\n  getDestinyManifestSlice,\n  getItem,\n  getProfile,\n  transferItem,\n  DestinyManifestSlice,\n  DestinyCollectiblesComponent,\n  DestinyItemInvestmentStatDefinition,\n} from \"bungie-api-ts/destiny2\";\nimport { DatabaseService } from \"./database.service\";\nimport { environment } from \"../../environments/environment\";\nimport { IManifestArmor } from \"../data/types/IManifestArmor\";\nimport {\n  IInventoryArmor,\n  InventoryArmorSource,\n  createArmorItem,\n  applyInvestmentStats,\n} from \"../data/types/IInventoryArmor\";\nimport { ArmorSlot } from \"../data/enum/armor-slot\";\nimport {\n  ArmorPerkOrSlot,\n  ArmorPerkSocketHashes,\n  MapAlternativeToArmorPerkOrSlot,\n} from \"../data/enum/armor-stat\";\nimport { ConfigurationService } from \"./configuration.service\";\nimport { IManifestCollectible } from \"../data/types/IManifestCollectible\";\nimport { MembershipService } from \"./membership.service\";\nimport { HttpClientService } from \"./http-client.service\";\nimport { IVendorInfo } from \"../data/types/IVendorInfo\";\nimport { StatusProviderService } from \"./status-provider.service\";\n\nfunction collectInvestmentStats(\n  r: IInventoryArmor,\n  itemInvestmentStats: DestinyItemInvestmentStatDefinition[],\n  plugHashes: (number | undefined)[],\n  mods: Record<string, IManifestArmor>\n) {\n  const investmentStats: { [id: number]: number } = {\n    2996146975: 0,\n    392767087: 0,\n    1943323491: 0,\n    1735777505: 0,\n    144602215: 0,\n    4244567218: 0,\n  };\n\n  // Intrinsics\n  for (let newStats of itemInvestmentStats) {\n    if (newStats.statTypeHash in investmentStats)\n      investmentStats[newStats.statTypeHash] += newStats.value;\n  }\n\n  if (r.slot != ArmorSlot.ArmorSlotClass) {\n    const plugs = [plugHashes[6], plugHashes[7], plugHashes[8], plugHashes[9]];\n    r.statPlugHashes = plugs;\n    var plm = plugs.map((k) => mods[k || \"\"]).filter((k) => k != null);\n    for (let entry of plm) {\n      for (let newStats of entry.investmentStats) {\n        if (newStats.statTypeHash in investmentStats)\n          investmentStats[newStats.statTypeHash] += newStats.value;\n      }\n    }\n  }\n\n  applyInvestmentStats(r, investmentStats);\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class BungieApiService {\n  config_assumeEveryLegendaryIsArtifice = false;\n\n  constructor(\n    private status: StatusProviderService,\n    private http: HttpClientService,\n    private db: DatabaseService,\n    private config: ConfigurationService,\n    private membership: MembershipService\n  ) {\n    this.config.configuration.subscribe(async (config) => {\n      this.config_assumeEveryLegendaryIsArtifice = config.assumeEveryLegendaryIsArtifice;\n    });\n  }\n\n  async transferItem(\n    itemInstanceId: string,\n    targetCharacter: string,\n    equip = false\n  ): Promise<boolean> {\n    let destinyMembership = await this.membership.getMembershipDataForCurrentUser();\n    if (!destinyMembership) {\n      if (!this.status.getStatus().apiError) this.status.setAuthError();\n      return false;\n    }\n    this.status.clearAuthError();\n    this.status.clearApiError();\n\n    let r1 = await getItem((d) => this.http.$http(d), {\n      membershipType: destinyMembership.membershipType,\n      destinyMembershipId: destinyMembership.membershipId,\n      itemInstanceId: itemInstanceId,\n      components: [DestinyComponentType.ItemCommonData],\n    });\n\n    let transferResult = false;\n\n    if (!r1) return false;\n    if (r1.Response.characterId != targetCharacter) {\n      if (r1.Response.item.data?.location != 2) {\n        await this.moveItemToVault(r1.Response.item.data?.itemInstanceId || \"\");\n        r1 = await getItem((d) => this.http.$http(d), {\n          membershipType: destinyMembership.membershipType,\n          destinyMembershipId: destinyMembership.membershipId,\n          itemInstanceId: itemInstanceId,\n          components: [DestinyComponentType.ItemCommonData],\n        });\n      }\n\n      const payload = {\n        characterId: targetCharacter,\n        membershipType: 3,\n        itemId: r1?.Response.item.data?.itemInstanceId || \"\",\n        itemReferenceHash: r1?.Response.item.data?.itemHash || 0,\n        stackSize: 1,\n        transferToVault: false,\n      };\n\n      transferResult = !!(await transferItem((d) => this.http.$httpPost(d), payload));\n    }\n    if (equip) {\n      let equipPayload = {\n        characterId: targetCharacter,\n        membershipType: 3,\n        stackSize: 1,\n        itemId: r1?.Response.item.data?.itemInstanceId || \"\",\n        itemReferenceHash: r1?.Response.item.data?.itemHash || 0,\n      };\n      transferResult = !!(await equipItem((d) => this.http.$httpPost(d), equipPayload));\n    }\n\n    return transferResult;\n  }\n\n  async moveItemToVault(itemInstanceId: string) {\n    console.info(\"moveItemToVault\", itemInstanceId);\n    let destinyMembership = await this.membership.getMembershipDataForCurrentUser();\n    if (!destinyMembership) {\n      if (!this.status.getStatus().apiError) this.status.setAuthError();\n      return;\n    }\n    this.status.clearAuthError();\n    this.status.clearApiError();\n\n    const r1 = await getItem((d) => this.http.$http(d), {\n      membershipType: destinyMembership.membershipType,\n      destinyMembershipId: destinyMembership.membershipId,\n      itemInstanceId: itemInstanceId,\n      components: [DestinyComponentType.ItemCommonData],\n    });\n\n    const payload = {\n      characterId: r1?.Response.characterId || \"\",\n      membershipType: 3,\n      itemId: r1?.Response.item.data?.itemInstanceId || \"\",\n      itemReferenceHash: r1?.Response.item.data?.itemHash || 0,\n      stackSize: 1,\n      transferToVault: true,\n    };\n\n    await transferItem((d) => this.http.$httpPost(d), payload);\n  }\n\n  // Collect the list of unlocked exotic armor pieces\n  private async getUnlockedExoticArmor(\n    characterCollectibles: Record<string, DestinyCollectiblesComponent>\n  ): Promise<Set<number>> {\n    const manifestExoticArmorItemHashes = (await this.db.manifestCollectibles.toArray()).reduce(\n      (acc, cur) => {\n        acc[cur.hash] = cur.itemHash;\n        return acc;\n      },\n      {} as Record<number, number>\n    );\n\n    const itemHashes = Object.values(characterCollectibles)\n      .flatMap((char) => Object.entries(char.collectibles ?? {}))\n      .filter(([hash, { state }]) => {\n        return (\n          (state & DestinyCollectibleState.NotAcquired) === 0 &&\n          manifestExoticArmorItemHashes[parseInt(hash)]\n        );\n      })\n      .map(([hash, _]) => manifestExoticArmorItemHashes[parseInt(hash)]);\n\n    return new Set(itemHashes);\n  }\n\n  async updateArmorItems(force = false) {\n    if (environment.offlineMode) {\n      console.info(\"BungieApiService\", \"updateArmorItems\", \"offline mode, skipping\");\n      return;\n    }\n\n    if (!force && localStorage.getItem(\"LastArmorUpdate\"))\n      if (localStorage.getItem(\"last-armor-db-name\") == this.db.inventoryArmor.db.name)\n        if (\n          Date.now() - Number.parseInt(localStorage.getItem(\"LastArmorUpdate\") || \"0\") <\n          (1000 * 3600) / 2\n        )\n          return;\n    let destinyMembership = await this.membership.getMembershipDataForCurrentUser();\n    if (!destinyMembership) {\n      if (!this.status.getStatus().apiError) this.status.setAuthError();\n      return [];\n    }\n    this.status.clearAuthError();\n    this.status.clearApiError();\n\n    console.info(\"BungieApiService\", \"Requesting Profile\");\n    let profile = await getProfile((d) => this.http.$http(d), {\n      components: [\n        DestinyComponentType.CharacterEquipment,\n        DestinyComponentType.CharacterInventories,\n        DestinyComponentType.ProfileCurrencies,\n        DestinyComponentType.ProfileInventories,\n        DestinyComponentType.ItemStats,\n        DestinyComponentType.ItemInstances,\n        DestinyComponentType.ItemPerks,\n        DestinyComponentType.ItemSockets,\n        DestinyComponentType.ItemPlugStates,\n        DestinyComponentType.Collectibles,\n      ],\n      membershipType: destinyMembership.membershipType,\n      destinyMembershipId: destinyMembership.membershipId,\n    });\n\n    const unlockedExoticArmorItemHashes = await this.getUnlockedExoticArmor(\n      profile.Response.characterCollectibles.data ?? {}\n    );\n\n    let allItems = profile.Response.profileInventory.data?.items || [];\n    for (let charI in profile.Response.characterEquipment.data) {\n      let i = profile.Response.characterEquipment.data[charI].items;\n      allItems = allItems.concat(i);\n    }\n    for (let charI in profile.Response.characterInventories.data) {\n      let i = profile.Response.characterInventories.data[charI].items;\n      allItems = allItems.concat(i);\n    }\n\n    // get amount of materials\n    // 3853748946 enhancement core\n    // 4257549984 enhancement prism\n    // 4257549985 Ascendant Shard\n    // 3467984096 Exotic Cipher\n    var materials = allItems\n      .filter((k) => [3853748946, 4257549984, 4257549985, 3467984096].indexOf(k.itemHash!) > -1)\n      .reduce((previousValue, currentValue) => {\n        if (!(currentValue.itemHash.toString() in previousValue)) {\n          previousValue[currentValue.itemHash] = 0;\n        }\n        previousValue[currentValue.itemHash] += currentValue.quantity;\n        return previousValue;\n      }, {} as any);\n    let glimmerEntry =\n      profile.Response.profileCurrencies.data?.items.filter((k) => k.itemHash == 3159615086) || [];\n    if (glimmerEntry.length > 0) materials[\"3159615086\"] = glimmerEntry[0].quantity;\n    else materials[\"3159615086\"] = 0;\n    localStorage.setItem(\"stored-materials\", JSON.stringify(materials));\n\n    // Collect a list of all armor item hashes that we need to look up in the manifest\n    const idSet = new Set(allItems.map((d) => d.itemHash));\n    // Add all exotics owned by the player, as they can always be found from collections\n    unlockedExoticArmorItemHashes.forEach((id) => idSet.add(id));\n\n    // Do not search directly in the DB, as it is VERY slow.\n    let manifestArmor = await this.db.manifestArmor.toArray();\n    const cx = manifestArmor.filter((d) => idSet.has(d.hash));\n    const modsData = manifestArmor.filter((d) => d.itemType == 19);\n    let res = Object.fromEntries(cx.map((_) => [_.hash, _]));\n    let mods = Object.fromEntries(modsData.map((_) => [_.hash, _]));\n\n    let r = allItems\n      //.filter(d => ids.indexOf(d.itemHash) > -1)\n      .filter((d) => !!d.itemInstanceId)\n      .filter((d) => d.bucketHash !== 3284755031) // Filter out subclasses\n      .filter((d) => {\n        let statData = profile.Response.itemComponents.stats.data || {};\n        let stats = statData[d.itemInstanceId || \"\"]?.stats || {};\n        return !!stats[392767087];\n      })\n      .filter((d) => {\n        // remove sunset items\n        let instanceData = profile.Response.itemComponents.instances.data || {};\n        let instance = instanceData[d.itemInstanceId || \"\"] || {};\n        return !!instance.energy;\n      })\n      .map((d) => {\n        let instanceData = profile.Response.itemComponents.instances.data || {};\n        let instance = instanceData[d.itemInstanceId || \"\"] || {};\n\n        if (!res[d.itemHash]) {\n          console.warn(\"Missing manifest item for item hash\", d.itemHash);\n          return null;\n        }\n\n        let r = createArmorItem(\n          res[d.itemHash],\n          d.itemInstanceId || \"\",\n          InventoryArmorSource.Inventory\n        );\n        r.masterworked = !!instance.energy && instance.energy.energyCapacity == 10;\n        r.energyLevel = !!instance.energy ? instance.energy.energyCapacity : 0;\n        const sockets = profile.Response.itemComponents.sockets.data || {};\n        const socketsList =\n          sockets[d.itemInstanceId!]?.sockets.map((socket) => socket.plugHash) ?? [];\n        collectInvestmentStats(r, res[d.itemHash]?.investmentStats ?? [], socketsList, mods);\n\n        // Take a look if it really has the artifice perk\n        if (r.perk == ArmorPerkOrSlot.SlotArtifice) {\n          let statData = profile.Response.itemComponents.perks.data || {};\n          let perks = (statData[d.itemInstanceId || \"\"] || {})[\"perks\"] || [];\n          const hasPerk = perks.filter((p) => p.perkHash == 229248542).length > 0;\n          if (!hasPerk) r.perk = ArmorPerkOrSlot.None;\n        } else if (r.isExotic) {\n          // 720825311 is \"UNLOCKED exotic artifice slot\"\n          // 1656746282 is \"LOCKED exotic artifice slot\"\n          const hasPerk = socketsList.filter((d) => d == 720825311).length > 0;\n          if (hasPerk) {\n            r.perk = ArmorPerkOrSlot.SlotArtifice;\n          }\n        }\n\n        return r as IInventoryArmor;\n      })\n      .filter(Boolean) as IInventoryArmor[];\n\n    // Now add the collection rolls for exotics\n    const collectionRollItems = Array.from(unlockedExoticArmorItemHashes)\n      .map((exoticItemHash) => {\n        const manifestArmorItem = res[exoticItemHash];\n        if (!manifestArmorItem) {\n          console.error(\"Couldn't find manifest item for exotic\", exoticItemHash);\n          return null;\n        }\n\n        const collectionItem = createArmorItem(\n          manifestArmorItem,\n          `c${manifestArmorItem.hash}`,\n          InventoryArmorSource.Collections\n        );\n\n        collectInvestmentStats(\n          collectionItem,\n          manifestArmorItem.investmentStats,\n          manifestArmorItem.socketEntries.map((s) => s.singleInitialItemHash),\n          mods\n        );\n\n        return collectionItem;\n      })\n      .filter(Boolean) as IInventoryArmor[];\n\n    r = r.concat(collectionRollItems);\n    r = r.filter((k) => !k[\"statPlugHashes\"] || k[\"statPlugHashes\"][0] != null);\n\n    await this.updateDatabaseItems(r);\n\n    localStorage.setItem(\"LastArmorUpdate\", Date.now().toString());\n    localStorage.setItem(\"last-armor-db-name\", this.db.inventoryArmor.db.name);\n\n    this.status.clearApiError();\n    return r;\n  }\n\n  private async updateDatabaseItems(newItems: IInventoryArmor[]) {\n    await this.db.inventoryArmor.filter((d) => d.source == InventoryArmorSource.Inventory).delete();\n    await this.db.inventoryArmor\n      .filter((d) => d.source == InventoryArmorSource.Collections)\n      .delete();\n    const dbItems = await this.db.inventoryArmor.toArray();\n    // get the IDs of all items with no source\n    const ids_noSource = dbItems\n      .filter((d) => d.source == null || d.source == undefined)\n      .map((d) => d.id);\n    await this.db.inventoryArmor.bulkDelete(ids_noSource);\n\n    await this.db.inventoryArmor.bulkAdd(newItems);\n    return;\n  }\n  /*\n    // get all items from the database. This saves us from having to do a lot of slow (!) queries.\n    const dbItems = await this.db.inventoryArmor.toArray();\n\n    const newItemInstanceIds = new Set(newItems.map((d) => d.itemInstanceId));\n    // get the IDs of all items with no source\n    const ids_noSource = dbItems\n      .filter((d) => d.source == null || d.source == undefined)\n      .map((d) => d.id);\n    // get the IDs of all items that are not in the new inventory (and thus should be deleted)\n    const ids_deleted = dbItems\n      .filter((d) => !newItemInstanceIds.has(d.itemInstanceId))\n      .filter((d) => d.source != InventoryArmorSource.Vendor)\n      .map((d) => d.id);\n\n    // get the IDs that are in both, the db and the new inventory, and thus should be updated\n    let entries_existing = dbItems.filter((d) => newItemInstanceIds.has(d.itemInstanceId));\n    // now filter these that actually have changed\n    entries_existing = entries_existing.filter((d) => {\n      let c = newItems.find((k) => k.itemInstanceId == d.itemInstanceId);\n      if (!c) return false;\n      // if masterwork, energy, etc change, return true\n      if (c.masterworked != d.masterworked) return true;\n      if (c.energyLevel != d.energyLevel) return true;\n      if (c.perk != d.perk) return true;\n      return false;\n    });\n\n    // delete the entries\n    const idsToDelete = ids_noSource.concat(ids_deleted);\n    if (idsToDelete.length > 0) await this.db.inventoryArmor.bulkDelete(idsToDelete);\n\n    // update the entries\n    if (entries_existing.length > 0) {\n      await this.db.inventoryArmor.bulkUpdate(\n        entries_existing.map((d) => {\n          return {\n            key: d.id,\n            changes: {\n              masterworked: d.masterworked,\n              energyLevel: d.energyLevel,\n              perk: d.perk,\n              updated_at: Date.now(),\n            },\n          };\n        })\n      );\n    }\n\n    // add the entries\n    const entriesToAdd = newItems.filter(\n      (d) => !dbItems.find((k) => k.itemInstanceId == d.itemInstanceId)\n    );\n    if (entriesToAdd.length > 0) await this.db.inventoryArmor.bulkAdd(entriesToAdd);\n  }\n    */\n\n  private getArmorPerk(v: DestinyInventoryItemDefinition): ArmorPerkOrSlot {\n    // Guardian Games\n    if (\n      environment.featureFlags.enableGuardianGamesFeatures &&\n      (v.hash === 1013401891 || v.hash === 366019830 || v.hash == 537041732)\n    )\n      return ArmorPerkOrSlot.GuardianGamesClassItem;\n\n    const scks = v.sockets?.socketEntries ?? [];\n\n    // Is this necessary? the singleInitialItemHash is also being checked\n    if (scks.find((d) => d.reusablePlugSetHash == 1402)) return ArmorPerkOrSlot.SlotArtifice;\n    if (scks.find((d) => d.reusablePlugSetHash == 1403)) return ArmorPerkOrSlot.SlotArtifice;\n    if (scks.find((d) => d.reusablePlugSetHash == 1460)) return ArmorPerkOrSlot.SlotArtifice;\n\n    for (const socket of scks) {\n      let socketHash = socket.singleInitialItemHash;\n      if (!socketHash) continue;\n\n      // Map the socket hash to another perk, if necessary (mostly if the perk exists multiple times)\n      socketHash = MapAlternativeToArmorPerkOrSlot[socketHash] || socketHash;\n\n      // find the key of ArmorPerkSocketHashes that matches the socketHash\n      const slotType = Object.entries(ArmorPerkSocketHashes).find(\n        (kvpair) => kvpair[1] == socketHash\n      );\n      if (slotType) {\n        return parseInt(slotType[0]) as unknown as ArmorPerkOrSlot;\n      }\n    }\n\n    return ArmorPerkOrSlot.None;\n  }\n\n  private async updateVendorNames(\n    manifestTables: DestinyManifestSlice<\"DestinyVendorDefinition\"[]>\n  ) {\n    const vendors = manifestTables.DestinyVendorDefinition;\n\n    // get values\n    const vendorInfo: IVendorInfo[] = Object.values(vendors).map((v) => {\n      return { vendorId: v.hash, vendorName: v.displayProperties.name } as IVendorInfo;\n    });\n\n    await this.db.vendorNames.clear();\n    await this.db.vendorNames.bulkAdd(vendorInfo);\n  }\n\n  private async updateAbilities(\n    manifestTables: DestinyManifestSlice<\"DestinyInventoryItemDefinition\"[]>\n  ) {\n    const allAbilities = Object.values(manifestTables.DestinyInventoryItemDefinition).filter(\n      (item) => {\n        // e.g. \"hunter.arc.supers\", \"shared.arc.grenades\"\n        return item.plug?.plugCategoryIdentifier?.match(\n          /\\.(supers|grenades|class_abilities|melee|aspects|fragments)$/\n        );\n      }\n    );\n\n    localStorage.setItem(\"allAbilities\", JSON.stringify(allAbilities));\n  }\n\n  // Collect the data for exotic armor collectibles\n  // this allows us to map a collection entry hash to the associated armor inventory item hash\n  private async updateExoticCollectibles(\n    manifestTables: DestinyManifestSlice<\n      (\"DestinyCollectibleDefinition\" | \"DestinyInventoryItemDefinition\")[]\n    >\n  ) {\n    const exoticArmorCollectibles: IManifestCollectible[] = Object.entries(\n      manifestTables.DestinyCollectibleDefinition\n    )\n      .filter(([k, v]) => {\n        const item = manifestTables.DestinyInventoryItemDefinition[v.itemHash];\n        return item?.inventory?.tierTypeName == \"Exotic\" && item?.itemType == DestinyItemType.Armor;\n      })\n      .map(([k, v]) => {\n        return {\n          hash: parseInt(k),\n          itemHash: v.itemHash,\n        };\n      });\n\n    console.log(\"Storing\", exoticArmorCollectibles.length, \"exotic armor hashes\");\n    await this.db.manifestCollectibles.clear();\n    await this.db.manifestCollectibles.bulkPut(exoticArmorCollectibles);\n  }\n\n  async updateManifest(force = false) {\n    if (environment.offlineMode) {\n      console.info(\"BungieApiService\", \"updateManifest\", \"offline mode, skipping\");\n      return;\n    }\n\n    const manifestCache = this.db.lastManifestUpdate();\n\n    let destinyManifest = null;\n    if (manifestCache && !force) {\n      if (Date.now() - manifestCache.updatedAt > 1000 * 3600 * 0.25) {\n        destinyManifest = await getDestinyManifest((d) => this.http.$httpWithoutBearerToken(d));\n        const version = destinyManifest.Response.version;\n        if (manifestCache.version == version) {\n          console.info(\"bungieApiService - updateManifest\", \"Manifest is last version\");\n          return;\n        }\n      }\n\n      if (Date.now() - manifestCache.updatedAt < 1000 * 3600 * 24) {\n        console.info(\"bungieApiService - updateManifest\", \"Manifest is less than a day old\");\n        return;\n      }\n    }\n\n    if (destinyManifest == null) {\n      destinyManifest = await getDestinyManifest((d) => this.http.$httpWithoutBearerToken(d));\n    }\n\n    const manifestVersion = destinyManifest.Response.version;\n\n    const manifestTables = await getDestinyManifestSlice((d) => this.http.$httpWithoutApiKey(d), {\n      destinyManifest: destinyManifest.Response,\n      tableNames: [\n        \"DestinyInventoryItemDefinition\",\n        \"DestinyCollectibleDefinition\",\n        \"DestinyVendorDefinition\",\n      ],\n      language: \"en\",\n    });\n\n    console.debug(\n      \"DestinyInventoryItemDefinition from manifest\",\n      manifestTables.DestinyInventoryItemDefinition\n    );\n\n    await this.updateExoticCollectibles(manifestTables);\n    await this.updateVendorNames(manifestTables);\n    await this.updateAbilities(manifestTables);\n\n    // NOTE: This is also storing emotes, as these have itemType 19 (mods)\n    let entries = Object.entries(manifestTables.DestinyInventoryItemDefinition)\n      .filter(([k, v]) => {\n        if (v.itemType == 19) return true; // mods\n        if (v.itemType == 2) return true; // armor\n        if (v.inventory?.bucketTypeHash == 3448274439) return true; // helmets, required for festival masks\n        if (v.inventory?.bucketTypeHash == 3551918588) return true; // gauntlets\n        if (v.inventory?.bucketTypeHash == 14239492) return true; // chest\n        if (v.inventory?.bucketTypeHash == 20886954) return true; // leg\n        if (v.inventory?.bucketTypeHash == 1585787867 && v.inventory.tierType == 6) return true; // exotic class items\n        return false;\n      })\n      .map(([k, v]) => {\n        let slot = ArmorSlot.ArmorSlotNone;\n        if ((v.itemCategoryHashes?.indexOf(45) || -1) > -1) slot = ArmorSlot.ArmorSlotHelmet;\n        if ((v.itemCategoryHashes?.indexOf(46) || -1) > -1) slot = ArmorSlot.ArmorSlotGauntlet;\n        if ((v.itemCategoryHashes?.indexOf(47) || -1) > -1) slot = ArmorSlot.ArmorSlotChest;\n        if ((v.itemCategoryHashes?.indexOf(48) || -1) > -1) slot = ArmorSlot.ArmorSlotLegs;\n        if ((v.itemCategoryHashes?.indexOf(49) || -1) > -1) slot = ArmorSlot.ArmorSlotClass;\n\n        const isArmor2 =\n          (\n            v.sockets?.socketEntries.filter((d) => {\n              return (\n                d.socketTypeHash == 2512726577 || // general\n                d.socketTypeHash == 1108765570 || // arms\n                d.socketTypeHash == 959256494 || // chest\n                d.socketTypeHash == 2512726577 || // class\n                d.socketTypeHash == 3219375296 || // legs\n                d.socketTypeHash == 968742181 // head\n              );\n            }) || []\n          ).length > 0;\n\n        const isExotic = v.inventory?.tierTypeName == \"Exotic\" ? 1 : 0;\n        let exoticPerkHash = null;\n        if (isExotic) {\n          const perks =\n            v.sockets?.socketEntries\n              .filter((s) => s.socketTypeHash == 965959289)\n              .map((d) => d.singleInitialItemHash) || [];\n          exoticPerkHash = perks[0];\n        }\n\n        var sunsetPowerCaps = [\n          1862490585, // 1260\n          1862490584, // 1060\n          1862490584, // 1060\n          1862490583, // 1060\n          2471437758, // 1010\n        ];\n        // if every entry is sunset, so is this item.\n        var isSunset =\n          v.quality?.versions.filter((k) => sunsetPowerCaps.includes(k.powerCapHash)).length ==\n          v.quality?.versions.length;\n\n        return {\n          hash: v.hash,\n          icon: v.displayProperties.icon,\n          watermarkIcon: (v.quality?.displayVersionWatermarkIcons || [null])[0],\n          name: v.displayProperties.name,\n          description: v.displayProperties.description,\n          clazz: v.classType,\n          armor2: isArmor2,\n          slot: slot,\n          isExotic: isExotic,\n          isSunset: isSunset,\n          rarity: v.inventory?.tierType,\n          exoticPerkHash: exoticPerkHash,\n          itemType: v.itemType,\n          itemSubType: v.itemSubType,\n          investmentStats: v.investmentStats,\n          perk: this.getArmorPerk(v),\n          socketEntries: v.sockets?.socketEntries ?? [],\n        } as IManifestArmor;\n      });\n\n    await this.db.writeManifestArmor(entries, manifestVersion);\n\n    return manifestTables;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  getVendors,\n  getVendor,\n  DestinyComponentType,\n  DestinyItemType,\n  DestinyVendorItemState,\n} from \"bungie-api-ts/destiny2\";\nimport { MembershipService } from \"./membership.service\";\nimport { GroupUserInfoCard } from \"bungie-api-ts/groupv2\";\nimport { IManifestArmor } from \"../data/types/IManifestArmor\";\nimport {\n  IInventoryArmor,\n  InventoryArmorSource,\n  createArmorItem,\n  applyInvestmentStats,\n} from \"../data/types/IInventoryArmor\";\nimport { HttpClientService } from \"./http-client.service\";\nimport { DatabaseService } from \"./database.service\";\nimport { AuthService } from \"./auth.service\";\n\nconst VENDOR_NEXT_REFRESH_KEY = \"vendor-next-refresh-time\";\n\ninterface VendorWithParent {\n  vendorHash: string;\n  parentHash: string;\n}\n\nconst VendorsWithParent: VendorWithParent[] = [\n  { vendorHash: \"3751514131\", parentHash: \"2190858386\" }, // Strange Gear Offers, Tower Xûr\n];\n@Injectable({\n  providedIn: \"root\",\n})\nexport class VendorsService {\n  constructor(\n    private membership: MembershipService,\n    private http: HttpClientService,\n    private db: DatabaseService,\n    private auth: AuthService\n  ) {\n    this.auth.logoutEvent.subscribe((k) => this.clearCachedData());\n  }\n\n  private clearCachedData() {\n    localStorage.removeItem(VENDOR_NEXT_REFRESH_KEY);\n    this.db.inventoryArmor.where({ source: InventoryArmorSource.Vendor }).delete();\n  }\n\n  private async getVendorArmorItemsForCharacter(\n    manifestItems: Record<number, IManifestArmor>,\n    destinyMembership: GroupUserInfoCard,\n    characterId: string\n  ): Promise<{\n    items: IInventoryArmor[];\n    nextRefreshDate: number;\n  }> {\n    const vendorsResponse = await getVendors((d) => this.http.$http(d), {\n      components: [DestinyComponentType.Vendors, DestinyComponentType.VendorSales],\n      characterId,\n      membershipType: destinyMembership.membershipType,\n      destinyMembershipId: destinyMembership.membershipId,\n      filter: 0,\n    });\n\n    const allVendors = Object.entries(vendorsResponse.Response.vendors.data!);\n    const allVendorsMap = new Map(allVendors);\n\n    const enabledVendors = allVendors\n      .filter(([_vendorHash, vendor]) => vendor.enabled)\n      .filter(([vendorHash, vendor]) => {\n        const parent = VendorsWithParent.find((v) => v.vendorHash == vendorHash)?.parentHash;\n        if (parent == undefined) return true;\n        console.debug(\n          `${vendorHash} has parent ${parent} with value ${allVendorsMap.get(parent)?.enabled}`\n        );\n        return allVendorsMap.get(parent)?.enabled ?? false;\n      });\n    const vendors = enabledVendors\n      .filter(\n        ([vendorHash, vendor]) =>\n          Object.entries(vendorsResponse.Response.sales.data?.[vendorHash]?.saleItems ?? {}).find(\n            ([vendorItemIndex, saleItem]) => manifestItems[saleItem.itemHash]?.armor2 == true\n          ) !== undefined\n      )\n      .map(([vendorHash, vendor]) => ({\n        vendorHash: vendorHash,\n        refreshDate: new Date(vendor.nextRefreshDate).getTime(),\n      }));\n\n    const vendorArmorItems: IInventoryArmor[] = [];\n    const nextRefreshDate = Math.min(...vendors.map((v) => v.refreshDate));\n    const VendorPromises = vendors.map((vendor) => {\n      let vendorHash = vendor.vendorHash;\n      return getVendor((d) => this.http.$http(d), {\n        components: [DestinyComponentType.ItemStats],\n        characterId,\n        membershipType: destinyMembership.membershipType,\n        destinyMembershipId: destinyMembership.membershipId,\n        vendorHash: parseInt(vendorHash),\n      }).then(\n        (vendorResponse) => {\n          const saleItems = vendorsResponse.Response.sales.data?.[vendorHash]?.saleItems ?? {};\n          const vendorItemStats = vendorResponse.Response.itemComponents.stats.data ?? {};\n\n          for (const [vendorItemIndex, saleItem] of Object.entries(saleItems)) {\n            const manifestItem = manifestItems[saleItem.itemHash];\n            const itemStats = vendorItemStats[parseInt(vendorItemIndex)];\n\n            if (\n              (saleItem.augments & DestinyVendorItemState.Owned) ===\n              DestinyVendorItemState.Owned\n            ) {\n              continue;\n            }\n\n            if (!manifestItem || !itemStats) {\n              continue;\n            }\n\n            const statsOverride = Object.values(itemStats.stats).reduce(\n              (acc, { statHash, value }) => {\n                acc[statHash] = value;\n                return acc;\n              },\n              {} as Record<number, number>\n            );\n\n            const r = createArmorItem(\n              manifestItem,\n              `v${vendorHash}-${saleItem.itemHash}`,\n              InventoryArmorSource.Vendor\n            );\n            applyInvestmentStats(r, statsOverride);\n            vendorArmorItems.push(r);\n          }\n        },\n        (reason) => {\n          console.error(`Failed to get vendor: ${reason}`);\n        }\n      );\n    });\n\n    //const vendorArmorItems = vendorItems.flatMap(({ items }) => items);\n    await Promise.all(VendorPromises);\n    console.log(\n      `Collected ${vendorArmorItems.length} vendor armor items for character ${characterId}`\n    );\n\n    return {\n      items: vendorArmorItems,\n      nextRefreshDate,\n    };\n  }\n\n  isVendorCacheValid() {\n    const nextRefreshTimeStr = localStorage.getItem(VENDOR_NEXT_REFRESH_KEY);\n    if (!nextRefreshTimeStr) {\n      return false;\n    }\n\n    const nextVendorRefresh = new Date(nextRefreshTimeStr);\n    if (!isFinite(nextVendorRefresh.getTime())) {\n      return false;\n    }\n\n    console.debug(\"Vendor Cache\", {\n      information: {\n        nextVendorRefresh,\n        now: new Date(),\n        shouldRefresh: nextVendorRefresh > new Date(),\n      },\n    });\n    return nextVendorRefresh > new Date();\n  }\n\n  private async writeVendorCache(items: IInventoryArmor[], nextRefreshDate: Date) {\n    console.log(\n      `Writing new vendor cache (${\n        items.length\n      } items), valid until ${nextRefreshDate.toISOString()}`\n    );\n    await this.db.inventoryArmor.where({ source: InventoryArmorSource.Vendor }).delete();\n    await this.db.inventoryArmor.bulkPut(items);\n    localStorage.setItem(VENDOR_NEXT_REFRESH_KEY, nextRefreshDate.toISOString());\n  }\n\n  /**\n   * Updates the vendor armor items cache if it is invalid\n   * @returns true if the cache was updated, false if the cache is still valid\n   */\n  async updateVendorArmorItemsCache() {\n    if (this.isVendorCacheValid()) {\n      console.log(\"Using vendor items cache\");\n      return false;\n    }\n\n    const destinyMembership = await this.membership.getMembershipDataForCurrentUser();\n    const characters = await this.membership.getCharacters();\n\n    // This should contain a list of hashes for only the armor items which we are interested in\n    const manifestItems = (await this.db.manifestArmor.toArray())\n      .filter((a) => a.itemType == DestinyItemType.Armor)\n      .reduce(\n        (acc, item) => {\n          acc[item.hash] = item;\n          return acc;\n        },\n        {} as Record<number, IManifestArmor>\n      );\n\n    try {\n      const vendorArmorItems = await Promise.all(\n        characters.map(({ characterId }) =>\n          this.getVendorArmorItemsForCharacter(manifestItems, destinyMembership, characterId)\n        )\n      );\n\n      const allItems = vendorArmorItems.flatMap(({ items }) => items);\n      const nextRefreshDate = Math.max(\n        Math.min(...vendorArmorItems.map(({ nextRefreshDate }) => nextRefreshDate)),\n        Date.now() + 1000 * 60 * 10\n      );\n      this.writeVendorCache(allItems, new Date(nextRefreshDate));\n      return true;\n    } catch (e) {\n      console.error(\"Failed to update vendor armor items cache\", e);\n      // refresh sooner if we failed to update the cache\n      const nextRefreshDate = new Date();\n      nextRefreshDate.setMinutes(nextRefreshDate.getMinutes() + 5);\n      this.writeVendorCache([], new Date(nextRefreshDate));\n      return false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { DatabaseService } from \"./database.service\";\nimport { IManifestArmor } from \"../data/types/IManifestArmor\";\nimport { ConfigurationService } from \"./configuration.service\";\nimport { debounceTime } from \"rxjs/operators\";\nimport { BehaviorSubject, Observable, ReplaySubject, Subject } from \"rxjs\";\nimport { BuildConfiguration } from \"../data/buildConfiguration\";\nimport { ArmorPerkOrSlot, ArmorStat, STAT_MOD_VALUES, StatModifier } from \"../data/enum/armor-stat\";\nimport { StatusProviderService } from \"./status-provider.service\";\nimport { BungieApiService } from \"./bungie-api.service\";\nimport { AuthService } from \"./auth.service\";\nimport { ArmorSlot } from \"../data/enum/armor-slot\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { ResultDefinition } from \"../components/authenticated-v2/results/results.component\";\nimport {\n  IInventoryArmor,\n  InventoryArmorSource,\n  isEqualItem,\n  totalStats,\n} from \"../data/types/IInventoryArmor\";\nimport { DestinyClass, TierType } from \"bungie-api-ts/destiny2\";\nimport { IPermutatorArmorSet } from \"../data/types/IPermutatorArmorSet\";\nimport { getSkillTier, getWaste } from \"./results-builder.worker\";\nimport { IPermutatorArmor } from \"../data/types/IPermutatorArmor\";\nimport { FORCE_USE_NO_EXOTIC } from \"../data/constants\";\nimport { VendorsService } from \"./vendors.service\";\nimport { ModOptimizationStrategy } from \"../data/enum/mod-optimization-strategy\";\nimport { isEqual as _isEqual } from \"lodash\";\nimport { getDifferences } from \"../data/commonFunctions\";\n\ntype info = {\n  results: ResultDefinition[];\n  totalResults: number;\n  maximumPossibleTiers: number[];\n  statCombo3x100: ArmorStat[][];\n  statCombo4x100: ArmorStat[][];\n  itemCount: number;\n  totalTime: number;\n};\n\nexport type ClassExoticInfo = {\n  inInventory: boolean;\n  inCollection: boolean;\n  inVendor: boolean;\n  item: IManifestArmor;\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class InventoryService {\n  /**\n   * An Int32Array that holds all permutations for the currently selected class, before filters are applied.\n   * It consists of N items of length 11:\n   * helmetHash, gauntletHash, chestHash, legHash, mobility, resilience, recovery, discipline, intellect, strength, exoticHash\n   * @private\n   */\n  private allArmorResults: ResultDefinition[] = [];\n  private currentClass: DestinyClass = DestinyClass.Unknown;\n\n  private _manifest: ReplaySubject<null>;\n  public readonly manifest: Observable<null>;\n  private _inventory: ReplaySubject<null>;\n  public readonly inventory: Observable<null>;\n\n  private _armorResults: BehaviorSubject<info>;\n  public readonly armorResults: Observable<info>;\n\n  private _calculationProgress: Subject<number> = new Subject<number>();\n  public readonly calculationProgress: Observable<number> =\n    this._calculationProgress.asObservable();\n\n  private _config: BuildConfiguration = BuildConfiguration.buildEmptyConfiguration();\n  private workers: Worker[];\n\n  private results: IPermutatorArmorSet[] = [];\n  private totalPermutationCount = 0;\n  private resultMaximumTiers: number[][] = [];\n  private resultStatCombo3x100 = new Set<number>();\n  private resultStatCombo4x100 = new Set<number>();\n  private selectedExotics: IManifestArmor[] = [];\n  private inventoryArmorItems: IInventoryArmor[] = [];\n  private permutatorArmorItems: IPermutatorArmor[] = [];\n  private endResults: ResultDefinition[] = [];\n\n  constructor(\n    private db: DatabaseService,\n    private config: ConfigurationService,\n    private status: StatusProviderService,\n    private api: BungieApiService,\n    private auth: AuthService,\n    private router: Router,\n    private vendors: VendorsService\n  ) {\n    this._inventory = new ReplaySubject(1);\n    this.inventory = this._inventory.asObservable();\n    this._manifest = new ReplaySubject(1);\n    this.manifest = this._manifest.asObservable();\n\n    this._armorResults = new BehaviorSubject({\n      results: this.allArmorResults,\n    } as info);\n    this.armorResults = this._armorResults.asObservable();\n\n    this.workers = [];\n    let dataAlreadyFetched = false;\n\n    // TODO: This gives a race condition on some parts.\n    router.events.pipe(debounceTime(5)).subscribe(async (val) => {\n      if (this.auth.refreshTokenExpired || !(await this.auth.autoRegenerateTokens())) {\n        //await this.auth.logout();\n        //return;\n      }\n      if (!auth.isAuthenticated()) return;\n\n      if (val instanceof NavigationEnd) {\n        this.killWorkers();\n        this.clearResults();\n        console.debug(\"Trigger refreshAll due to router.events\");\n        await this.refreshAll(!dataAlreadyFetched);\n        dataAlreadyFetched = true;\n      }\n    });\n\n    this.config.configuration.pipe(debounceTime(500)).subscribe(async (c) => {\n      if (this.auth.refreshTokenExpired || !(await this.auth.autoRegenerateTokens())) {\n        //await this.auth.logout();\n        //return;\n      }\n      if (!auth.isAuthenticated()) return;\n\n      if (_isEqual(c, this._config)) return;\n      console.debug(\"Build configuration changed\", getDifferences(this._config, c));\n\n      this._config = structuredClone(c);\n      await this.refreshAll(!dataAlreadyFetched);\n      dataAlreadyFetched = true;\n    });\n  }\n\n  private clearResults() {\n    this.allArmorResults = [];\n    this._armorResults.next({\n      results: this.allArmorResults,\n      totalResults: 0,\n      totalTime: 0,\n      itemCount: 0,\n      maximumPossibleTiers: [0, 0, 0, 0, 0, 0],\n      statCombo3x100: [],\n      statCombo4x100: [],\n    });\n  }\n\n  shouldCalculateResults(): boolean {\n    return this.router.url == \"/\";\n  }\n\n  private refreshing: boolean = false;\n\n  async refreshAll(forceArmor: boolean = false, forceManifest = false) {\n    if (this.refreshing) return;\n    console.info(\"Refreshing User information\");\n    try {\n      this.refreshing = true;\n      if (this.auth.refreshTokenExpired && !(await this.auth.autoRegenerateTokens())) {\n        this.status.setAuthError(); // Better way to logout the user?\n        if (!this.status.getStatus().apiError) await this.auth.logout();\n        return;\n      }\n      let armorUpdated = false;\n      try {\n        let manifestUpdated = await this.updateManifest(forceManifest);\n        armorUpdated = await this.updateInventoryItems(manifestUpdated || forceArmor);\n        this.updateVendorsAsync();\n      } catch (e) {\n        console.error(e);\n      }\n\n      await this.triggerArmorUpdateAndUpdateResults(armorUpdated);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  private async triggerArmorUpdateAndUpdateResults(\n    triggerInventoryUpdate: boolean = false,\n    triggerResultsUpdate: boolean = true\n  ) {\n    // trigger armor update behaviour\n    if (triggerInventoryUpdate) this._inventory.next(null);\n\n    // Do not update results in Help and Cluster pages\n    if (this.shouldCalculateResults()) {\n      await this.updateResults();\n    }\n  }\n\n  private updateVendorsAsync() {\n    if (this.status.getStatus().updatingVendors) return;\n\n    if (!this.vendors.isVendorCacheValid()) {\n      this.status.modifyStatus((s) => (s.updatingVendors = true));\n      this.vendors\n        .updateVendorArmorItemsCache()\n        .then((success) => {\n          if (!success) return;\n          this.triggerArmorUpdateAndUpdateResults(success, this._config.includeVendorRolls);\n        })\n        .finally(() => {\n          this.status.modifyStatus((s) => (s.updatingVendors = false));\n        });\n    }\n  }\n\n  private killWorkers() {\n    console.debug(\"Terminating workers\");\n    this.workers.forEach((w) => {\n      w.terminate();\n    });\n    this.workers = [];\n  }\n\n  private estimateCombinationsToBeChecked(\n    helmets: IPermutatorArmor[],\n    gauntlets: IPermutatorArmor[],\n    chests: IPermutatorArmor[],\n    legs: IPermutatorArmor[]\n  ) {\n    let totalCalculations = 0;\n    const exoticHelmets = helmets.filter((d) => d.isExotic).length;\n    const legendaryHelmets = helmets.length - exoticHelmets;\n    const exoticGauntlets = gauntlets.filter((d) => d.isExotic).length;\n    const legendaryGauntlets = gauntlets.length - exoticGauntlets;\n    const exoticChests = chests.filter((d) => d.isExotic).length;\n    const legendaryChests = chests.length - exoticChests;\n    const exoticLegs = legs.filter((d) => d.isExotic).length;\n    const legendaryLegs = legs.length - exoticLegs;\n\n    totalCalculations += exoticHelmets * legendaryGauntlets * legendaryChests * legendaryLegs;\n    totalCalculations += legendaryHelmets * exoticGauntlets * legendaryChests * legendaryLegs;\n    totalCalculations += legendaryHelmets * legendaryGauntlets * exoticChests * legendaryLegs;\n    totalCalculations += legendaryHelmets * legendaryGauntlets * legendaryChests * exoticLegs;\n    totalCalculations += legendaryHelmets * legendaryGauntlets * legendaryChests * legendaryLegs;\n    return totalCalculations;\n  }\n\n  async updateResults(nthreads: number = 3) {\n    let config = this._config;\n    console.debug(\"Using config for Workers\", { configuration: config });\n    this.clearResults();\n    this.killWorkers();\n\n    try {\n      console.time(\"updateResults with WebWorker\");\n      this.status.modifyStatus((s) => (s.calculatingResults = true));\n      let doneWorkerCount = 0;\n\n      this.results = [];\n      this.totalPermutationCount = 0;\n      this.resultMaximumTiers = [];\n      this.resultStatCombo3x100 = new Set<number>();\n      this.resultStatCombo4x100 = new Set<number>();\n      const startTime = Date.now();\n\n      this.selectedExotics = await Promise.all(\n        config.selectedExotics\n          .filter((hash) => hash != FORCE_USE_NO_EXOTIC)\n          .map(\n            async (hash) =>\n              (await this.db.manifestArmor.where(\"hash\").equals(hash).first()) as IManifestArmor\n          )\n      );\n      this.selectedExotics = this.selectedExotics.filter((i) => !!i);\n\n      this.inventoryArmorItems = (await this.db.inventoryArmor\n        .where(\"clazz\")\n        .equals(config.characterClass)\n        .distinct()\n        .toArray()) as IInventoryArmor[];\n\n      this.inventoryArmorItems = this.inventoryArmorItems\n        // only armor :)\n        .filter((item) => item.slot != ArmorSlot.ArmorSlotNone)\n        // filter disabled items\n        .filter((item) => config.disabledItems.indexOf(item.itemInstanceId) == -1)\n        // filter collection/vendor rolls if not allowed\n        .filter((item) => {\n          switch (item.source) {\n            case InventoryArmorSource.Collections:\n              return config.includeCollectionRolls;\n            case InventoryArmorSource.Vendor:\n              return config.includeVendorRolls;\n            default:\n              return true;\n          }\n        })\n        // filter the selected exotic right here\n        .filter(\n          (item) => config.selectedExotics.indexOf(FORCE_USE_NO_EXOTIC) == -1 || !item.isExotic\n        )\n        .filter(\n          (item) =>\n            this.selectedExotics.length != 1 ||\n            (item.isExotic && this.selectedExotics[0].hash == item.hash) ||\n            (!item.isExotic && this.selectedExotics[0].slot != item.slot)\n        )\n\n        // config.OnlyUseMasterworkedExotics - only keep exotics that are masterworked\n        .filter(\n          (item) =>\n            !config.onlyUseMasterworkedExotics ||\n            !(item.rarity == TierType.Exotic && !item.masterworked)\n        )\n\n        // config.OnlyUseMasterworkedLegendaries - only keep legendaries that are masterworked\n        .filter(\n          (item) =>\n            !config.onlyUseMasterworkedLegendaries ||\n            !(item.rarity == TierType.Superior && !item.masterworked)\n        )\n\n        // non-legendaries and non-exotics\n        .filter(\n          (item) =>\n            config.allowBlueArmorPieces ||\n            item.rarity == TierType.Exotic ||\n            item.rarity == TierType.Superior\n        )\n        // sunset armor\n        .filter((item) => !config.ignoreSunsetArmor || !item.isSunset)\n        // armor perks\n        .filter((item) => {\n          return (\n            item.isExotic ||\n            !config.armorPerks[item.slot].fixed ||\n            config.armorPerks[item.slot].value == ArmorPerkOrSlot.None ||\n            config.armorPerks[item.slot].value == item.perk\n          );\n        });\n      // console.log(items.map(d => \"id:'\"+d.itemInstanceId+\"'\").join(\" or \"))\n\n      // Remove collection items if they are in inventory\n      this.inventoryArmorItems = this.inventoryArmorItems.filter((item) => {\n        if (item.source === InventoryArmorSource.Inventory) return true;\n\n        const purchasedItemInstance = this.inventoryArmorItems.find(\n          (rhs) => rhs.source === InventoryArmorSource.Inventory && isEqualItem(item, rhs)\n        );\n\n        // If this item is a collection/vendor item, ignore it if the player\n        // already has a real copy of the same item.\n        return purchasedItemInstance === undefined;\n      });\n\n      this.permutatorArmorItems = this.inventoryArmorItems.map((armor) => {\n        return {\n          id: armor.id,\n          hash: armor.hash,\n          slot: armor.slot,\n          clazz: armor.clazz,\n          perk: armor.perk,\n          isExotic: !!armor.isExotic,\n          rarity: armor.rarity,\n          isSunset: armor.isSunset,\n          masterworked: armor.masterworked,\n          mobility: armor.mobility,\n          resilience: armor.resilience,\n          recovery: armor.recovery,\n          discipline: armor.discipline,\n          intellect: armor.intellect,\n          strength: armor.strength,\n          source: armor.source,\n        } as IPermutatorArmor;\n      });\n\n      nthreads = this.estimateRequiredThreads();\n\n      console.info(\"Threads for calculation\", nthreads);\n\n      // Values to calculate ETA\n      const threadCalculationAmountArr = [...Array(nthreads).keys()].map(() => 0);\n      const threadCalculationDoneArr = [...Array(nthreads).keys()].map(() => 0);\n      let oldProgressValue = 0;\n\n      // Improve per thread performance by shuffling the inventory\n      // sorting is a naive aproach that can be optimized\n      // in my test is better than the default order from the db\n      this.permutatorArmorItems = this.permutatorArmorItems.sort(\n        (a, b) => totalStats(b) - totalStats(a)\n      );\n      this._calculationProgress.next(0);\n\n      for (let n = 0; n < nthreads; n++) {\n        this.workers[n] = new Worker(new URL(\"./results-builder.worker\", import.meta.url), {\n          name: n.toString(),\n        });\n        this.workers[n].onmessage = async (ev) => {\n          let data = ev.data;\n          threadCalculationDoneArr[n] = data.checkedCalculations;\n          threadCalculationAmountArr[n] = data.estimatedCalculations;\n          const sumTotal = threadCalculationAmountArr.reduce((a, b) => a + b, 0);\n          const sumDone = threadCalculationDoneArr.reduce((a, b) => a + b, 0);\n\n          if (\n            threadCalculationDoneArr[0] > 0 &&\n            threadCalculationDoneArr[1] > 0 &&\n            threadCalculationDoneArr[2] > 0\n          ) {\n            const newProgress = (sumDone / sumTotal) * 100;\n            if (newProgress > oldProgressValue + 0.25) {\n              oldProgressValue = newProgress;\n              this._calculationProgress.next(newProgress);\n            }\n          }\n          if (data.runtime == null) return;\n\n          this.results.push(...(data.results as IPermutatorArmorSet[]));\n          if (data.done == true) {\n            doneWorkerCount++;\n            this.totalPermutationCount += data.stats.permutationCount;\n            this.resultMaximumTiers.push(data.runtime.maximumPossibleTiers);\n            for (let elem of data.runtime.statCombo3x100) this.resultStatCombo3x100.add(elem);\n            for (let elem of data.runtime.statCombo4x100) this.resultStatCombo4x100.add(elem);\n          }\n          if (data.done == true && doneWorkerCount == nthreads) {\n            this.status.modifyStatus((s) => (s.calculatingResults = false));\n            this._calculationProgress.next(0);\n\n            this.endResults = [];\n\n            for (let armorSet of this.results) {\n              let items = armorSet.armor.map((x) =>\n                this.inventoryArmorItems.find((y) => y.id == x)\n              ) as IInventoryArmor[];\n              let exotic = items.find((x) => x.isExotic);\n              let v = {\n                exotic:\n                  exotic == null\n                    ? undefined\n                    : {\n                        icon: exotic?.icon,\n                        watermark: exotic?.watermarkIcon,\n                        name: exotic?.name,\n                        hash: exotic?.hash,\n                      },\n                artifice: armorSet.usedArtifice,\n                modCount: armorSet.usedMods.length,\n                modCost: armorSet.usedMods.reduce(\n                  (p, d: StatModifier) => p + STAT_MOD_VALUES[d][2],\n                  0\n                ),\n                mods: armorSet.usedMods,\n                stats: armorSet.statsWithMods,\n                statsNoMods: armorSet.statsWithoutMods,\n                tiers: getSkillTier(armorSet.statsWithMods),\n                waste: getWaste(armorSet.statsWithMods),\n                items: items.reduce(\n                  (p: any, instance) => {\n                    p[instance.slot - 1].push({\n                      energyLevel: instance.energyLevel,\n                      hash: instance.hash,\n                      itemInstanceId: instance.itemInstanceId,\n                      name: instance.name,\n                      exotic: !!instance.isExotic,\n                      masterworked: instance.masterworked,\n                      mayBeBugged: instance.mayBeBugged,\n                      slot: instance.slot,\n                      perk: instance.perk,\n                      transferState: 0, // TRANSFER_NONE\n                      stats: [\n                        instance.mobility,\n                        instance.resilience,\n                        instance.recovery,\n                        instance.discipline,\n                        instance.intellect,\n                        instance.strength,\n                      ],\n                      source: instance.source,\n                    });\n                    return p;\n                  },\n                  [[], [], [], [], []]\n                ),\n                classItem: armorSet.classItemPerk,\n                usesCollectionRoll: items.some(\n                  (y) => y.source === InventoryArmorSource.Collections\n                ),\n                usesVendorRoll: items.some((y) => y.source === InventoryArmorSource.Vendor),\n              } as unknown as ResultDefinition;\n              this.endResults.push(v);\n            }\n\n            this._armorResults.next({\n              results: this.endResults,\n              totalResults: this.totalPermutationCount, // Total amount of results, differs from the real amount if the memory save setting is active\n              itemCount: data.stats.itemCount,\n              totalTime: Date.now() - startTime,\n              maximumPossibleTiers: this.resultMaximumTiers\n                .reduce(\n                  (p, v) => {\n                    for (let k = 0; k < 6; k++) if (p[k] < v[k]) p[k] = v[k];\n                    return p;\n                  },\n                  [0, 0, 0, 0, 0, 0]\n                )\n                .map((k) => Math.floor(Math.min(100, k) / 10)),\n              statCombo3x100:\n                Array.from(this.resultStatCombo3x100 as Set<number>).map((d: number) => {\n                  let r: ArmorStat[] = [];\n                  for (let n = 0; n < 6; n++) if ((d & (1 << n)) > 0) r.push(n);\n                  return r;\n                }) || [],\n              statCombo4x100:\n                Array.from(this.resultStatCombo4x100 as Set<number>).map((d: number) => {\n                  let r = [];\n                  for (let n = 0; n < 6; n++) if ((d & (1 << n)) > 0) r.push(n);\n                  return r;\n                }, []) || [],\n            });\n            console.timeEnd(\"updateResults with WebWorker\");\n            this.workers[n].terminate();\n          } else if (data.done == true && doneWorkerCount != nthreads) this.workers[n].terminate();\n        };\n        this.workers[n].onerror = (ev) => {\n          this.workers[n].terminate();\n        };\n\n        this.workers[n].postMessage({\n          type: \"builderRequest\",\n          currentClass: this.currentClass,\n          config: this._config,\n          threadSplit: {\n            count: nthreads,\n            current: n,\n          },\n          items: this.permutatorArmorItems,\n          selectedExotics: this.selectedExotics,\n        });\n      }\n    } finally {\n    }\n  }\n\n  estimateRequiredThreads(): number {\n    const helmets = this.permutatorArmorItems.filter((d) => d.slot == ArmorSlot.ArmorSlotHelmet);\n    const gauntlets = this.permutatorArmorItems.filter(\n      (d) => d.slot == ArmorSlot.ArmorSlotGauntlet\n    );\n    const chests = this.permutatorArmorItems.filter((d) => d.slot == ArmorSlot.ArmorSlotChest);\n    const legs = this.permutatorArmorItems.filter((d) => d.slot == ArmorSlot.ArmorSlotLegs);\n    const estimatedCalculations = this.estimateCombinationsToBeChecked(\n      helmets,\n      gauntlets,\n      chests,\n      legs\n    );\n\n    const largestArmorBucket = Math.max(\n      helmets.length,\n      gauntlets.length,\n      chests.length,\n      legs.length\n    );\n\n    let calculationMultiplier = 1.0;\n    // very expensive calculations reduce the amount per thread\n    if (\n      this._config.tryLimitWastedStats &&\n      this._config.modOptimizationStrategy != ModOptimizationStrategy.None\n    ) {\n      calculationMultiplier = 0.7;\n    }\n\n    let minimumCalculationPerThread = calculationMultiplier * 5e4;\n    let maximumCalculationPerThread = calculationMultiplier * 2.5e5;\n\n    const nthreads = Math.max(\n      3, // Enforce a minimum of 3 threads\n      Math.min(\n        Math.max(1, Math.ceil(estimatedCalculations / minimumCalculationPerThread)),\n        Math.ceil(estimatedCalculations / maximumCalculationPerThread),\n        Math.floor((navigator.hardwareConcurrency || 2) * 0.75), // limit it to the amount of cores, and only use 75%\n        20, // limit it to a maximum of 20 threads\n        largestArmorBucket // limit it to the largest armor bucket, as we will split the work by this value\n      )\n    );\n\n    return nthreads;\n  }\n\n  async getItemCountForClass(clazz: DestinyClass, slot?: ArmorSlot) {\n    let pieces = await this.db.inventoryArmor.where(\"clazz\").equals(clazz).toArray();\n    if (!!slot) pieces = pieces.filter((i) => i.slot == slot);\n    //if (!this._config.includeVendorRolls) pieces = pieces.filter((i) => i.source != InventoryArmorSource.Vendor);\n    //if (!this._config.includeCollectionRolls) pieces = pieces.filter((i) => i.source != InventoryArmorSource.Collections);\n    pieces = pieces.filter((i) => i.source == InventoryArmorSource.Inventory);\n    return pieces.length;\n  }\n\n  async getExoticsForClass(clazz: DestinyClass, slot?: ArmorSlot): Promise<ClassExoticInfo[]> {\n    let inventory = await this.db.inventoryArmor.where(\"isExotic\").equals(1).toArray();\n    inventory = inventory.filter(\n      (d) => d.clazz == (clazz as any) && d.armor2 && (!slot || d.slot == slot)\n    );\n\n    let exotics = await this.db.manifestArmor.where(\"isExotic\").equals(1).toArray();\n    exotics = exotics.filter(\n      (d) => d.clazz == (clazz as any) && d.armor2 && (!slot || d.slot == slot)\n    );\n\n    return exotics.map((ex) => {\n      const instances = inventory.filter((i) => i.hash == ex.hash);\n      return {\n        item: ex,\n        inCollection:\n          instances.find((i) => i.source === InventoryArmorSource.Collections) !== undefined,\n        inInventory:\n          instances.find((i) => i.source === InventoryArmorSource.Inventory) !== undefined,\n        inVendor: instances.find((i) => i.source === InventoryArmorSource.Vendor) !== undefined,\n      };\n    });\n  }\n\n  async updateManifest(force: boolean = false): Promise<boolean> {\n    if (this.status.getStatus().updatingManifest) {\n      console.error(\"Already updating the manifest - abort\");\n      return false;\n    }\n    this.status.modifyStatus((s) => (s.updatingManifest = true));\n    let r = await this.api.updateManifest(force).finally(() => {\n      this.status.modifyStatus((s) => (s.updatingManifest = false));\n    });\n    if (!!r) this._manifest.next(null);\n    return !!r;\n  }\n\n  async updateInventoryItems(force: boolean = false, errorLoop = 0): Promise<boolean> {\n    this.status.modifyStatus((s) => (s.updatingInventory = true));\n\n    try {\n      let r = await this.api.updateArmorItems(force).finally(() => {\n        this.status.modifyStatus((s) => (s.updatingInventory = false));\n      });\n      return !!r;\n    } catch (e) {\n      // After three tries, call it a day.\n      if (errorLoop > 3) {\n        alert(\n          \"You encountered a strange error with the inventory update. Please log out and log in again. If that does not fix it, please message Mijago.\"\n        );\n        return false;\n      }\n\n      this.status.modifyStatus((s) => (s.updatingInventory = false));\n      console.error(e);\n      await this.updateManifest(true);\n      return await this.updateInventoryItems(true, errorLoop++);\n    }\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable, BehaviorSubject } from \"rxjs\";\n\nimport type { CharacterStats } from \"../data/character_stats/schema\";\nimport { InventoryService } from \"./inventory.service\";\n\nconst BASE_URL = \"https://Database-Clarity.github.io/Character-Stats\";\nexport const SUPPORTED_SCHEMA_VERSION = \"1.9\";\nexport const CHARACTER_STATS_URL = `${BASE_URL}/versions/${SUPPORTED_SCHEMA_VERSION}/CharacterStatInfo-NI.json`;\nexport const UPDATES_URL = `${BASE_URL}/update.json`;\n\nconst LOCAL_STORAGE_STATS_VERSION_KEY = \"clarity-character-stats-version\";\nconst LOCAL_STORAGE_STATS_KEY = \"clarity-character-stats\";\n\nexport type UpdateData = {\n  lastUpdate: number;\n  schemaVersion: string;\n};\n\n/**\n * TODO:\n * Currently this fetches and cached a single hardcoded data URL.\n * After the current clarity PR is merged this must implement periodic version fetching and updating.\n */\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ClarityService {\n  private _characterStats: BehaviorSubject<CharacterStats | null> =\n    new BehaviorSubject<CharacterStats | null>(null);\n  public readonly characterStats: Observable<CharacterStats | null> =\n    this._characterStats.asObservable();\n\n  constructor(private http: HttpClient, private inv: InventoryService) {\n    // trigger a clarity reload on manifest change\n    this.inv.manifest.subscribe((_) => this.load());\n  }\n\n  async load() {\n    try {\n      await this.loadCharacterStats();\n    } catch (err) {\n      console.warn(\"Error loading Clarity data\", err);\n    }\n  }\n\n  private async fetchUpdateData() {\n    return this.http.get<UpdateData>(UPDATES_URL).toPromise();\n  }\n\n  // Load data from cache or fetch live data if necessary\n  private async loadCharacterStats() {\n    // If we have any stored data, we can just make it available right away\n    const storedData = localStorage.getItem(LOCAL_STORAGE_STATS_KEY);\n    if (storedData) {\n      this._characterStats.next(JSON.parse(storedData));\n    }\n\n    const liveVersion = await this.fetchUpdateData();\n    const storedVersion = parseInt(localStorage.getItem(LOCAL_STORAGE_STATS_VERSION_KEY) || \"0\");\n\n    // There’s new data available\n    if (liveVersion && liveVersion.lastUpdate > storedVersion) {\n      if (liveVersion.schemaVersion !== SUPPORTED_SCHEMA_VERSION) {\n        console.warn(\"Unsupported live character stats schema version\", liveVersion.schemaVersion);\n      } else if (liveVersion && liveVersion.lastUpdate !== undefined) {\n        await this.fetchLiveCharacterStats().then((data) => {\n          localStorage.setItem(LOCAL_STORAGE_STATS_KEY, JSON.stringify(data));\n          localStorage.setItem(LOCAL_STORAGE_STATS_VERSION_KEY, liveVersion.lastUpdate.toString());\n\n          this._characterStats.next(data);\n        });\n      }\n    }\n  }\n\n  private async fetchLiveCharacterStats() {\n    return this.http.get<CharacterStats>(CHARACTER_STATS_URL).toPromise();\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { ClarityService } from \"./clarity.service\";\nimport { ModifierType } from \"../data/enum/modifierType\";\nimport type { CharacterStats, Override } from \"../data/character_stats/schema\";\nimport { DestinyClass, DestinyInventoryItemDefinition } from \"bungie-api-ts/destiny2\";\n\nexport enum CharacterStatType {\n  Speed = 1,\n  Percentage = 2,\n  Time = 3,\n  TimeMMSS = 4,\n  PercentagePerSecond = 5,\n}\n\nexport interface CooldownEntry {\n  hash?: number;\n  name: string;\n  icon?: string;\n  values: number[];\n  description?: string;\n  valueType?: CharacterStatType;\n  characterClass?: DestinyClass;\n  element?: ModifierType;\n\n  // If any items are affecting this entry’s cooldown their hash will be added to this list\n  overrideIcons?: number[];\n}\n\n/**\n * This component takes the raw character stat data from Clarity’s database\n * and converts it to data for use in stat tooltips.\n */\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CharacterStatsService {\n  private allStatEntries: Partial<Record<keyof CharacterStats, CooldownEntry[]>> = {};\n  private overrides: Override[] = [];\n\n  constructor(private clarity: ClarityService) {\n    this.clarity.characterStats.subscribe((data) => {\n      if (data) this.updateCharacterStats(data);\n    });\n  }\n\n  loadCharacterStats() {\n    this.clarity.load();\n  }\n\n  private updateCharacterStats(data: CharacterStats) {\n    const allAbilities = (\n      (JSON.parse(\n        window.localStorage.getItem(\"allAbilities\")!\n      ) as DestinyInventoryItemDefinition[]) || []\n    ).reduce((acc, ability) => {\n      acc.set(ability.hash, ability);\n      return acc;\n    }, new Map<number, DestinyInventoryItemDefinition>());\n\n    this.overrides = Object.values(data)\n      .map((stat) => stat.Overrides)\n      .flat();\n\n    this.allStatEntries = {\n      Mobility: this.generateEntries(data.Mobility, allAbilities, [\n        {\n          key: \"WalkSpeed\",\n          name: \"Walk Speed\",\n          valueType: CharacterStatType.Speed,\n        },\n        {\n          key: \"StrafeSpeed\",\n          name: \"Strafe Speed\",\n          valueType: CharacterStatType.Speed,\n        },\n        {\n          key: \"CrouchSpeed\",\n          name: \"Crouch Speed\",\n          valueType: CharacterStatType.Speed,\n        },\n      ]),\n      Resilience: this.generateEntries(data.Resilience, allAbilities, [\n        {\n          key: \"ShieldHP\",\n          name: \"Shield HP\",\n        },\n        {\n          key: \"PvEDamageResistance\",\n          name: \"PvE Damage Resistance\",\n          valueType: CharacterStatType.Percentage,\n        },\n        {\n          key: \"FlinchResistance\",\n          name: \"Flinch Resistance\",\n          valueType: CharacterStatType.Percentage,\n        },\n      ]),\n      Recovery: this.generateEntries(data.Recovery, allAbilities, [\n        {\n          key: \"TotalRegenTime\",\n          name: \"Total Regen Time\",\n          valueType: CharacterStatType.Time,\n        },\n        {\n          key: \"HealthRegenDelay\",\n          name: \"Health Regen Delay\",\n          valueType: CharacterStatType.Time,\n        },\n        {\n          key: \"HealthRegenSpeed\",\n          name: \"Health Regen Speed\",\n          valueType: CharacterStatType.PercentagePerSecond,\n        },\n        {\n          key: \"ShieldRegenDelay\",\n          name: \"Shield Regen Delay\",\n          valueType: CharacterStatType.Time,\n        },\n        {\n          key: \"ShieldRegenSpeed\",\n          name: \"Shield Regen Speed\",\n          valueType: CharacterStatType.PercentagePerSecond,\n        },\n      ]),\n      Discipline: this.generateEntries(data.Discipline, allAbilities),\n      Intellect: this.generateEntries(data.Intellect, allAbilities),\n      Strength: this.generateEntries(data.Strength, allAbilities),\n    };\n  }\n\n  /**\n   * Fetch all the cooldown entries for a given stat.\n   * If a class and/or subclass are provided the results\n   * will be filtered to only include matching abilities.\n   */\n  get(\n    statName: keyof CharacterStats,\n    characterClass?: DestinyClass,\n    element?: ModifierType,\n    exoticHashes: number[] = []\n  ): CooldownEntry[] {\n    const entries = this.allStatEntries[statName] ?? [];\n\n    const exoticOverrides = this.overrides.filter((o) => exoticHashes.includes(o.Hash));\n\n    return entries\n      .filter((entry) => {\n        if (\n          characterClass !== undefined &&\n          entry.characterClass !== undefined &&\n          entry.characterClass !== characterClass\n        ) {\n          return false;\n        }\n\n        if (element !== undefined && entry.element !== undefined && entry.element !== element) {\n          return false;\n        }\n\n        return true;\n      })\n      .map((entry) => {\n        return exoticOverrides.reduce(\n          (acc, override) => applyExoticArmorOverride(acc, override),\n          entry\n        );\n      });\n  }\n\n  private generateEntries<T extends CharacterStats[keyof CharacterStats]>(\n    base: T,\n    allAbilities: Map<number, DestinyInventoryItemDefinition>,\n    stats: Array<\n      Partial<CooldownEntry> & {\n        key: Exclude<keyof T, \"Description\" | \"Abilities\" | \"Overrides\">;\n        name: string;\n      }\n    > = []\n  ): CooldownEntry[] {\n    const result = stats.map<CooldownEntry>(({ key, ...rest }) => {\n      const entry = base[key] as any as {\n        Description: string;\n        Array: number[];\n      };\n\n      return {\n        values: entry.Array,\n        ...rest,\n      };\n    });\n\n    const abilityList =\n      \"Abilities\" in base ? base.Abilities : \"SuperAbilities\" in base ? base.SuperAbilities : [];\n\n    abilityList.forEach((entry) => {\n      const ability = allAbilities.get(entry.Hash);\n      if (!ability) {\n        return;\n      }\n\n      const { characterClass, element } = getClassAndElementForAbility(ability);\n\n      const abilityData: CooldownEntry = {\n        hash: ability.hash,\n        name: ability.displayProperties.name,\n        icon: ability.displayProperties.icon,\n        values: entry.Cooldowns,\n        valueType: CharacterStatType.TimeMMSS,\n        characterClass,\n        element,\n      };\n      result.push(abilityData);\n    });\n\n    return result;\n  }\n}\n\nfunction getClassAndElementForAbility(ability: DestinyInventoryItemDefinition): {\n  characterClass: DestinyClass | undefined;\n  element: ModifierType | undefined;\n} {\n  let characterClass: DestinyClass | undefined;\n  let element: ModifierType | undefined;\n\n  // e.g. \"hunter.arc.supers\", \"shared.arc.grenades\"\n  const parts = ability.plug?.plugCategoryIdentifier?.split(\".\");\n  if (parts?.length !== 3) {\n    return { characterClass, element };\n  }\n\n  const [className, elementName, _] = parts;\n\n  if (className === \"warlock\") {\n    characterClass = DestinyClass.Warlock;\n  } else if (className === \"hunter\") {\n    characterClass = DestinyClass.Hunter;\n  } else if (className === \"titan\") {\n    characterClass = DestinyClass.Titan;\n  }\n\n  if (elementName === \"arc\") {\n    element = ModifierType.Arc;\n  } else if (elementName === \"solar\") {\n    element = ModifierType.Solar;\n  } else if (elementName === \"void\") {\n    element = ModifierType.Void;\n  } else if (elementName === \"stasis\") {\n    element = ModifierType.Stasis;\n  } else if (elementName === \"strand\") {\n    element = ModifierType.Strand;\n  } else if (elementName === \"prism\") {\n    element = ModifierType.Prismatic;\n  }\n\n  return { characterClass, element };\n}\n\nfunction applyExoticArmorOverride(originalEntry: CooldownEntry, override: Override): CooldownEntry {\n  if (!originalEntry.hash || !override.Requirements.includes(originalEntry.hash)) {\n    return originalEntry;\n  }\n\n  const entry: CooldownEntry = {\n    ...originalEntry,\n    overrideIcons: [...(originalEntry.overrideIcons ?? []), override.Hash],\n  };\n\n  if (override.CooldownOverride) {\n    return {\n      ...entry,\n      values: override.CooldownOverride,\n    };\n  }\n\n  if (override.Scalar) {\n    const reqIndex = override.Requirements.indexOf(originalEntry.hash);\n    const scalar = override.Scalar[reqIndex];\n\n    return {\n      ...entry,\n      values: entry.values.map((value) => value * scalar),\n    };\n  }\n\n  console.log(\"Unhandled override\", override);\n  return originalEntry;\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport enum ChangelogEntryType {\n  ADD,\n  REMOVE,\n  MODIFIED,\n}\n\nexport interface ChangelogEntry {\n  type: ChangelogEntryType;\n  text: string;\n  issues: string[] | undefined;\n}\n\nexport const CHANGELOG_DATA = [\n  {\n    version: \"2.7.0\",\n    date: \"December 09, 2024\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Some UI reworks. Please give us feedback whether you like it or not, so we can improve it further! Thanks nzanaza!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Updated dependencies. Thanks nzanaza!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Added error tacking so that we can better identify and fix issues. Thanks nzanaza!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixes for the exotic class items and duplicate entries. Thanks nzanaza!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Many - AND I REALLY MEAN MANY - internal code optimizations, both structural and logically. Thanks nzanaza (this guardian deserves a medal)!\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.6.6\",\n    date: \"November 9, 2024\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed an issue that lead to duplicated collection roll entries, thus drastically impacting the performance of the application.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed the artifice modslot for the new season. Again.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"You will be logged when your auth token is invalid. We disabled this a while ago, but it is now re-enabled. Thanks to nznaza!\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.6.5\",\n    date: \"October 20, 2024\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Added 'Eido's Apprentice Perk'.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.6.4\",\n    date: \"July 30, 2024\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed an issue with the vendor api. Thanks to nznaza!\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.6.3\",\n    date: \"July 16, 2024\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Minor bugfix for issues with the manifest retrieval. This should fix issues where the items or characters are not loading correctly.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Updated the 'Download Results as JSON' button to reflect required changes for Final Shape.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.6.2\",\n    date: \"July 7, 2024\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added option to ignore existing exotic artifice slots. This is useful for the exotic class item.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Prismatic fragments are now correctly added to the DIM export.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The 'Ignored Items' section is now filtered by the selected class, grouped into armor slots and ordered by item type.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Minor change for the vendor API handling. Thanks nznaza!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Minor change for the manifest API handling.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Mostly minor bugfixes and code improvements.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.6.1\",\n    date: \"June 17, 2024\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Add exotic class items.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added Salvation's Edge Raid modslot and the Echoes of Glory perk.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Changed the way minor mods are displayed. Minor mods are now 25% smaller.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Corrected the description of Facet of Grace.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Added Whisper of Torment, as it now has a -10 in Discipline.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.REMOVE,\n        text: \"Removed old armor modslots (and perks) that no longer exist or function.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.6.0\",\n    date: \"June 4, 2024\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added prismatic fragments.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a progressbar that shows the progress of the calculation process.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added an advanced setting to replace the stat selection boxes with text fields. While it does not look quite nice (as of now), it will allow you to select any value you want. Go get your 6x69 builds done (but don't forget, D2AP still does not add fragments by itself ....YET?!? BUT VERY SOON!)!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added an 'Assume every exotic has an artifice slot' setting in preparation for the changes in the upcoming expansion. Real artifice exotics should work out-of-the-box at the first day of the expansion, BUT it may happen that I need to update some internal structures. Have fun exploring your options, though!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added an 'Assume every legendary class item is an artifice armor' setting to allow finer control over the artifice armor assumption.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"You will no longer be logged out when the API is offline. The app will use the last known data until the API is back online.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Reworked how calculation workers are spawned, thus improving performance. Thanks to nznaza.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Improved Mod optimisation, leading in drastically reduced runtime when paired with 'Add mods to reduce waste'.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Improved 'Reduce Waste' optimisation. Smarter, better, faster, stronger.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Changing the configuration during a running calculation now restarts the calculation process. Outdated results are a thing of the past!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The amount of workers is now variable and depends on the workload at hand. This should help the insane armor hoarders to reduce the calculation time.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Prepared the vendor API for upcoming Bungie API changes. Thanks to nznaza.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Added 'Exotic Cipher' to the resource overview and removed legendary shards.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Modified the inventory update procedure to be more efficient. This may result in a few hiccups in the first stage - if you encounter any issues, please let me know!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Vendor data is now updated asynchronously. This means that the page will load faster, but the vendor data may be outdated for a few seconds.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The progress notifications are now color-coded and on the right. If there are multiple notifications, then they are stacked.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The display of the used mods is now color-coded to make it easier to distinguish between the different mod types in a single glance.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Locked locks are now red. Mainly because adisypher wouldn't stop asking.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Minor bugfixes and performance optimisation.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.5.4\",\n    date: \"April 10, 2024\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed a minor issue where the vendor api may be disabled and block the entire page.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.5.3\",\n    date: \"April 5, 2024\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Adapted the logic to parse the new Clarity data format. Thanks to ciarán!\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.5.2\",\n    date: \"November 29, 2023\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Split the 'Assume all items are masterworked' switch into 'legendary' and 'exotic' switches. Thanks to Mojo!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added the 'Ascendant Protector' Perk. Thanks to Mojo!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed artifice mods, again. Thanks to Mojo!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed 'Ghost Items' from the vendor import. Thanks to ciarán!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Updated the values and descriptions for Subclass Fragments. Thanks to ciarán!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Artifice Mods are now correctly added to the DIM export. Thanks to nznaza!\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.5.1\",\n    date: \"October 29, 2023\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added the 'Exhumed Excess' Perk. The modslot limitations are now ordered. Thanks to Mojo!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Added a solution for the stat distances 63, 64 and 65. You probably won't ever see it, as this is 'five artifice and five major mods'.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"'Fix wasted points' is now ignored for stats that are locked.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.5.0\",\n    date: \"October 14, 2023\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"The stat cooldowns and values are now automatically updated from the Clarity database. Thanks to ciarán!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"The new modslots/perks are now available in the dropdown.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The stat cooldowns now show icons. Thanks to ciarán!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The fragments now show their icons. Thanks to ciarán!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Minor internal updates for DIM references. Thanks to bhollis!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Improved the wasted stats selection, again!\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.4.2\",\n    date: \"July 11, 2023\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added the ability to use collection roll armor. This is disabled by default. Thanks to ciarán!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added the ability to use vendor armor, including Xur. This is disabled by default. Thanks to ciarán!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added the ability to select the optimisation strategy. You can now choose between 'Reduce waste', 'Reduce used mods' and 'Reduce used modslots'. The default is 'Reduce waste'.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Re-added the reduce wasted stats feature. It is now disabled by default. It is a bit slower and not really necessary for most people.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Zero Waste is no longer dependent on the 'Reduce wasted stats' setting. In fact, it practically overwrites it.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.REMOVE,\n        text: \"Removed the 'Extra optimisation steps' setting. It is now always enabled.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.4.0\",\n    date: \"May 23, 2023\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Rewrote the internal algorithm. It makes stuff faster and gives better results.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a 'Perform further optimisation' setting. This will give you better results, but it will take a bit longer.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added Icons to the Stat Selection to make it easier to see which row is which perk.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added button to download results as JSON.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added Sonar Amplifier perk.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Enabled Modslot limitation.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Enabled the 3x100 and 4x100 buttons.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Enabled Zero-Waste mode.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Temporarily disabled 'Reduce Wasted Stats'. It will be back soon.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.3.2\",\n    date: \"May 7, 2023\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Feature: Added 'Guardian Games' class item type to the dropdown. \",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Reformatted every file in the codebase and improved the code workflow. You should not really see this on your end, but it will allow everyone to easily contribute to this open source project!\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.3.1\",\n    date: \"April 2, 2023\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Feature: Added the possibility to only show builds that contain an exotic.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added 'Root of Nightmares' modslot filter.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added 'Queen's Favor' seasonal perk filter.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added text indicating that only fragments that affect stats are shown.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed deprecated mods being sent when opening the loadout in DIM. Also adds artifice mods now.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed an issue where the tool did not put artifice mods on the class item if you forced the class item to be artifice.....\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed an issue where the default selection was the titan class, even if you had no titan characters.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.3.0\",\n    date: \"March 14, 2023\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Automatically adds artifice mods to your armor. This replaces minor and major mods where possible.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added the amount of used artifice mods to the result table overview (next to the mods). They are not calculated into the 'mod cost' column.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added new fragments, including Strand.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Adapted modslot cost of Resilience and Recovery mods.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Introduced more modules for asynchronous loading. This is more a speed improvement than a feature.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Reduced the maximum limit of reported results from 50,000 to 30,000. Note that D2AP still calculates every result, it just does not report them. This is a major speedup, and you usually should not even realize the change.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Increased the visual contrast of major mods in the results table. This means it is now easier to distinguish major from minor mods.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.REMOVE,\n        text: \"Removed the elemental affinity completely.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.REMOVE,\n        text: \"DISABLED the 'Zero Waste' feature. It will be re-enabled in the future.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.REMOVE,\n        text: \"DISABLED the 'Modslot Limitation' feature. It will be re-enabled in the future.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.2.16\",\n    date: \"December 7, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added Ember of Torches (with -10 Discipline).\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added Retrofit mods (mobility and resilience).\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added armor perk 'Seraph Sensor Array' to the dropdown.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a Game2Give message. Let's support the little lights together!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed artifice modslot.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Membership data is cached longer to make things faster and to ease the Bungie API.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.2.15\",\n    date: \"October 18, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added FOTL masks.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.2.13\",\n    date: \"September 23, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added an advanced setting to replace the 'Tiers' column with a 'Max Tiers' column. This is adds the amount of open modslots to the column, but ignores mod limitations at the moment. A T32 build without mods will now show T37.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.2.12\",\n    date: \"September 11, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Changed the layout to force the settings (left) and results (right) to be next to each other. This means that the page is more mobile approachable. This is also the first step to a more flexible layout.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.2.11\",\n    date: \"September 10, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a display for your owned upgrade materials in the character overview.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a notification to warn you when you create a modslot limitation that yields no results. Note that this will not (yet) show invalid combinations over all armor, just for the given slot you selected it in.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Reduced size of exotic icons so that the left side will not grow on Titan class.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The 'Performance Optimisation' settings will now always re-enable after a reload to prevent your browser being stuck in a crash-loop. (This is for you, iOS Safari users)\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Changed wording of the 'Performance Optimisation' setting to prevent people from using it incorrectly.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.2.10\",\n    date: \"September 2, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Updated Artifice Modslot Hash after the most recent hotfix.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.2.9\",\n    date: \"September 1, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Tooltips do now not obstruct the clicks of stats. This fixes the iOS stat selection issue.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.2.8c\",\n    date: \"August 24, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The manifest is now (again) automatically updated on version changes. This fixes your artifice problems at the beginning of a new season.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Added subclass hashes for Arc. This means that it now transfers to DIM.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.2.8b\",\n    date: \"August 24, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed Artifice modslots. You might need to wait a bit, alternatively delete the database (Account section) or re-log.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.2.8a\",\n    date: \"August 23, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Updated grenade and melee cooldowns for arc.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.2.8\",\n    date: \"August 23, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added Arc 3.0 fragments.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed tooltip issues on iOS devices.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed an infinite loading issue.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.2.7\",\n    date: \"June 25, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a link to my Discord bot Crayon.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed an issue where a large number of stored configurations would drastically slow down the app.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.2.6\",\n    date: \"June 8, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed an issue where the elemental selection would not give the correct results under very specific conditions.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.2.5\",\n    date: \"June 7, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added all of the new ability cooldowns.\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Completely reworked the ability cooldown tooltips. They now show the difference to the currently selected tier.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.2.4\",\n    date: \"June 3, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed the export to DIM. Thanks to bhollis for the fix!\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The manifest now automatically updates when Bungie updated it too, except just after a fixed timespan.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.2.3\",\n    date: \"May 24, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added Solar 3.0\",\n        issues: [],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Adapted artifice armor to the new Season.\",\n        issues: [],\n      },\n    ],\n  },\n  {\n    version: \"2.2.2\",\n    date: \"Mar 9, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"See what mods do by hovering over their name.\",\n        issues: [\"D2AP-41\"],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added Vow of the Disciple armor.\",\n        issues: [\"D2AP-35\"],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added 'Uniformed Officer' armor.\",\n        issues: [\"D2AP-35\"],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed Scatter grenades being Tier 3 (were T4 before).\",\n        issues: [\"D2AP-39\"],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Changed the color of the login button.\",\n        issues: [\"D2AP-37\"],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"When a selected character class does not exist, the tool will now select the first available class as default.\",\n      },\n    ],\n  },\n  {\n    version: \"2.2.1\",\n    date: \"Feb 22, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a switch to select between Stasis and Void 3.0 fragments. Stasis is enabled per default to ensure backwards compatibility of saved configurations.\",\n        issues: [\"D2AP-10\"],\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a debug section to the (new) account settings page. The account settings page does not do much yet, I just wanted to deploy the debug functions.\",\n        issues: [\"D2AP-23\"],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Modified super cooldowns for Witch Queen.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Added a minor text to the exotic overview that explains that exotics not in the inventory are shown in grayscale. You can also no longer select those.\",\n        issues: [\"D2AP-17\"],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Minor changes in how the database behaves on logout. It now deletes the inventory when you log out, but still keeps the manifest.\",\n        issues: [\"D2AP-27\"],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Users are now logged out when the Bungie.Net API is down.\",\n        issues: [\"D2AP-34\"],\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed Charge Harvester and Echo of Persistence incorrectly reducing Discipline instead of recovery when used on a Warlock.\",\n      },\n    ],\n  },\n  {\n    version: \"2.2.0\",\n    date: \"Feb 09, 2022\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added the ability to select armor perks and 5th slots. Just like the elements you can optionally enforce it to be on a certain slot. Useful if you want to build Iron Banner armor or utilize artifice modslots.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added the ability to limit the available points on each armor item for stat mods. This allows you to limit the kind of stat mods that are usable. You can now say 'do not use major intellect mods'.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added the ability to lock stat tiers. Previously you could only set 'Use Tier 3 or higher', now you can optionally set 'Enforce Tier 3'. This is useful for example if you want to enforce T3 mobility on a Titan.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a summary of important configuration choices to the result header to improve readability.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a button to open the DIM Loadout Builder with the current settings.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added an option that forces the correct element on non-masterworked armor pieces. This is per default enabled.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added cooldowns for class abilities (Dodge, Barricade, Rift).\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added visual indicators for minor and major mods in the overview table. The whole visualization is also more compact now.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added visual cursor indicator to every clickable input, e.g. in the exotic, element and perk/mod selection.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a (very basic) item tooltip.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Show the required material cost for each item. Note that this ignores your class item.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a stat summary table to the stat detail view. This allows you to easily share a stat distribution with others.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added 'Clear this section' button to each configuration section.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added support for your class items. You won't see a lot of this, except when you use the slot and element limitation in specific ways.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Detailed information is now in expandable containers to improve readability.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Show the seasonal icon for every item too.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added info text to the table headers.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"The character selection now shows the existing characters - and their emblems too!\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added Discord and another Ko-Fi link. You can find them in the character selection.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a changelog popup right at the start of the page. It only appears when a new update occured. You can always trigger it by clicking the current version number.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Now utilizes three webworkers instead of one. The process is simple, but generally speeds up the results by a huge margin.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added an Armor Investigation tab for data scientists.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a sidenav for smaller devices and reworked the top menubar.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"The detailed result table now shows the perk of an selected item, if it has one. This also applies to class items, if necessary.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Hovering over exotics in the exotic selection now displays their perk description.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added an advanced setting to disable white, green and blue armor.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added an advanced setting to ignore sunset armor.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Changed the word 'Permutation' to 'Combination' wherever it has been used.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Clicking on a setting that is already set does not re-trigger the calculation now. For example, selecting T3 recovery when it is already at T3 now does nothing.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The default for all stats is now tier 0 instead of tier 1, to make it consistent with the clear buttons.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The default setting for 'ignore non masterworked elements' is now 'off'.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The 'time required' number now measures the time from before the webworkers are spawned until all webworkers are done. Previously it only monitored the time required INSIDE the webworker, so it may show slower times.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed the width of the 'Exotic' header in the results table. This means that it is now farther away from the 'Mobility' column.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Completely reworked the elemental affinity selection. Per default it is now not fixed to a certain armor slot, but using a toggle button you can simply do so again.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The results header now screams at you in bright red letters when no results are found.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The alternating rows of the results details table have now a lighter color to make it easier to read.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed ability cooldowns for melee and grenade at tier 7 and tier 8.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Cooldowns now are shown in MM:SS instead of plain seconds.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Completely rewrote the core logic of D2ArmorPicker for the changes mentioned above.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Exotics you do not have in your vault or inventory are now greyed out.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed an issue where exotics were not shown at your first login.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Changed the color of important buttons so that they are easier to read.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The icons of items in the results are now loaded asynchronous from their hashes. This saves a lot of memory, as I do not have to send two icon URLs for each item - for each result. I will further improve this in a later version.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Maximum table output is now limited to 50 results (instead of 200). It still defaults to 20.}\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Completely reworked the visuals of the changelog. It is now more pleasing to the eye.\",\n      },\n    ] as ChangelogEntry[],\n  },\n  {\n    version: \"2.1.4\",\n    date: \"Dec 29, 2021\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Item stats are now built from their plugs and InvestmentStats (in case of some exotics). This fixes potentially invalid item stats when you use mods like Powerful Friends or Protective Light. A big thanks to u/deangaudet for reminding me that the API also reports the plugs of an item.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Only save necessary item types of the manifest (namely mods and armor). Also, save twhe investmentStats now.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Sped up the item update step.\",\n      },\n    ],\n  },\n  {\n    version: \"2.1.3\",\n    date: \"Dec 16, 2021\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Added new stat cooldowns\",\n      },\n    ],\n  },\n  {\n    version: \"2.1.2\",\n    date: \"Dec 1, 2021\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The changelog is now in a scrollable box.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Changed buymeacoffee to a ko-fi link. This way we can keep the PayPal support!\",\n      },\n    ],\n  },\n  {\n    version: \"2.1.1\",\n    date: \"Nov 3, 2021\",\n    entries: [\n      {\n        type: ChangelogEntryType.REMOVE,\n        text: \"Removed the HALLOWEEN SPECIAL feature. Maybe something like this will return some day?\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added tooltip to the item icons in the detailed overview to show the name of the item.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed an issue where the list of exotics did not load at the first login.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Saved configurations now contain the current software version for future reference.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Minor code quality improvements\",\n      },\n    ],\n  },\n  {\n    version: \"2.1.0 (major)\",\n    date: \"Oct 29, 2021\",\n    entries: [\n      {\n        type: ChangelogEntryType.REMOVE,\n        text: \"Completely removed V1 of the tool. If you had any problems with V2, you had over three months to report them.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"The stat selection now displays which stat tiers are added by stat mods (PF/RL) or stasis fragments in the configuration.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"You can now export (and import) individual configurations as well as all stored configurations at once.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a navigation bar to the title bar. On smaller screens it is replaced by two buttons in the character selection.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added more details to the last step of the 'What to do now?' section. It now lists the fragments and mods you selected.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Optimized code and reduced overall page size.\",\n      },\n    ],\n  },\n  {\n    version: \"2.0.16\",\n    date: \"Oct 26, 2021\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text:\n          \"Completely rewrote the core logic in order to fix the memory issues. \" +\n          \"The tool will now no longer crash when you have many armor items, but it's slightly slower than the previous approach. \" +\n          \"I tested it with 600 items - it works and does not crash, but takes up to a minute. \" +\n          \"Make sure to never get that much armor and to lock an exotic right away.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The rewrite also fixed the issue where the tool did not work in Safari, or more generally, on Mac and iPhone.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"The rewrite also fixed an issue where items could not be found when an result update was triggered while the inventory was updated.\",\n      },\n    ],\n  },\n  {\n    version: \"2.0.15\",\n    date: \"Oct 24, 2021\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Updated the visual display of the cluster page. It displays the stats in a better way now.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed an issue with login, where you were automatically logged in again and could not switch accounts.\",\n      },\n    ],\n  },\n  {\n    version: \"2.0.14\",\n    date: \"Oct 21, 2021\",\n    entries: [\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Updated URLs to the mobility, resilience and recovery images, as Bungie decided to change their URLs in today's hotfix.\",\n      },\n    ],\n  },\n  {\n    version: \"2.0.13\",\n    date: \"Oct 20, 2021\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a chart to the armor clustering page, showing each clusters average stats.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Stats over 100 are now seen as wasted.\",\n      },\n    ],\n  },\n  {\n    version: \"2.0.12\",\n    date: \"Oct 18, 2021\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added an experimental armor clustering feature.\",\n      },\n    ],\n  },\n  {\n    version: \"2.0.11\",\n    date: \"Oct 13, 2021\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"HALLOWEEN SPECIAL! Added (temporary) filter for halloween masks! This will be removed after the event.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fix: Clear the results if you switch character and no possible permutations can be found.\",\n      },\n    ],\n  },\n  {\n    version: \"2.0.10\",\n    date: \"Oct 10, 2021\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added 'Equip Items' button to the detailed item overview.\",\n      },\n    ],\n  },\n  {\n    version: \"2.0.9\",\n    date: \"Oct 6, 2021\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a detailed description of the steps required to build a selected result.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added a button to disable all four armor pieces at once.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Fixed an issue where the permutations were not updated after 'Ignore armor elemental affinities on masterworked armor' was changed.\",\n      },\n    ],\n  },\n  {\n    version: \"2.0.8\",\n    date: \"Oct 5, 2021\",\n    entries: [\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added this changelog to the help page.\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Added 'Move to Inventory' button (beta).\",\n      },\n      {\n        type: ChangelogEntryType.ADD,\n        text: \"Split up 'Assume items are masterworked' into three settings: Class Items, Legendaries, Exotics\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"'Try to optimize wasted stats' is now active per default.\",\n      },\n      {\n        type: ChangelogEntryType.MODIFIED,\n        text: \"Introduced an item buffer in the results component to further reduce memory usage.\",\n      },\n    ],\n  },\n];\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component } from \"@angular/core\";\nimport { ChangelogService } from \"../../../../services/changelog.service\";\n\n@Component({\n  selector: \"app-changelog-dialog\",\n  templateUrl: \"./changelog-dialog.component.html\",\n  styleUrls: [\"./changelog-dialog.component.css\"],\n})\nexport class ChangelogDialogComponent {\n  constructor(public changelog: ChangelogService) {}\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<h2 mat-dialog-title class=\"title\"\n  >D2ArmorPicker Changelog for Version {{ changelog.changelogData[0].version }}</h2\n>\n<mat-dialog-content class=\"mat-typography\">\n  <div>\n    Hi! There has been a new version of D2ArmorPicker! The following list shows all the relevant\n    changes. Note that you can always look at the changelogs in the Help tab.\n  </div>\n\n  <app-changelog-list></app-changelog-list>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button [mat-dialog-close]=\"true\" cdkFocusInitial color=\"primary\" mat-raised-button\n    >Thanks, I saw it!</button\n  >\n</mat-dialog-actions>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { CHANGELOG_DATA } from \"../data/changelog\";\nimport { ChangelogDialogComponent } from \"../components/authenticated-v2/components/changelog-dialog/changelog-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ChangelogService {\n  constructor(public dialog: MatDialog) {}\n\n  setChangelogSeenFlag() {\n    return localStorage.setItem(\"last-changelog-version\", this.changelogData[0].version);\n  }\n\n  get lastViewedChangelog() {\n    return localStorage.getItem(\"last-changelog-version\");\n  }\n\n  get mustShowChangelog() {\n    return this.changelogData[0].version !== this.lastViewedChangelog;\n  }\n\n  get changelogData() {\n    return CHANGELOG_DATA;\n  }\n\n  openChangelogDialog() {\n    const dialogRef = this.dialog.open(ChangelogDialogComponent);\n    dialogRef.afterClosed().subscribe((result) => {\n      this.setChangelogSeenFlag();\n    });\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Directive, Input, TemplateRef, ViewContainerRef } from \"@angular/core\";\n\n@Directive({\n  // we want to keep ngVar so it looks like ngFor and others\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: \"[ngVar]\",\n})\nexport class VarDirectiveDirective {\n  @Input()\n  set ngVar(context: unknown) {\n    this.context.$implicit = this.context.ngVar = context;\n\n    if (!this.hasView) {\n      this.vcRef.createEmbeddedView(this.templateRef, this.context);\n      this.hasView = true;\n    }\n  }\n\n  private context: {\n    $implicit: unknown;\n    ngVar: unknown;\n  } = {\n    $implicit: null,\n    ngVar: null,\n  };\n\n  private hasView: boolean = false;\n\n  constructor(private templateRef: TemplateRef<any>, private vcRef: ViewContainerRef) {}\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { AfterViewInit, Component } from \"@angular/core\";\nimport { ChangelogService } from \"../../../../services/changelog.service\";\n\n@Component({\n  selector: \"app-changelog-dialog-controller\",\n  templateUrl: \"./changelog-dialog-controller.component.html\",\n})\nexport class ChangelogDialogControllerComponent implements AfterViewInit {\n  constructor(public changelog: ChangelogService) {}\n  ngAfterViewInit(): void {\n    if (this.changelog.mustShowChangelog) this.changelog.openChangelogDialog();\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n<div *ngVar=\"status.status | async as stat\">\n  <mat-toolbar *ngIf=\"stat.apiError\" color=\"warn\" class=\"bar-api-warn\">\n    <span class=\"header-spacer\"></span>\n    The API is unavailable. The app will work with the data it has available right now.\n    <span class=\"header-spacer\"></span>\n  </mat-toolbar>\n  <div *ngVar=\"status.status | async as stat\">\n    <mat-toolbar *ngIf=\"stat.authError\" color=\"warn\" class=\"bar-api-warn\">\n      <span class=\"header-spacer\"></span>\n      There was an error with the authentication. The API may be down, or your session timed out.\n      <span class=\"header-spacer\"></span>\n      <!--You can either wait and try again later - the app will use the data it has available right now - or you can logout.-->\n    </mat-toolbar>\n  </div>\n\n  <mat-sidenav-container>\n    <mat-sidenav\n      #drawer\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [opened]=\"false\"\n      class=\"sidenav\"\n      fixedInViewport\n      mode=\"over\">\n      <mat-sidenav-content>\n        <mat-toolbar>\n          <button\n            (click)=\"drawer.toggle()\"\n            aria-label=\"Toggle sidenav\"\n            mat-stroked-button\n            type=\"button\">\n            <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n            Close Menu\n          </button>\n        </mat-toolbar>\n        <hr />\n        <mat-nav-list>\n          <a\n            (click)=\"drawer.toggle()\"\n            *ngFor=\"let link of navLinks; let idx = index\"\n            [class.active]=\"activeLinkIndex === idx\"\n            [routerLink]=\"link.link\"\n            mat-list-item>\n            {{ link.name }}\n          </a>\n          <hr />\n          <a href=\"https://ko-fi.com/mijago\" mat-list-item>\n            <a\n              color=\"primary\"\n              mat-raised-button\n              matTooltip=\"You like my work? This leads you to ko-fi.com, where you can easily support me!\"\n              target=\"_blank\">\n              <mat-icon inline>attach_money</mat-icon>\n              Buy me a coffee!\n            </a>\n          </a>\n          <a (click)=\"changelog.openChangelogDialog()\" mat-list-item>\n            <a mat-raised-button> Open changelog </a>\n          </a>\n          <hr />\n        </mat-nav-list>\n      </mat-sidenav-content>\n    </mat-sidenav>\n  </mat-sidenav-container>\n\n  <mat-toolbar id=\"header\" role=\"heading\">\n    <!-- Toggle Button for Sidenav -->\n    <button\n      (click)=\"drawer.toggle()\"\n      *ngIf=\"isHandset$ | async\"\n      aria-label=\"Toggle sidenav\"\n      mat-icon-button\n      type=\"button\">\n      <mat-icon>menu</mat-icon>\n    </button>\n\n    <!-- Header Title with Links -->\n    <span>\n      D2ArmorPicker <small>by Mijago</small>\n      <a\n        href=\"https://twitter.com/MijagoCoding/\"\n        matTooltip=\"Follow me on Twitter\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        <img alt=\"Twitter logo\" class=\"logo-twitter\" src=\"assets/logo-twitter.png\" />\n      </a>\n      <a\n        href=\"https://ko-fi.com/mijago\"\n        matTooltip=\"Buy me a coffee on Ko-Fi!\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        <img alt=\"Ko-Fi logo\" class=\"logo-kofi\" src=\"assets/logo-kofi.png\" />\n      </a>\n      <a\n        href=\"http://discord.d2armorpicker.com/\"\n        matTooltip=\"Join the Discord for support and development!\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        <img alt=\"Discord logo\" class=\"logo-discord\" src=\"assets/logo-discord.png\" />\n      </a>\n    </span>\n\n    <!-- Spacer for Flex Layout -->\n    <span class=\"header-spacer\"></span>\n\n    <!-- Navigation Links (Hidden on Small Screens) -->\n    <div class=\"hide-sm\">\n      <nav id=\"navbar\" mat-tab-nav-bar [tabPanel]=\"tabPanel\">\n        <a\n          *ngFor=\"let link of navLinks; let idx = index\"\n          [active]=\"activeLinkIndex === idx\"\n          [routerLink]=\"link.link\"\n          mat-tab-link>\n          {{ link.name }}\n        </a>\n      </nav>\n      <mat-tab-nav-panel #tabPanel></mat-tab-nav-panel>\n    </div>\n\n    <!-- Another Spacer -->\n    <span class=\"header-spacer\"></span>\n\n    <!-- Buttons on the Right -->\n    <div id=\"buttonContainer\">\n      <a\n        (click)=\"changelog.openChangelogDialog()\"\n        style=\"color: white\"\n        class=\"changelogText hide-sm\"\n        matTooltip=\"View the changelog dialog.\"\n        >v{{ version }}</a\n      >\n\n      <a\n        color=\"accent\"\n        class=\"hide-sm\"\n        href=\"https://ko-fi.com/mijago\"\n        mat-stroked-button\n        matTooltip=\"Support me on Ko-Fi!\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        <mat-icon inline>attach_money</mat-icon>\n        Buy me a coffee!\n      </a>\n\n      <button\n        (click)=\"refreshAll(true)\"\n        aria-label=\"Refresh\"\n        class=\"example-icon\"\n        mat-icon-button\n        matTooltip=\"Reload all items from the API.\">\n        <mat-icon>refresh</mat-icon>\n      </button>\n\n      <button\n        (click)=\"logout()\"\n        aria-label=\"Logout\"\n        class=\"example-icon\"\n        color=\"warn\"\n        mat-icon-button\n        matTooltip=\"Logout\">\n        <mat-icon>logout</mat-icon>\n      </button>\n    </div>\n  </mat-toolbar>\n\n  <router-outlet></router-outlet>\n\n  <span *ngVar=\"status.status | async as stat\">\n    <mat-progress-bar\n      *ngIf=\"\n        stat.updatingResultsTable ||\n        stat.calculatingResults ||\n        stat.calculatingPermutations ||\n        stat.updatingInventory ||\n        stat.updatingVendors ||\n        stat.updatingManifest\n      \"\n      id=\"loading\"\n      mode=\"indeterminate\"></mat-progress-bar>\n  </span>\n\n  <div *ngVar=\"status.status | async as stat\" class=\"info-container\">\n    <mat-card appearance=\"outlined\" *ngIf=\"stat.updatingVendors\" class=\"info info-updating-vendor\">\n      <mat-card-content>Updating vendor information inventory in the background.</mat-card-content>\n    </mat-card>\n    <mat-card\n      appearance=\"outlined\"\n      *ngIf=\"stat.updatingManifest\"\n      class=\"info info-updating-manifest\">\n      <mat-card-content\n        >Please wait:<br />\n        Updating the cached manifest.\n      </mat-card-content></mat-card\n    >\n    <mat-card\n      appearance=\"outlined\"\n      *ngIf=\"stat.updatingInventory\"\n      class=\"info info-updating-inventory\">\n      <mat-card-content>\n        Please wait:<br />\n        Updating the cached inventory.\n      </mat-card-content></mat-card\n    >\n    <mat-card\n      appearance=\"outlined\"\n      *ngIf=\"stat.calculatingResults\"\n      class=\"info info-calculating-results\">\n      <mat-card-content\n        >Please wait:<br />\n        Calculating possible results.\n        <mat-progress-bar [value]=\"computationProgress\"></mat-progress-bar>\n      </mat-card-content>\n    </mat-card>\n    <mat-card\n      appearance=\"outlined\"\n      *ngIf=\"stat.updatingResultsTable\"\n      class=\"info info-updating-results\">\n      <mat-card-content>Please wait:<br />Updating the result display table. </mat-card-content>\n    </mat-card>\n  </div>\n  <app-changelog-dialog-controller></app-changelog-dialog-controller>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnInit } from \"@angular/core\";\nimport { StatusProviderService } from \"../../../services/status-provider.service\";\nimport { Observable } from \"rxjs\";\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\nimport { map, shareReplay } from \"rxjs/operators\";\nimport { InventoryService } from \"../../../services/inventory.service\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { environment } from \"../../../../environments/environment\";\nimport { ChangelogService } from \"../../../services/changelog.service\";\nimport { CharacterStatsService } from \"../../../services/character-stats.service\";\n\n@Component({\n  selector: \"app-app-v2-core\",\n  templateUrl: \"./app-v2-core.component.html\",\n  styleUrls: [\"./app-v2-core.component.scss\"],\n})\nexport class AppV2CoreComponent implements OnInit {\n  version = environment.version;\n  activeLinkIndex = 0;\n  computationProgress = 0;\n  navLinks = [\n    {\n      link: \"/\",\n      name: \"Home\",\n    },\n    {\n      link: \"/cluster\",\n      name: \"Clustering\",\n    },\n    {\n      link: \"/help\",\n      name: \"Help\",\n    },\n    {\n      link: \"/investigate\",\n      name: \"Armor Investigation\",\n    },\n    {\n      link: \"/account\",\n      name: \"Account\",\n    },\n  ];\n\n  constructor(\n    public status: StatusProviderService,\n    private breakpointObserver: BreakpointObserver,\n    private inv: InventoryService,\n    private auth: AuthService,\n    private router: Router,\n    private characterStats: CharacterStatsService,\n    public changelog: ChangelogService\n  ) {}\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe([Breakpoints.Handset, Breakpoints.Small, Breakpoints.XSmall])\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  ngOnInit(): void {\n    this.activeLinkIndex = this.navLinks.indexOf(\n      this.navLinks.find((tab) => tab.link === this.router.url) as any\n    );\n\n    this.router.events.subscribe((res) => {\n      if (res instanceof NavigationEnd)\n        this.activeLinkIndex = this.navLinks.indexOf(\n          this.navLinks.find((tab) => tab.link === this.router.url) as any\n        );\n    });\n\n    this.characterStats.loadCharacterStats();\n\n    this.inv.calculationProgress.subscribe((progress) => {\n      this.computationProgress = progress;\n    });\n  }\n\n  async refreshAll(b: boolean) {\n    console.debug(\"Trigger refreshAll due to button press\");\n    await this.inv.refreshAll(b);\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<mat-card appearance=\"outlined\" id=\"card-results\">\n  <mat-card-header>\n    <mat-card-title>Results</mat-card-title>\n    <mat-card-subtitle>\n      <ng-container *ngIf=\"this.totalResults > 0\">\n        Click on a row to expand it and to see the list of the items required for this build.<br />\n      </ng-container>\n      <ng-container *ngIf=\"this.totalResults === 0\">\n        <div class=\"no-found-sadcat-container\">\n          <img src=\"assets/status/emoji/sadcat.png\" class=\"no-found-sadcat\" />&nbsp;\n        </div>\n        <span class=\"warning-none-found\"><b>No combinations found.</b></span>\n        You should loosen your settings a bit.\n      </ng-container>\n    </mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <div>\n      <div\n        class=\"config-summary-box\"\n        [style.display]=\"'flex'\"\n        [style.flex-direction]=\"'row'\"\n        [style.align-items]=\"'start center'\"\n        [style.gap]=\"'5px'\">\n        <mat-form-field\n          appearance=\"outline\"\n          subscriptSizing=\"dynamic\"\n          class=\"info-box\"\n          [style.display]=\"'flex'\">\n          <mat-label>Items Used</mat-label>\n          <input matInput readonly value=\"{{ this.itemCount | number }}\" />\n        </mat-form-field>\n        <mat-form-field\n          appearance=\"outline\"\n          subscriptSizing=\"dynamic\"\n          class=\"info-box\"\n          [style.display]=\"'flex'\">\n          <mat-label>Combinations generated</mat-label>\n          <input matInput readonly value=\"{{ this.totalResults | number }}\" />\n\n          <mat-icon\n            #tooltip=\"matTooltip\"\n            *ngIf=\"this.parsedResults !== this.totalResults && this.parsedResults === 5e4\"\n            class=\"report-problem-icon\"\n            matSuffix\n            matTooltip=\"Note: To speed up the whole process, only {{\n              this.parsedResults | number\n            }} results are listed in this table.\n                        If you need more entries, disable the limitation in the advanced settings.\"\n            >report_problem\n          </mat-icon>\n          <mat-icon\n            #tooltip=\"matTooltip\"\n            *ngIf=\"this.parsedResults !== this.totalResults && this.parsedResults === 1e6\"\n            class=\"report-problem-icon\"\n            matSuffix\n            matTooltip=\"Note: To prevent Out-Of-Memory crashes, only {{\n              this.parsedResults | number\n            }} results are listed in this table.\n                                You should narrow down your settings a bit.\"\n            >report_problem\n          </mat-icon>\n        </mat-form-field>\n        <mat-form-field\n          appearance=\"outline\"\n          subscriptSizing=\"dynamic\"\n          class=\"info-box\"\n          [style.display]=\"'flex'\">\n          <mat-label>Time required</mat-label>\n          <input matInput readonly value=\"{{ this.totalTime | number }}ms\" />\n        </mat-form-field>\n      </div>\n\n      <mat-form-field\n        appearance=\"outline\"\n        subscriptSizing=\"dynamic\"\n        subscriptSizing=\"dynamic\"\n        class=\"config-summary-box\"\n        disabled>\n        <mat-label>Summary of important configuration choices</mat-label>\n        <input matInput readonly value=\"&nbsp;\" class=\"hidden-input\" />\n        <mat-chip-listbox aria-label=\"Configuration Summary\">\n          <mat-chip-option\n            #tooltip=\"matTooltip\"\n            *ngIf=\"_config_selectedExotics.indexOf(-1) > -1\"\n            disableRipple\n            matTooltip=\"This setting enforces that all exotics are ignored.\"\n            >No Exotic\n          </mat-chip-option>\n          <mat-chip-option\n            #tooltip=\"matTooltip\"\n            *ngIf=\"\n              _config_selectedExotics.length === 1 && _config_selectedExotics.indexOf(-1) === -1\n            \"\n            disableRipple\n            matTooltip=\"This setting enforces that only one specific exotic is used.\"\n            >Exotic\n          </mat-chip-option>\n          <mat-chip-option\n            #tooltip=\"matTooltip\"\n            *ngIf=\"_config_selectedExotics.length > 1 && _config_selectedExotics.indexOf(-1) === -1\"\n            disableRipple\n            matTooltip=\"The tool will try to fulfill your settings for all the selected exotics. If you select exotics in different slots then it will search for legendary items to allow hotswapping with the same stats.\">\n            Multiple Exotics\n          </mat-chip-option>\n          <mat-chip-option\n            #tooltip=\"matTooltip\"\n            *ngIf=\"_config_maximumStatMods === 0\"\n            disableRipple\n            matTooltip=\"You enforced that no stat mods are used.\"\n            >No stat mods\n          </mat-chip-option>\n          <mat-chip-option\n            #tooltip=\"matTooltip\"\n            *ngIf=\"_config_tryLimitWastedStats\"\n            disableRipple\n            matTooltip=\"The tool will add minor stat mods to reduce wasted stats.\"\n            >Reduce wasted stats\n          </mat-chip-option>\n          <mat-chip-option\n            #tooltip=\"matTooltip\"\n            *ngIf=\"_config_modslotLimitation.length > 0\"\n            disableRipple\n            matTooltip=\"This setting limits available stat mod types, like major Intellect or Recovery.\"\n            >Stat Mod Limitation\n          </mat-chip-option>\n          <mat-chip-option\n            #tooltip=\"matTooltip\"\n            *ngIf=\"_config_armorPerkLimitation.length > 0\"\n            disableRipple\n            matTooltip=\"This setting enforces an specific armor perk or modslot for a specific armor slot.\">\n            Armor Perk or Slot\n          </mat-chip-option>\n          <mat-chip-option\n            #tooltip=\"matTooltip\"\n            *ngIf=\"_config_onlyShowResultsWithNoWastedStats\"\n            disableRipple\n            matTooltip=\"This setting means that only builds with no wasted stats are shown.\"\n            selected\n            >Zero Waste\n          </mat-chip-option>\n          <mat-chip-option\n            #tooltip=\"matTooltip\"\n            *ngIf=\"_config_assumeEveryLegendaryIsArtifice\"\n            disableRipple\n            matTooltip=\"EVERY legendary is assumed to be artifice.\"\n            selected\n            color=\"warn\">\n            <mat-icon inline style=\"height: 100%\">report_problem</mat-icon>\n            &nbsp;Assume legendaries are artifice&nbsp;\n            <mat-icon inline style=\"height: 100%\">report_problem</mat-icon>\n          </mat-chip-option>\n          <mat-chip-option\n            #tooltip=\"matTooltip\"\n            *ngIf=\"_config_assumeEveryExoticIsArtifice\"\n            disableRipple\n            matTooltip=\"EVERY exotic is assumed to be artifice.\"\n            selected\n            color=\"warn\">\n            <mat-icon inline style=\"height: 100%\">report_problem</mat-icon>\n            &nbsp;Assume exotics are artifice&nbsp;\n            <mat-icon inline style=\"height: 100%\">report_problem</mat-icon>\n          </mat-chip-option>\n          <mat-chip-option\n            #tooltip=\"matTooltip\"\n            *ngIf=\"_config_ignoreExistingExoticArtificeSlots\"\n            disableRipple\n            matTooltip=\"Ignoring existing artifice slots on exotic items.\"\n            selected\n            color=\"warn\">\n            <mat-icon inline style=\"height: 100%\">report_problem</mat-icon>\n            &nbsp;Ignoring existing artifice slots on exotic items&nbsp;\n            <mat-icon inline style=\"height: 100%\">report_problem</mat-icon>\n          </mat-chip-option>\n\n          <mat-chip-option\n            #tooltip=\"matTooltip\"\n            *ngIf=\"_config_onlyUseMasterworkedExotics\"\n            disableRipple\n            matTooltip=\"This setting means that only exotic armor pieces that are already masterworked are used.\"\n            selected>\n            Masterworked Exotics Only\n          </mat-chip-option>\n\n          <mat-chip-option\n            #tooltip=\"matTooltip\"\n            *ngIf=\"_config_onlyUseMasterworkedLegendaries\"\n            disableRipple\n            matTooltip=\"This setting means that only legendary armor pieces are already masterworked are used.\"\n            selected>\n            Masterworked Legendaries Only\n          </mat-chip-option>\n\n          <mat-chip-option\n            #tooltip=\"matTooltip\"\n            *ngIf=\"\n              !_config_onlyUseMasterworkedExotics &&\n              !_config_onlyUseMasterworkedLegendaries &&\n              (_config_assumeLegendariesMasterworked ||\n                _config_assumeExoticsMasterworked ||\n                _config_assumeClassItemMasterworked)\n            \"\n            disableRipple\n            matTooltip=\"Some masterwork assumptions are in place. This means that you may have to masterwork items. Look at your advanced settings to see which ones are activated.\">\n            Masterwork Assumption\n          </mat-chip-option>\n          <mat-chip-option\n            #tooltip=\"matTooltip\"\n            *ngIf=\"_config_includeCollectionRolls\"\n            disableRipple\n            matTooltip=\"Collection Exotic rolls will be included in the search.\">\n            Include Collection Rolls\n          </mat-chip-option>\n          <mat-chip-option\n            #tooltip=\"matTooltip\"\n            *ngIf=\"_config_includeVendorRolls\"\n            disableRipple\n            matTooltip=\"Currently available Vendor items will be included in the search.\">\n            Include Vendor Items\n          </mat-chip-option>\n        </mat-chip-listbox>\n      </mat-form-field>\n\n      <div class=\"hint-text\">\n        <mat-icon aria-hidden=\"false\" inline>info</mat-icon>\n        Note that you can change the sort column and order of the table by clicking on the headers.\n      </div>\n\n      <table\n        [dataSource]=\"tableDataSource\"\n        class=\"result-table\"\n        mat-table\n        matSort\n        matSortActive=\"Mods\"\n        matSortDirection=\"asc\"\n        multiTemplateDataRows>\n        <!--- Note that these columns can be defined in any order.\n         The actual rendered columns are set as a property on the row definition\" -->\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"mobility\">\n          <th\n            *matHeaderCellDef\n            mat-header-cell\n            mat-sort-header=\"Mobility\"\n            matTooltip=\"The mobility of this armor combination.\"\n            >Mobility\n          </th>\n          <td *matCellDef=\"let element\" class=\"statColumn\" mat-cell\n            >{{ element.stats[ArmorStat.Mobility] }}\n            <img\n              alt=\"Mobility\"\n              class=\"statIcon\"\n              src=\"https://www.bungie.net/common/destiny2_content/icons/e26e0e93a9daf4fdd21bf64eb9246340.png\" />\n          </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"resilience\">\n          <th\n            *matHeaderCellDef\n            mat-header-cell\n            mat-sort-header=\"Resilience\"\n            matTooltip=\"The resilience of this armor combination.\">\n            Resilience\n          </th>\n          <td *matCellDef=\"let element\" class=\"statColumn\" mat-cell\n            >{{ element.stats[ArmorStat.Resilience] }}\n            <img\n              alt=\"Resilience\"\n              class=\"statIcon\"\n              src=\"https://www.bungie.net/common/destiny2_content/icons/202ecc1c6febeb6b97dafc856e863140.png\" />\n          </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"recovery\">\n          <th\n            *matHeaderCellDef\n            mat-header-cell\n            mat-sort-header=\"Recovery\"\n            matTooltip=\"The recovery of this armor combination.\">\n            Recovery\n          </th>\n          <td *matCellDef=\"let element\" class=\"statColumn\" mat-cell\n            >{{ element.stats[ArmorStat.Recovery] }}\n            <img\n              alt=\"Recovery\"\n              class=\"statIcon\"\n              src=\"https://www.bungie.net/common/destiny2_content/icons/128eee4ee7fc127851ab32eac6ca91cf.png\" />\n          </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"discipline\">\n          <th\n            *matHeaderCellDef\n            mat-header-cell\n            mat-sort-header=\"Discipline\"\n            matTooltip=\"The discipline of this armor combination.\">\n            Discipline\n          </th>\n          <td *matCellDef=\"let element\" class=\"statColumn\" mat-cell\n            >{{ element.stats[ArmorStat.Discipline] }}\n            <img\n              alt=\"Discipline\"\n              class=\"statIcon\"\n              src=\"https://www.bungie.net/common/destiny2_content/icons/79be2d4adef6a19203f7385e5c63b45b.png\" />\n          </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"intellect\">\n          <th\n            *matHeaderCellDef\n            mat-header-cell\n            mat-sort-header=\"Intellect\"\n            matTooltip=\"The intellect of this armor combination.\">\n            Intellect\n          </th>\n          <td *matCellDef=\"let element\" class=\"statColumn\" mat-cell\n            >{{ element.stats[ArmorStat.Intellect] }}\n            <img\n              alt=\"Intellect\"\n              class=\"statIcon\"\n              src=\"https://www.bungie.net/common/destiny2_content/icons/d1c154469670e9a592c9d4cbdcae5764.png\" />\n          </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"strength\">\n          <th\n            *matHeaderCellDef\n            mat-header-cell\n            mat-sort-header=\"Strength\"\n            matTooltip=\"The strength of this armor combination.\"\n            >Strength\n          </th>\n          <td *matCellDef=\"let element\" class=\"statColumn\" mat-cell\n            >{{ element.stats[ArmorStat.Strength] }}\n            <img\n              alt=\"Strength\"\n              class=\"statIcon\"\n              src=\"https://www.bungie.net/common/destiny2_content/icons/ea5af04ccd6a3470a44fd7bb0f66e2f7.png\" />\n          </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"mods\">\n          <th\n            *matHeaderCellDef\n            mat-header-cell\n            mat-sort-header=\"Mods\"\n            matTooltip=\"The amount of mods required for each combination. Sorting after this takes the mod cost into account.\">\n            Used Mods\n          </th>\n          <td *matCellDef=\"let element\" mat-cell>\n            <app-table-mod-display\n              [mods]=\"element.mods\"\n              [artifice]=\"element.artifice\"\n              class=\"modPreview\"></app-table-mod-display>\n          </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"exotic\">\n          <th *matHeaderCellDef mat-header-cell> Exotic</th>\n          <td *matCellDef=\"let element\" mat-cell>\n            <img\n              *ngIf=\"element.exotic !== undefined\"\n              #tooltip=\"matTooltip\"\n              class=\"itemIcon\"\n              matTooltip=\"{{ element.exotic.name }}\"\n              src=\"https://bungie.net/{{ element.exotic.icon }}\" />\n            <img\n              *ngIf=\"element.exotic !== undefined\"\n              class=\"itemIconWatermark\"\n              src=\"https://bungie.net/{{ element.exotic.watermark }}\" />\n            <img\n              *ngIf=\"element.exotic === undefined\"\n              class=\"itemIcon\"\n              src=\"https://www.bungie.net/common/destiny2_content/icons/b4d05ef69d0c3227a7d4f7f35bbc2848.png\" />\n          </td>\n        </ng-container>\n\n        <!-- Vendor/Collection Column -->\n        <ng-container matColumnDef=\"source\">\n          <th *matHeaderCellDef mat-header-cell>Sources</th>\n          <td *matCellDef=\"let element\" mat-cell>\n            <span class=\"source-column\">\n              <img\n                *ngIf=\"!!element.usesCollectionRoll\"\n                matTooltip=\"This build uses a collection exotic. You have to collect it before you can use it.\"\n                class=\"collectionIcon\"\n                src=\"https://www.bungie.net/common/destiny2_content/icons/1d01287dd47af97fef16fa6acbac23ba.png\" />\n              <img\n                *ngIf=\"!!element.usesVendorRoll\"\n                matTooltip=\"This build uses a vendor item. You have to collect it before you can use it.\"\n                class=\"vendorIcon\"\n                src=\"https://www.bungie.net/common/destiny2_content/icons/8ef4b5bd32277dba9aee7c368404ad5d.jpg\" />\n            </span>\n          </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"dropdown\">\n          <th *matHeaderCellDef mat-header-cell></th>\n          <td *matCellDef=\"let element\" mat-cell>\n            <mat-icon\n              *ngIf=\"expandedElement !== element\"\n              matTooltip=\"Click to show details for this build.\">\n              expand_more\n            </mat-icon>\n            <mat-icon\n              *ngIf=\"expandedElement === element\"\n              matTooltip=\"Click to hide details for this build.\">\n              expand_less\n            </mat-icon>\n\n            <mat-icon\n              #tooltip=\"matTooltip\"\n              *ngIf=\"checkIfAnyItemsMayBeInvalid(element)\"\n              aria-hidden=\"false\"\n              aria-label=\"Error\"\n              class=\"report-problem-icon\"\n              inline\n              matTooltip=\"The stats of this build may be incorrect. Make sure that you remove every positive or negative stat modifier from the marked items.\">\n              report_problem\n            </mat-icon>\n          </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"tiers\">\n          <th\n            *matHeaderCellDef\n            mat-header-cell\n            mat-sort-header=\"Tiers\"\n            matTooltip=\"The amount of Tiers in this build. A tier is each successful 10-step of any stat.\"\n            >Tiers\n          </th>\n          <td *matCellDef=\"let element\" mat-cell> {{ element.tiers }} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"potential_tiers\">\n          <th\n            *matHeaderCellDef\n            mat-header-cell\n            mat-sort-header=\"Max Tiers\"\n            matTooltip=\"The potential reachable stat tiers with all N stat mods used. As of now, this does NOT take mod filters into consideration.\"\n            >Max Tiers\n          </th>\n          <td *matCellDef=\"let element\" mat-cell>\n            {{ element.tiers + (5 - element.modCount) }}\n          </td>\n        </ng-container>\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"waste\">\n          <th\n            *matHeaderCellDef\n            mat-header-cell\n            mat-sort-header=\"Waste\"\n            matTooltip=\"How many points are wasted. Any stat not ending in 0 adds to this value.\"\n            >Wasted\n          </th>\n          <td *matCellDef=\"let element\" mat-cell> {{ element.waste }} </td>\n        </ng-container>\n\n        <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n        <ng-container matColumnDef=\"expandedDetail\">\n          <td *matCellDef=\"let element\" [attr.colspan]=\"shownColumns.length\" mat-cell>\n            <div\n              [@detailExpand]=\"element === expandedElement ? 'expanded' : 'collapsed'\"\n              class=\"example-element-detail\">\n              <app-expanded-result-content [element]=\"element\"></app-expanded-result-content>\n            </div>\n          </td>\n        </ng-container>\n\n        <tr *matHeaderRowDef=\"shownColumns\" mat-header-row></tr>\n        <tr\n          (click)=\"expandedElement = expandedElement === element ? null : element\"\n          *matRowDef=\"let element; columns: shownColumns\"\n          [class.example-expanded-row]=\"expandedElement === element\"\n          class=\"example-element-row\"\n          mat-row>\n        </tr>\n        <tr\n          *matRowDef=\"let row; columns: ['expandedDetail']\"\n          class=\"example-detail-row\"\n          mat-row></tr>\n      </table>\n      <mat-paginator\n        [pageSizeOptions]=\"[10, 20, 50]\"\n        aria-label=\"Select page of periodic elements\"\n        pageSize=\"20\"\n        showFirstLastButtons>\n      </mat-paginator>\n    </div>\n  </mat-card-content>\n  <mat-card-actions *ngIf=\"totalResults > 0\">\n    <span class=\"flex-spacer\"></span>\n\n    <button mat-raised-button color=\"primary\" (click)=\"saveBuilds()\"\n      >Download results as JSON</button\n    >\n  </mat-card-actions>\n</mat-card>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\nimport { InventoryService } from \"../../../services/inventory.service\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { ConfigurationService } from \"../../../services/configuration.service\";\nimport { ArmorPerkOrSlot, ArmorStat, StatModifier } from \"../../../data/enum/armor-stat\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { StatusProviderService } from \"../../../services/status-provider.service\";\nimport { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { DestinyClass } from \"bungie-api-ts/destiny2\";\nimport { ArmorSlot } from \"../../../data/enum/armor-slot\";\nimport { FixableSelection } from \"../../../data/buildConfiguration\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { InventoryArmorSource } from \"src/app/data/types/IInventoryArmor\";\n\nexport interface ResultDefinition {\n  exotic:\n    | undefined\n    | {\n        icon: string;\n        name: string;\n        hash: string;\n      };\n  artifice: number[];\n  classItem: {\n    perk: ArmorPerkOrSlot;\n  };\n  mods: number[];\n  stats: number[];\n  statsNoMods: number[];\n  items: ResultItem[][];\n  tiers: number;\n  waste: number;\n  modCost: number;\n  modCount: number;\n  loaded: boolean;\n  usesCollectionRoll?: boolean;\n  usesVendorRoll?: boolean;\n}\n\nexport enum ResultItemMoveState {\n  TRANSFER_NONE,\n  WAITING_FOR_TRANSFER,\n  TRANSFERRING,\n  TRANSFERRED,\n  ERROR_DURING_TRANSFER,\n}\n\nexport interface ResultItem {\n  energy: number;\n  energyLevel: number;\n  hash: number;\n  itemInstanceId: string;\n  name: string;\n  exotic: boolean;\n  masterworked: boolean;\n  mayBeBugged: boolean;\n  stats: number[];\n  slot: ArmorSlot;\n  perk: ArmorPerkOrSlot;\n  transferState: ResultItemMoveState;\n  statsNoMods: number[];\n  source: InventoryArmorSource;\n}\n\n@Component({\n  selector: \"app-results\",\n  templateUrl: \"./results.component.html\",\n  styleUrls: [\"./results.component.scss\"],\n  animations: [\n    trigger(\"detailExpand\", [\n      state(\"collapsed, void\", style({ height: \"0px\" })),\n      state(\"expanded\", style({ height: \"*\" })),\n      transition(\"expanded <=> collapsed\", animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")),\n      transition(\"expanded <=> void\", animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")),\n    ]),\n  ],\n})\nexport class ResultsComponent implements OnInit, OnDestroy {\n  ArmorStat = ArmorStat;\n  public StatModifier = StatModifier;\n\n  private _results: ResultDefinition[] = [];\n  _config_assumeLegendariesMasterworked: Boolean = false;\n  _config_assumeExoticsMasterworked: Boolean = false;\n  _config_assumeClassItemMasterworked: Boolean = false;\n\n  _config_maximumStatMods: number = 5;\n  _config_selectedExotics: number[] = [];\n  _config_tryLimitWastedStats: boolean = false;\n  _config_onlyUseMasterworkedExotics: Boolean = false;\n  _config_onlyUseMasterworkedLegendaries: Boolean = false;\n  _config_includeCollectionRolls: Boolean = false;\n  _config_includeVendorRolls: Boolean = false;\n  _config_onlyShowResultsWithNoWastedStats: Boolean = false;\n  _config_assumeEveryLegendaryIsArtifice: Boolean = false;\n  _config_assumeEveryExoticIsArtifice: Boolean = false;\n  _config_ignoreExistingExoticArtificeSlots: Boolean = false;\n  _config_modslotLimitation: FixableSelection<number>[] = [];\n  _config_armorPerkLimitation: FixableSelection<ArmorPerkOrSlot>[] = [];\n\n  tableDataSource = new MatTableDataSource<ResultDefinition>();\n  @ViewChild(MatPaginator) paginator: MatPaginator | null = null;\n  @ViewChild(MatSort) sort: MatSort | null = null;\n  expandedElement: ResultDefinition | null = null;\n  shownColumns = [\n    \"exotic\",\n    \"mobility\",\n    \"resilience\",\n    \"recovery\",\n    \"discipline\",\n    \"intellect\",\n    \"strength\",\n    \"tiers\",\n    \"mods\",\n    \"dropdown\",\n  ];\n\n  // info values\n  selectedClass: DestinyClass = DestinyClass.Unknown;\n  totalTime: number = 0;\n  itemCount: number = 0;\n  totalResults: number = 0;\n  parsedResults: number = 0;\n\n  constructor(\n    private inventory: InventoryService,\n    private config: ConfigurationService,\n    private status: StatusProviderService\n  ) {}\n\n  ngOnInit(): void {\n    this.config.configuration.pipe(takeUntil(this.ngUnsubscribe)).subscribe((c) => {\n      this.selectedClass = c.characterClass;\n      this._config_assumeLegendariesMasterworked = c.assumeLegendariesMasterworked;\n      this._config_assumeExoticsMasterworked = c.assumeExoticsMasterworked;\n      this._config_assumeClassItemMasterworked = c.assumeClassItemMasterworked;\n      this._config_tryLimitWastedStats = c.tryLimitWastedStats;\n\n      this._config_maximumStatMods = c.maximumStatMods;\n      this._config_onlyUseMasterworkedExotics = c.onlyUseMasterworkedExotics;\n      this._config_onlyUseMasterworkedLegendaries = c.onlyUseMasterworkedLegendaries;\n      this._config_includeCollectionRolls = c.includeCollectionRolls;\n      this._config_includeVendorRolls = c.includeVendorRolls;\n      this._config_onlyShowResultsWithNoWastedStats = c.onlyShowResultsWithNoWastedStats;\n      this._config_assumeEveryLegendaryIsArtifice = c.assumeEveryLegendaryIsArtifice;\n      this._config_assumeEveryExoticIsArtifice = c.assumeEveryExoticIsArtifice;\n      this._config_ignoreExistingExoticArtificeSlots = c.ignoreExistingExoticArtificeSlots;\n      this._config_selectedExotics = c.selectedExotics;\n      this._config_armorPerkLimitation = Object.entries(c.armorPerks)\n        .filter((v) => v[1].value != ArmorPerkOrSlot.None)\n        .map((k) => k[1]);\n      this._config_modslotLimitation = Object.entries(c.maximumModSlots)\n        .filter((v) => v[1].value < 5)\n        .map((k) => k[1]);\n\n      let columns = [\n        \"exotic\",\n        \"mobility\",\n        \"resilience\",\n        \"recovery\",\n        \"discipline\",\n        \"intellect\",\n        \"strength\",\n        c.showPotentialTierColumn ? \"potential_tiers\" : \"tiers\",\n        \"mods\",\n      ];\n      if (c.showWastedStatsColumn) columns.push(\"waste\");\n      if (c.includeVendorRolls || c.includeCollectionRolls) columns.push(\"source\");\n      columns.push(\"dropdown\");\n      this.shownColumns = columns;\n    });\n\n    this.inventory.armorResults.pipe(takeUntil(this.ngUnsubscribe)).subscribe(async (value) => {\n      this._results = value.results;\n      this.itemCount = value.itemCount;\n      this.totalTime = value.totalTime;\n      this.totalResults = value.totalResults;\n      this.parsedResults = this._results.length;\n\n      this.status.modifyStatus((s) => (s.updatingResultsTable = true));\n      await this.updateData();\n      this.status.modifyStatus((s) => (s.updatingResultsTable = false));\n    });\n\n    this.tableDataSource.paginator = this.paginator;\n    this.tableDataSource.sort = this.sort;\n    this.tableDataSource.sortingDataAccessor = (data, sortHeaderId) => {\n      switch (sortHeaderId) {\n        case \"Mobility\":\n          return data.stats[ArmorStat.Mobility];\n        case \"Resilience\":\n          return data.stats[ArmorStat.Resilience];\n        case \"Recovery\":\n          return data.stats[ArmorStat.Recovery];\n        case \"Discipline\":\n          return data.stats[ArmorStat.Discipline];\n        case \"Intellect\":\n          return data.stats[ArmorStat.Intellect];\n        case \"Strength\":\n          return data.stats[ArmorStat.Strength];\n        case \"Tiers\":\n          return data.tiers;\n        case \"Max Tiers\":\n          return 10 * (data.tiers + (5 - data.modCount));\n        case \"Waste\":\n          return data.waste;\n        case \"Mods\":\n          return (\n            +100 * data.modCount +\n            //+ 40 * data.artifice.length\n            data.modCost\n          );\n      }\n      return 0;\n    };\n  }\n\n  async updateData() {\n    console.info(\"Table total results:\", this._results.length);\n    console.time(\"Update Table Data\");\n    this.tableDataSource.paginator = this.paginator;\n    this.tableDataSource.sort = this.sort;\n    this.tableDataSource.data = this._results;\n    console.timeEnd(\"Update Table Data\");\n  }\n\n  checkIfAnyItemsMayBeInvalid(element: ResultDefinition) {\n    return (\n      (element?.items.filter((d) => d.filter((x) => x.mayBeBugged).length > 0).length || 0) > 0\n    );\n  }\n\n  private ngUnsubscribe = new Subject();\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  saveBuilds() {\n    let jsonData = {\n      configCompressed: this.config.getCurrentConfigBase64Compressed(),\n      config: this.config.readonlyConfigurationSnapshot,\n      results: this._results.map((r) => {\n        let p = Object.assign({}, r);\n        p.items = p.items\n          .filter((i) => !!i[0])\n          .map((i) => {\n            return { hash: i[0].hash, instance: i[0].itemInstanceId } as any;\n          });\n        delete p.exotic;\n        return p;\n      }),\n    };\n\n    // download the file\n    let a = document.createElement(\"a\");\n    a.download = \"builds.json\";\n    const url = window.URL.createObjectURL(new Blob([JSON.stringify(jsonData, null, 2)]));\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"d2ap_results.json\");\n    document.body.appendChild(link);\n    link.click();\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\ntype costEntry = { [id: string]: number };\n\nexport const MASTERWORK_COST_LEGENDARY: { [id: number]: costEntry } = {\n  2: { shards: 1, glimmer: 500, core: 0, prism: 0, ascshard: 0 },\n  3: { shards: 1, glimmer: 500, core: 0, prism: 0, ascshard: 0 },\n  4: { shards: 2, glimmer: 500, core: 0, prism: 0, ascshard: 0 },\n  5: { shards: 2, glimmer: 1000, core: 0, prism: 0, ascshard: 0 },\n  6: { shards: 3, glimmer: 1000, core: 1, prism: 0, ascshard: 0 },\n  7: { shards: 3, glimmer: 2500, core: 2, prism: 0, ascshard: 0 },\n  8: { shards: 4, glimmer: 3000, core: 0, prism: 1, ascshard: 0 },\n  9: { shards: 4, glimmer: 3000, core: 0, prism: 2, ascshard: 0 },\n  10: { shards: 5, glimmer: 4000, core: 0, prism: 0, ascshard: 1 },\n};\nexport const MASTERWORK_COST_EXOTIC: { [id: number]: costEntry } = {\n  2: { shards: 1, glimmer: 500, core: 0, prism: 0, ascshard: 0 },\n  3: { shards: 2, glimmer: 1000, core: 0, prism: 0, ascshard: 0 },\n  4: { shards: 2, glimmer: 1000, core: 0, prism: 0, ascshard: 0 },\n  5: { shards: 3, glimmer: 2500, core: 0, prism: 0, ascshard: 0 },\n  6: { shards: 3, glimmer: 3000, core: 2, prism: 0, ascshard: 0 },\n  7: { shards: 4, glimmer: 3000, core: 3, prism: 0, ascshard: 0 },\n  8: { shards: 4, glimmer: 4000, core: 0, prism: 2, ascshard: 0 },\n  9: { shards: 5, glimmer: 4000, core: 0, prism: 3, ascshard: 0 },\n  10: { shards: 6, glimmer: 5000, core: 0, prism: 0, ascshard: 3 },\n};\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EnumDictionary } from \"../types/EnumDictionary\";\nimport { InventoryArmorSource } from \"../types/IInventoryArmor\";\n\nexport const InventoryArmorSourceNames: EnumDictionary<InventoryArmorSource, string> = {\n  [InventoryArmorSource.Inventory]: \"Inventory\",\n  [InventoryArmorSource.Collections]: \"Collections\",\n  [InventoryArmorSource.Vendor]: \"Vendor\",\n};\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DatabaseService } from \"src/app/services/database.service\";\n\n@Pipe({\n  name: \"getVendorName\",\n  pure: true,\n})\nexport class VendorNamePipe implements PipeTransform {\n  constructor(private database: DatabaseService) {}\n\n  async transform(value: number): Promise<string> {\n    const vendor = await this.database.vendorNames.where(\"vendorId\").equals(value).first();\n    return vendor?.vendorName ?? \"Unknown Vendor\";\n  }\n}\n\n@Pipe({\n  name: \"getVendorIdFromItemId\",\n  pure: true,\n})\nexport class VendorIdFromItemIdPipe implements PipeTransform {\n  constructor() {}\n\n  transform(value: string): number {\n    if (!value || !value.startsWith(\"v\")) return -1;\n    const vendorId = parseInt(value.substring(1).split(\"-\")[0]);\n    if (isNaN(vendorId)) return -1;\n    return vendorId;\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div>\n  <div class=\"tooltip-container\">\n    <table>\n      <tr>\n        <td colspan=\"3\">{{ itemTooltip?.name }}</td>\n      </tr>\n      <tr>\n        <td>Source</td>\n        <td colspan=\"2\">{{ getSourceText() }}</td>\n      </tr>\n      <tr *ngIf=\"isVendorItem && itemTooltip\">\n        <td>Vendor</td>\n        <td colspan=\"2\">{{\n          itemTooltip.itemInstanceId | getVendorIdFromItemId | getVendorName | async\n        }}</td>\n      </tr>\n      <tr>\n        <td>Current stats:</td>\n      </tr>\n      <tr *ngFor=\"let stat of itemTooltip?.stats; let i = index\">\n        <td>{{ getArmorStatName(i) }}</td>\n        <td>\n          <span *ngIf=\"!itemTooltip?.masterworked\">{{ stat }}</span>\n          <span *ngIf=\"itemTooltip?.masterworked\">{{ stat + 2 }}</span>\n        </td>\n        <td>\n          <div class=\"stat-display\">\n            <div class=\"stat-display-bar\" [style.width]=\"getWidth(stat)\">&nbsp;</div>\n            <div\n              class=\"stat-display-bar masterwork\"\n              [style.width]=\"getWidth(2)\"\n              *ngIf=\"itemTooltip?.masterworked\"\n              >&nbsp;</div\n            >\n          </div>\n        </td>\n      </tr>\n      <tr>\n        <td>Total base stats:</td>\n        <td>\n          {{ getTotalStats() }}\n        </td>\n      </tr>\n    </table>\n  </div>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, Input } from \"@angular/core\";\nimport { ResultItem } from \"../../results/results.component\";\nimport { ArmorStat, ArmorStatNames } from \"../../../../data/enum/armor-stat\";\nimport { InventoryArmorSourceNames } from \"src/app/data/enum/armor-source\";\nimport { InventoryArmorSource } from \"src/app/data/types/IInventoryArmor\";\n\n@Component({\n  selector: \"app-armor-tooltip-component\",\n  templateUrl: \"./armor-tooltip.component.html\",\n  styleUrls: [\"./armor-tooltip.component.css\"],\n})\nexport class ArmorTooltipComponent {\n  @Input() itemTooltip: ResultItem | undefined;\n\n  getSourceText() {\n    if (!this.itemTooltip) {\n      return \"\";\n    }\n\n    return InventoryArmorSourceNames[this.itemTooltip.source];\n  }\n\n  getArmorStatName(i: number) {\n    return ArmorStatNames[i as ArmorStat];\n  }\n\n  getWidth(stat: number) {\n    return Math.min(100, (stat / 32) * 100) + \"%\";\n  }\n\n  getTotalStats() {\n    return this.itemTooltip?.stats.reduce((a, b) => a + b, 0) || 0;\n  }\n\n  get isVendorItem() {\n    return this.itemTooltip?.source === InventoryArmorSource.Vendor;\n  }\n  constructor() {}\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {\n  Directive,\n  Input,\n  TemplateRef,\n  ElementRef,\n  OnInit,\n  HostListener,\n  ComponentRef,\n  OnDestroy,\n} from \"@angular/core\";\nimport { Overlay, OverlayPositionBuilder, OverlayRef } from \"@angular/cdk/overlay\";\nimport { ComponentPortal } from \"@angular/cdk/portal\";\nimport { ArmorTooltipComponent } from \"./armor-tooltip.component\";\nimport { ResultItem } from \"../../results/results.component\";\n\n@Directive({\n  selector: \"[itemTooltip]\",\n})\nexport class ItemTooltipRendererDirective implements OnInit, OnDestroy {\n  /**\n   * This will be used to show tooltip or not\n   * This can be used to show the tooltip conditionally\n   */\n  @Input() showToolTip: boolean = true;\n\n  //If this is specified then specified text will be showin in the tooltip\n  @Input() itemTooltip: ResultItem | undefined;\n\n  //If this is specified then specified template will be rendered in the tooltip\n  @Input() contentTemplate: TemplateRef<any> | undefined;\n\n  private _overlayRef: OverlayRef | undefined;\n\n  constructor(\n    private _overlay: Overlay,\n    private _overlayPositionBuilder: OverlayPositionBuilder,\n    private _elementRef: ElementRef\n  ) {}\n\n  /**\n   * Init life cycle event handler\n   */\n  ngOnInit() {\n    if (!this.showToolTip) {\n      return;\n    }\n\n    const positionStrategy = this._overlayPositionBuilder\n      .flexibleConnectedTo(this._elementRef)\n      .withPositions([\n        {\n          originX: \"center\",\n          originY: \"bottom\",\n          overlayX: \"center\",\n          overlayY: \"top\",\n          offsetY: 5,\n        },\n        {\n          originX: \"center\",\n          originY: \"top\",\n          overlayX: \"center\",\n          overlayY: \"bottom\",\n          offsetY: -5,\n        },\n      ]);\n\n    this._overlayRef = this._overlay.create({ positionStrategy });\n    this._overlayRef.addPanelClass(\"overlay-no-pointer-event\");\n  }\n\n  /**\n   * This method will be called whenever mouse enters in the Host element\n   * i.e. where this directive is applied\n   * This method will show the tooltip by instantiating the McToolTipComponent and attaching to the overlay\n   */\n  @HostListener(\"mouseenter\")\n  show() {\n    //attach the component if it has not already attached to the overlay\n    if (this._overlayRef && !this._overlayRef.hasAttached()) {\n      const tooltipRef: ComponentRef<ArmorTooltipComponent> = this._overlayRef.attach(\n        new ComponentPortal(ArmorTooltipComponent)\n      );\n      tooltipRef.instance.itemTooltip = this.itemTooltip;\n    }\n  }\n\n  /**\n   * This method will be called when mouse goes out of the host element\n   * i.e. where this directive is applied\n   * This method will close the tooltip by detaching the overlay from the view\n   */\n  @HostListener(\"mouseleave\")\n  hide() {\n    this.closeToolTip();\n  }\n\n  /**\n   * Destroy lifecycle event handler\n   * This method will make sure to close the tooltip\n   * It will be needed in case when app is navigating to different page\n   * and user is still seeing the tooltip; In that case we do not want to hang around the\n   * tooltip after the page [on which tooltip visible] is destroyed\n   */\n  ngOnDestroy() {\n    this.closeToolTip();\n  }\n\n  /**\n   * This method will close the tooltip by detaching the component from the overlay\n   */\n  private closeToolTip() {\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n    }\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { DatabaseService } from \"./database.service\";\nimport { IManifestArmor } from \"../data/types/IManifestArmor\";\n\nexport interface ItemIconData {\n  icon: string | undefined;\n  watermark: string | undefined;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ItemIconServiceService {\n  private itemLookup = new Map<number, IManifestArmor | undefined>();\n\n  constructor(private db: DatabaseService) {}\n\n  async getItemCached(hash: number): Promise<IManifestArmor | undefined> {\n    if (this.itemLookup.has(hash)) return this.itemLookup.get(hash) || undefined;\n    const item = await this.db.manifestArmor.where(\"hash\").equals(hash).first();\n    this.itemLookup.set(hash, item);\n    return item;\n  }\n\n  async getExoticPerkDescription(exotic: IManifestArmor): Promise<IManifestArmor | null> {\n    if (!exotic.exoticPerkHash) return null;\n    let perk = await this.getItemCached(exotic.exoticPerkHash);\n    return perk ?? null;\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div *ngIf=\"item\" class=\"item-icon-container\">\n  <img\n    class=\"item-icon\"\n    src=\"https://bungie.net/{{ item.icon }}\"\n    *ngIf=\"item.icon\"\n    #tooltip=\"matTooltip\"\n    matTooltip=\"{{ item.name }}\" />\n  <img\n    class=\"item-icon-overlay\"\n    src=\"https://bungie.net/{{ item.watermarkIcon }}\"\n    *ngIf=\"item.watermarkIcon\" />\n  <div\n    class=\"item-source-overlay\"\n    *ngIf=\"isFromVendor || isFromCollection\"\n    [class.vendor-item]=\"isFromVendor\"\n    [class.collection-item]=\"isFromCollection\"></div>\n  <div *ngIf=\"masterworked\" class=\"item-icon-masterwork-overlay\"></div>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { IManifestArmor } from \"../../../../data/types/IManifestArmor\";\nimport { ItemIconServiceService } from \"../../../../services/item-icon-service.service\";\nimport { InventoryArmorSource } from \"src/app/data/types/IInventoryArmor\";\n\n@Component({\n  selector: \"app-item-icon\",\n  templateUrl: \"./item-icon.component.html\",\n  styleUrls: [\"./item-icon.component.scss\"],\n})\nexport class ItemIconComponent implements AfterViewInit {\n  @Input()\n  itemHash: number = 0;\n\n  @Input()\n  masterworked: boolean = false;\n\n  @Input()\n  source: InventoryArmorSource = InventoryArmorSource.Inventory;\n  isFromVendor: boolean = false;\n  isFromCollection: boolean = false;\n\n  item: IManifestArmor | undefined = undefined;\n\n  constructor(private iconService: ItemIconServiceService) {}\n\n  async ngAfterViewInit() {\n    this.item = await this.iconService.getItemCached(this.itemHash);\n    this.isFromVendor = this.source === InventoryArmorSource.Vendor;\n    this.isFromCollection = this.source === InventoryArmorSource.Collections;\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<span class=\"overlay-icon-container\">\n  <ng-container *ngIf=\"customIconMods.indexOf(perk) > -1\">\n    <img\n      #tooltip=\"matTooltip\"\n      class=\"element-icon\"\n      matTooltip=\"{{ name }}\"\n      src=\"https://www.bungie.net/common/destiny2_content/icons/b4d05ef69d0c3227a7d4f7f35bbc2848.png\" />\n    <img class=\"overlay-icon\" *ngIf=\"customIconMods.indexOf(perk) > -1\" src=\"{{ url }}\" />\n  </ng-container>\n  <ng-container *ngIf=\"customIconMods.indexOf(perk) === -1\">\n    <img #tooltip=\"matTooltip\" class=\"element-icon\" matTooltip=\"{{ name }}\" src=\"{{ url }}\" />\n  </ng-container>\n</span>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, Input } from \"@angular/core\";\nimport {\n  ArmorPerkOrSlot,\n  ArmorPerkOrSlotIcons,\n  ArmorPerkOrSlotNames,\n} from \"../../../../data/enum/armor-stat\";\n\n@Component({\n  selector: \"app-armor-perk-icon\",\n  templateUrl: \"./armor-perk-icon.component.html\",\n  styleUrls: [\"./armor-perk-icon.component.scss\"],\n})\nexport class ArmorPerkIconComponent {\n  ArmorPerkOrSlot = ArmorPerkOrSlot;\n\n  customIconMods = [\n    ArmorPerkOrSlot.SlotCrotasEnd,\n    ArmorPerkOrSlot.SlotRootOfNightmares,\n    ArmorPerkOrSlot.SlotKingsFall,\n    ArmorPerkOrSlot.SlotVowOfTheDisciple,\n    ArmorPerkOrSlot.SlotArtifice,\n  ];\n\n  @Input()\n  perk: ArmorPerkOrSlot = ArmorPerkOrSlot.None;\n\n  constructor() {}\n\n  get name() {\n    return ArmorPerkOrSlotNames[this.perk];\n  }\n\n  get url() {\n    return ArmorPerkOrSlotIcons[this.perk];\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"count\",\n})\nexport class CountElementInListPipe implements PipeTransform {\n  transform(value: any[], searchItem: any = null): number {\n    return value.filter((d) => searchItem == null || d == searchItem).length;\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div>\n  <mat-toolbar *ngIf=\"mayAnyItemBeBugged\" class=\"invalid-item-box mat-elevation-z4\" color=\"warn\">\n    Warning: The stats of one or more items used for this build may be invalid.<br />\n    Please remove all negative/positive stat modifiers from the marked items.\n  </mat-toolbar>\n\n  This table shows you the expected stats of any item:\n  <table class=\"specificStatTable\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Mobility</th>\n        <th>Resilience</th>\n        <th>Recovery</th>\n        <th>Discipline</th>\n        <th>Intellect</th>\n        <th>Strength</th>\n        <th></th>\n        <th></th>\n      </tr>\n    </thead>\n    <!-- Items -->\n    <ng-container *ngFor=\"let items of element?.items\">\n      <tr *ngFor=\"let i of items\" [class.highlight-row]=\"items[0].slot % 2 === 0\">\n        <td>\n          <u\n            #tooltip=\"matTooltip\"\n            *ngIf=\"i.masterworked\"\n            class=\"item-name-mw\"\n            matTooltip=\"This item is already masterworked.\"\n            >{{ i.name }}</u\n          >\n          <span *ngIf=\"!i.masterworked\">{{ i.name }}</span>\n        </td>\n        <ng-container\n          *ngVar=\"\n            i.masterworked ||\n            (!i.exotic && config_assumeLegendariesMasterworked) ||\n            (i.exotic && config_assumeExoticsMasterworked)\n              ? 2\n              : 0 as bonus\n          \">\n          <td class=\"item-stat-container\">\n            <span [class.text-mw]=\"i.masterworked\" class=\"item-stat-value\">{{\n              i.stats[ArmorStat.Mobility] + bonus\n            }}</span>\n          </td>\n          <td class=\"item-stat-container\">\n            <span [class.text-mw]=\"i.masterworked\" class=\"item-stat-value\">{{\n              i.stats[ArmorStat.Resilience] + bonus\n            }}</span>\n          </td>\n          <td class=\"item-stat-container\">\n            <span [class.text-mw]=\"i.masterworked\" class=\"item-stat-value\">{{\n              i.stats[ArmorStat.Recovery] + bonus\n            }}</span>\n          </td>\n          <td class=\"item-stat-container\">\n            <span [class.text-mw]=\"i.masterworked\" class=\"item-stat-value\">{{\n              i.stats[ArmorStat.Discipline] + bonus\n            }}</span>\n          </td>\n          <td class=\"item-stat-container\">\n            <span [class.text-mw]=\"i.masterworked\" class=\"item-stat-value\">{{\n              i.stats[ArmorStat.Intellect] + bonus\n            }}</span>\n          </td>\n          <td class=\"item-stat-container\">\n            <span [class.text-mw]=\"i.masterworked\" class=\"item-stat-value\">{{\n              i.stats[ArmorStat.Strength] + bonus\n            }}</span>\n          </td>\n        </ng-container>\n        <td class=\"icon-column\">\n          <!-- Item Icon -->\n          <div [itemTooltip]=\"i\" class=\"item-icon-container\">\n            <app-item-icon\n              [itemHash]=\"i.hash\"\n              [masterworked]=\"i.masterworked\"\n              [source]=\"i.source\"\n              class=\"item-icon\">\n            </app-item-icon>\n          </div>\n        </td>\n        <td class=\"icon-column\">\n          <div style=\"position: relative; width: 25px\">\n            <app-armor-perk-icon [perk]=\"i.perk || 0\"></app-armor-perk-icon>\n          </div>\n        </td>\n        <!-- Disable -->\n        <td class=\"icon-column\">\n          <button\n            (click)=\"disableItem(i.itemInstanceId)\"\n            style=\"padding: 0; top: 0; left: 0\"\n            class=\"item-info-menu-btn\"\n            mat-icon-button\n            matTooltip=\"Disable this item from the results. It will not be used to generate results anymore, but you can always undo this.\">\n            <mat-icon>block</mat-icon>\n          </button>\n        </td>\n        <!-- Moving to inventory -->\n        <td *ngIf=\"i.transferState === 1 || i.transferState === 2\" class=\"icon-column\">\n          <mat-progress-spinner\n            class=\"item-loading-spinner\"\n            color=\"primary\"\n            diameter=\"22\"\n            mode=\"indeterminate\">\n          </mat-progress-spinner>\n        </td>\n        <td *ngIf=\"i.transferState === 3\">\n          <mat-icon\n            #tooltip=\"matTooltip\"\n            aria-hidden=\"false\"\n            aria-label=\"Success\"\n            class=\"item-moved-icon\"\n            inline\n            matTooltip=\"Item successfully moved to inventory.\">\n            check_circle_outline\n          </mat-icon>\n        </td>\n        <td *ngIf=\"i.transferState === 4\">\n          <mat-icon\n            #tooltip=\"matTooltip\"\n            aria-hidden=\"false\"\n            aria-label=\"Error\"\n            class=\"report-problem-icon\"\n            inline\n            matTooltip=\"This item could not be moved. Make sure that there is enough space on your character. This tool will not move items out of your inventory.\">\n            error_outline\n          </mat-icon>\n        </td>\n        <!-- // Moving to inventory -->\n        <td *ngIf=\"i.mayBeBugged\">\n          <mat-icon\n            #tooltip=\"matTooltip\"\n            aria-hidden=\"false\"\n            aria-label=\"Error\"\n            class=\"report-problem-icon\"\n            inline\n            matTooltip=\"The stats of this item may be incorrect. Make sure that you remove every positive or negative stat modifier from this item.\">\n            report_problem\n          </mat-icon>\n        </td>\n      </tr>\n    </ng-container>\n    <!-- Class Item -->\n    <tr *ngIf=\"showGenericClassItemRow && config_assumeClassItemMasterworked\">\n      <td #tooltip=\"matTooltip\" class=\"item-name-mw\" matTooltip=\"Class item should be masterworked.\"\n        >Any Class Item</td\n      >\n      <td class=\"text-mw\">{{ 2 }}</td>\n      <td class=\"text-mw\">{{ 2 }}</td>\n      <td class=\"text-mw\">{{ 2 }}</td>\n      <td class=\"text-mw\">{{ 2 }}</td>\n      <td class=\"text-mw\">{{ 2 }}</td>\n      <td class=\"text-mw\">{{ 2 }}</td>\n      <td></td>\n      <td>\n        <div style=\"position: relative; width: 25px\">\n          <app-armor-perk-icon [perk]=\"element?.classItem?.perk || 0\"></app-armor-perk-icon>\n        </div>\n      </td>\n      <td>\n        <button\n          (click)=\"disableAllItems()\"\n          style=\"padding: 0; top: 0; left: 0\"\n          class=\"item-info-menu-btn report-problem-icon\"\n          mat-icon-button\n          matTooltip=\"Disable all four items above from the results. They will not be used to generate results anymore, but you can always undo this.\">\n          <mat-icon>block</mat-icon>\n        </button>\n      </td>\n    </tr>\n    <tr *ngIf=\"showGenericClassItemRow && !config_assumeClassItemMasterworked\">\n      <td>Any Class Item</td>\n      <td class=\"text-centered\" colspan=\"6\">You chose to use non-masterworked class items.</td>\n      <td></td>\n      <td></td>\n      <td>\n        <button\n          (click)=\"disableAllItems()\"\n          style=\"padding: 0; top: 0; left: 0\"\n          class=\"item-info-menu-btn report-problem-icon\"\n          mat-icon-button\n          matTooltip=\"Disable all four items above from the results. They will not be used to generate results anymore, but you can always undo this.\">\n          <mat-icon>block</mat-icon>\n        </button>\n      </td>\n    </tr>\n    <!--Sum line without mods-->\n    <tr *ngVar=\"element?.statsNoMods as stats\" class=\"result-total-gear result-total highlight-row\">\n      <td>Total (armor)</td>\n      <td *ngIf=\"!!stats\">\n        {{ stats[ArmorStat.Mobility] }}\n        <img\n          alt=\"Mobility\"\n          class=\"statIcon\"\n          src=\"https://www.bungie.net/common/destiny2_content/icons/e26e0e93a9daf4fdd21bf64eb9246340.png\" />\n      </td>\n      <td *ngIf=\"!!stats\">\n        {{ stats[ArmorStat.Resilience] }}\n        <img\n          alt=\"Resilience\"\n          class=\"statIcon\"\n          src=\"https://www.bungie.net/common/destiny2_content/icons/202ecc1c6febeb6b97dafc856e863140.png\" />\n      </td>\n      <td *ngIf=\"!!stats\">\n        {{ stats[ArmorStat.Recovery] }}\n        <img\n          alt=\"Recovery\"\n          class=\"statIcon\"\n          src=\"https://www.bungie.net/common/destiny2_content/icons/128eee4ee7fc127851ab32eac6ca91cf.png\" />\n      </td>\n      <td *ngIf=\"!!stats\">\n        {{ stats[ArmorStat.Discipline] }}\n        <img\n          alt=\"Discipline\"\n          class=\"statIcon\"\n          src=\"https://www.bungie.net/common/destiny2_content/icons/79be2d4adef6a19203f7385e5c63b45b.png\" />\n      </td>\n      <td *ngIf=\"!!stats\">\n        {{ stats[ArmorStat.Intellect] }}\n        <img\n          alt=\"Intellect\"\n          class=\"statIcon\"\n          src=\"https://www.bungie.net/common/destiny2_content/icons/d1c154469670e9a592c9d4cbdcae5764.png\" />\n      </td>\n      <td *ngIf=\"!!stats\">\n        {{ stats[ArmorStat.Strength] }}\n        <img\n          alt=\"Strength\"\n          class=\"statIcon\"\n          src=\"https://www.bungie.net/common/destiny2_content/icons/ea5af04ccd6a3470a44fd7bb0f66e2f7.png\" />\n      </td>\n    </tr>\n    <!-- Config Mods -->\n    <tr class=\"result-config\">\n      <td>Configuration</td>\n      <td\n        ><span\n          *ngIf=\"this.configValues[ArmorStat.Mobility] !== 0\"\n          [class]=\"this.configValues[ArmorStat.Mobility] > 0 ? 'positive' : 'negative'\">\n          <span *ngIf=\"this.configValues[ArmorStat.Mobility] > 0\">+</span\n          >{{ this.configValues[ArmorStat.Mobility] }}\n        </span></td\n      >\n      <td\n        ><span\n          *ngIf=\"this.configValues[ArmorStat.Resilience] !== 0\"\n          [class]=\"this.configValues[ArmorStat.Resilience] > 0 ? 'positive' : 'negative'\">\n          <span *ngIf=\"this.configValues[ArmorStat.Resilience] > 0\">+</span\n          >{{ this.configValues[ArmorStat.Resilience] }}\n        </span></td\n      >\n      <td\n        ><span\n          *ngIf=\"this.configValues[ArmorStat.Recovery] !== 0\"\n          [class]=\"this.configValues[ArmorStat.Recovery] > 0 ? 'positive' : 'negative'\">\n          <span *ngIf=\"this.configValues[ArmorStat.Recovery] > 0\">+</span\n          >{{ this.configValues[ArmorStat.Recovery] }}\n        </span></td\n      >\n      <td\n        ><span\n          *ngIf=\"this.configValues[ArmorStat.Discipline] !== 0\"\n          [class]=\"this.configValues[ArmorStat.Discipline] > 0 ? 'positive' : 'negative'\">\n          <span *ngIf=\"this.configValues[ArmorStat.Discipline] > 0\">+</span\n          >{{ this.configValues[ArmorStat.Discipline] }}\n        </span></td\n      >\n      <td\n        ><span\n          *ngIf=\"this.configValues[ArmorStat.Intellect] !== 0\"\n          [class]=\"this.configValues[ArmorStat.Intellect] > 0 ? 'positive' : 'negative'\">\n          <span *ngIf=\"this.configValues[ArmorStat.Intellect] > 0\">+</span\n          >{{ this.configValues[ArmorStat.Intellect] }}\n        </span></td\n      >\n      <td\n        ><span\n          *ngIf=\"this.configValues[ArmorStat.Strength] !== 0\"\n          [class]=\"this.configValues[ArmorStat.Strength] > 0 ? 'positive' : 'negative'\">\n          <span *ngIf=\"this.configValues[ArmorStat.Strength] > 0\">+</span\n          >{{ this.configValues[ArmorStat.Strength] }}\n        </span></td\n      >\n    </tr>\n    <!-- +5 Mods -->\n    <tr *ngVar=\"element?.mods as mods\" class=\"highlight-row\">\n      <td>Minor Mods</td>\n      <td *ngVar=\"mods | count: StatModifier.MINOR_MOBILITY as count\">\n        <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×5</span>\n      </td>\n      <td *ngVar=\"mods | count: StatModifier.MINOR_RESILIENCE as count\">\n        <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×5</span>\n      </td>\n      <td *ngVar=\"mods | count: StatModifier.MINOR_RECOVERY as count\">\n        <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×5</span>\n      </td>\n      <td *ngVar=\"mods | count: StatModifier.MINOR_DISCIPLINE as count\">\n        <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×5</span>\n      </td>\n      <td *ngVar=\"mods | count: StatModifier.MINOR_INTELLECT as count\">\n        <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×5</span>\n      </td>\n      <td *ngVar=\"mods | count: StatModifier.MINOR_STRENGTH as count\">\n        <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×5</span>\n      </td>\n    </tr>\n    <!-- +10 Mods -->\n    <tr *ngVar=\"element?.mods as mods\">\n      <td>Major Mods</td>\n      <td *ngVar=\"mods | count: StatModifier.MAJOR_MOBILITY as count\">\n        <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×10</span>\n      </td>\n      <td *ngVar=\"mods | count: StatModifier.MAJOR_RESILIENCE as count\">\n        <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×10</span>\n      </td>\n      <td *ngVar=\"mods | count: StatModifier.MAJOR_RECOVERY as count\">\n        <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×10</span>\n      </td>\n      <td *ngVar=\"mods | count: StatModifier.MAJOR_DISCIPLINE as count\">\n        <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×10</span>\n      </td>\n      <td *ngVar=\"mods | count: StatModifier.MAJOR_INTELLECT as count\">\n        <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×10</span>\n      </td>\n      <td *ngVar=\"mods | count: StatModifier.MAJOR_STRENGTH as count\">\n        <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×10</span>\n      </td>\n    </tr>\n    <ng-container *ngVar=\"element?.artifice as mods\">\n      <tr>\n        <td>Artifice Mods</td>\n        <td *ngVar=\"mods | count: StatModifier.ARTIFICE_MOBILITY as count\">\n          <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×3</span>\n        </td>\n        <td *ngVar=\"mods | count: StatModifier.ARTIFICE_RESILIENCE as count\">\n          <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×3</span>\n        </td>\n        <td *ngVar=\"mods | count: StatModifier.ARTIFICE_RECOVERY as count\">\n          <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×3</span>\n        </td>\n        <td *ngVar=\"mods | count: StatModifier.ARTIFICE_DISCIPLINE as count\">\n          <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×3</span>\n        </td>\n        <td *ngVar=\"mods | count: StatModifier.ARTIFICE_INTELLECT as count\">\n          <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×3</span>\n        </td>\n        <td *ngVar=\"mods | count: StatModifier.ARTIFICE_STRENGTH as count\">\n          <span *ngIf=\"count > 0\" class=\"positive\">{{ count }}×3</span>\n        </td>\n      </tr>\n    </ng-container>\n\n    <!-- Final sum line -->\n    <tr *ngVar=\"element?.stats as stats\" class=\"result-total-all result-total highlight-row\">\n      <td>Total</td>\n      <td>\n        {{ stats[ArmorStat.Mobility] }}\n        <img\n          alt=\"Mobility\"\n          class=\"statIcon\"\n          src=\"https://www.bungie.net/common/destiny2_content/icons/e26e0e93a9daf4fdd21bf64eb9246340.png\" />\n      </td>\n      <td>\n        {{ stats[ArmorStat.Resilience] }}\n        <img\n          alt=\"Resilience\"\n          class=\"statIcon\"\n          src=\"https://www.bungie.net/common/destiny2_content/icons/202ecc1c6febeb6b97dafc856e863140.png\" />\n      </td>\n      <td>\n        {{ stats[ArmorStat.Recovery] }}\n        <img\n          alt=\"Recovery\"\n          class=\"statIcon\"\n          src=\"https://www.bungie.net/common/destiny2_content/icons/128eee4ee7fc127851ab32eac6ca91cf.png\" />\n      </td>\n      <td>\n        {{ stats[ArmorStat.Discipline] }}\n        <img\n          alt=\"Discipline\"\n          class=\"statIcon\"\n          src=\"https://www.bungie.net/common/destiny2_content/icons/79be2d4adef6a19203f7385e5c63b45b.png\" />\n      </td>\n      <td>\n        {{ stats[ArmorStat.Intellect] }}\n        <img\n          alt=\"Intellect\"\n          class=\"statIcon\"\n          src=\"https://www.bungie.net/common/destiny2_content/icons/d1c154469670e9a592c9d4cbdcae5764.png\" />\n      </td>\n      <td>\n        {{ stats[ArmorStat.Strength] }}\n        <img\n          alt=\"Strength\"\n          class=\"statIcon\"\n          src=\"https://www.bungie.net/common/destiny2_content/icons/ea5af04ccd6a3470a44fd7bb0f66e2f7.png\" />\n      </td>\n    </tr>\n  </table>\n</div>\n<ng-container *ngVar=\"calculateRequiredMasterworkCost() as cost\">\n  <div *ngIf=\"cost['total'] > 0\" style=\"margin-top: 10px\">\n    Total material cost:\n    <span *ngIf=\"cost['glimmer'] > 0\" class=\"currency-icon-container\" matTooltip=\"Glimmer\">\n      <img\n        alt=\"Glimmer\"\n        class=\"currency-icon\"\n        src=\"https://www.bungie.net/common/destiny2_content/icons/88993eaeedad32f42072df6f77f47311.png\" />\n      {{ cost[\"glimmer\"] | number }}\n    </span>\n\n    <span *ngIf=\"cost['core'] > 0\" class=\"currency-icon-container\" matTooltip=\"Enhancement Cores\">\n      <img\n        alt=\"Enhancement Cores\"\n        class=\"currency-icon\"\n        src=\"https://www.bungie.net/common/destiny2_content/icons/0a4eb695ed55b4e720ddc401460cc0f9.jpg\" />\n      {{ cost[\"core\"] }}\n    </span>\n\n    <span *ngIf=\"cost['prism'] > 0\" class=\"currency-icon-container\" matTooltip=\"Enhancement Prism\">\n      <img\n        alt=\"Enhancement Prism\"\n        class=\"currency-icon\"\n        src=\"https://www.bungie.net/common/destiny2_content/icons/dea2a35badf7466d4c2c2697ce6e8d87.jpg\" />\n      {{ cost[\"prism\"] }}\n    </span>\n\n    <span *ngIf=\"cost['ascshard'] > 0\" class=\"currency-icon-container\" matTooltip=\"Ascendant Shard\">\n      <img\n        alt=\"Ascendant Shard\"\n        class=\"currency-icon\"\n        src=\"https://www.bungie.net/common/destiny2_content/icons/0271d214fc3ec91b3def799a4b286b46.jpg\" />\n      {{ cost[\"ascshard\"] }}\n    </span>\n  </div>\n</ng-container>\n\n<div class=\"buttonContainer\">\n  <ng-container *ngVar=\"buildItemIdString(element) as text\">\n    <button\n      (click)=\"openSnackBar('Copied the DIM search query to your clipboard.')\"\n      [cdkCopyToClipboard]=\"text\"\n      color=\"primary\"\n      mat-raised-button\n      matTooltip=\"Use this button to copy a DIM search query to your clip board. It allows you to search the given items in DIM.\">\n      Copy DIM query to clipboard\n    </button>\n  </ng-container>\n  <button\n    (click)=\"goToDIM()\"\n    color=\"primary\"\n    mat-raised-button\n    matTooltip=\"Use this button to open this build as a DIM Loadout.\">\n    Open Loadout in DIM\n  </button>\n  <br />\n  <small>The following two buttons may not work for some at the moment:</small><br />\n  <button\n    (click)=\"moveItems()\"\n    mat-stroked-button\n    matTooltip=\"Click this button to move Items to your inventory. Make sure that you have enough space in your inventory. This tool will not move any items out of your inventory.\">\n    Move items to inventory (beta)\n  </button>\n  <button\n    (click)=\"moveItems(true)\"\n    mat-stroked-button\n    matTooltip=\"Click this button to equip the Items. Make sure that you have enough space in your inventory. This tool will not move any items out of your inventory.\">\n    Equip Items (beta)\n  </button>\n</div>\n\n<mat-accordion>\n  <mat-expansion-panel class=\"mat-elevation-z6\">\n    <mat-expansion-panel-header>\n      <mat-panel-title> What to do now? </mat-panel-title>\n      <mat-panel-description>\n        Detailed Instructions of to get your loadout ready.\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n    <div>\n      <ol>\n        <li>\n          Move all related items into your inventory\n          <span *ngIf=\"config_assumeClassItemMasterworked\"> and use a masterworked class item</span\n          >.\n        </li>\n        <!-- Masterwork and elements -->\n        <ng-container *ngVar=\"getItemsThatMustBeMasterworked() as mwItems\">\n          <li *ngIf=\"mwItems.length > 0\">\n            Masterwork these items:\n            <ul>\n              <li *ngFor=\"let item1 of mwItems\">\n                {{ item1.name }}\n              </li>\n            </ul>\n          </li>\n        </ng-container>\n\n        <!-- Mods -->\n        <li\n          *ngIf=\"\n            $any(element?.mods).length > 0 && ($any(element?.mods) | count: StatModifier.NONE) < 5\n          \"\n          >Equip the following stat mods:\n          <ul *ngVar=\"element?.mods as mods\">\n            <!-- MOBILITY -->\n            <ng-container *ngVar=\"mods | count: StatModifier.MINOR_MOBILITY as minorCount\">\n              <ng-container *ngVar=\"mods | count: StatModifier.MAJOR_MOBILITY as majorCount\">\n                <li *ngIf=\"minorCount + majorCount > 0\" class=\"positive\">\n                  <span *ngIf=\"minorCount > 0\">{{ minorCount }} minor</span>\n                  <ng-container *ngIf=\"minorCount > 0 && majorCount > 0\"> and</ng-container>\n                  <span *ngIf=\"majorCount > 0\"> {{ majorCount }} major </span>\n                  Mobility Mod<ng-container *ngIf=\"minorCount + majorCount > 1\">s</ng-container>\n                </li>\n              </ng-container>\n            </ng-container>\n            <!-- /MOBILITY -->\n            <!-- RESILIENCE -->\n            <ng-container *ngVar=\"mods | count: StatModifier.MINOR_RESILIENCE as minorCount\">\n              <ng-container *ngVar=\"mods | count: StatModifier.MAJOR_RESILIENCE as majorCount\">\n                <li *ngIf=\"minorCount + majorCount > 0\" class=\"positive\">\n                  <span *ngIf=\"minorCount > 0\">{{ minorCount }} minor</span>\n                  <ng-container *ngIf=\"minorCount > 0 && majorCount > 0\"> and</ng-container>\n                  <span *ngIf=\"majorCount > 0\"> {{ majorCount }} major </span>\n                  Resilience Mod<ng-container *ngIf=\"minorCount + majorCount > 1\">s</ng-container>\n                </li>\n              </ng-container>\n            </ng-container>\n            <!-- /RESILIENCE -->\n            <!-- RECOVERY -->\n            <ng-container *ngVar=\"mods | count: StatModifier.MINOR_RECOVERY as minorCount\">\n              <ng-container *ngVar=\"mods | count: StatModifier.MAJOR_RECOVERY as majorCount\">\n                <li *ngIf=\"minorCount + majorCount > 0\" class=\"positive\">\n                  <span *ngIf=\"minorCount > 0\">{{ minorCount }} minor</span>\n                  <ng-container *ngIf=\"minorCount > 0 && majorCount > 0\"> and</ng-container>\n                  <span *ngIf=\"majorCount > 0\"> {{ majorCount }} major </span>\n                  Recovery Mod<ng-container *ngIf=\"minorCount + majorCount > 1\">s</ng-container>\n                </li>\n              </ng-container>\n            </ng-container>\n            <!-- /RECOVERY -->\n            <!-- DISCIPLINE -->\n            <ng-container *ngVar=\"mods | count: StatModifier.MINOR_DISCIPLINE as minorCount\">\n              <ng-container *ngVar=\"mods | count: StatModifier.MAJOR_DISCIPLINE as majorCount\">\n                <li *ngIf=\"minorCount + majorCount > 0\" class=\"positive\">\n                  <span *ngIf=\"minorCount > 0\">{{ minorCount }} minor</span>\n                  <ng-container *ngIf=\"minorCount > 0 && majorCount > 0\"> and</ng-container>\n                  <span *ngIf=\"majorCount > 0\"> {{ majorCount }} major </span>\n                  Discipline Mod<ng-container *ngIf=\"minorCount + majorCount > 1\">s</ng-container>\n                </li>\n              </ng-container>\n            </ng-container>\n            <!-- /DISCIPLINE -->\n            <!-- INTELLECT -->\n            <ng-container *ngVar=\"mods | count: StatModifier.MINOR_INTELLECT as minorCount\">\n              <ng-container *ngVar=\"mods | count: StatModifier.MAJOR_INTELLECT as majorCount\">\n                <li *ngIf=\"minorCount + majorCount > 0\" class=\"positive\">\n                  <span *ngIf=\"minorCount > 0\">{{ minorCount }} minor</span>\n                  <ng-container *ngIf=\"minorCount > 0 && majorCount > 0\"> and</ng-container>\n                  <span *ngIf=\"majorCount > 0\"> {{ majorCount }} major </span>\n                  Intellect Mod<ng-container *ngIf=\"minorCount + majorCount > 1\">s</ng-container>\n                </li>\n              </ng-container>\n            </ng-container>\n            <!-- /INTELLECT -->\n            <!-- STRENGTH -->\n            <ng-container *ngVar=\"mods | count: StatModifier.MINOR_STRENGTH as minorCount\">\n              <ng-container *ngVar=\"mods | count: StatModifier.MAJOR_STRENGTH as majorCount\">\n                <li *ngIf=\"minorCount + majorCount > 0\" class=\"positive\">\n                  <span *ngIf=\"minorCount > 0\">{{ minorCount }} minor</span>\n                  <ng-container *ngIf=\"minorCount > 0 && majorCount > 0\"> and</ng-container>\n                  <span *ngIf=\"majorCount > 0\"> {{ majorCount }} major </span>\n                  Strength Mod<ng-container *ngIf=\"minorCount + majorCount > 1\">s</ng-container>\n                </li>\n              </ng-container>\n            </ng-container>\n            <!-- /STRENGTH -->\n          </ul>\n        </li>\n        <li *ngIf=\"config_enabledMods.length > 0\">\n          Equip any mods and fragments that you enabled in the configuration:\n          <ul>\n            <ng-container *ngFor=\"let mod of config_enabledMods\">\n              <ng-container *ngVar=\"ModInformation[mod] as info\">\n                <li *ngIf=\"info.type === ModifierType.CombatStyleMod\">\n                  Equip the mod {{ info.name }}\n                </li>\n              </ng-container>\n            </ng-container>\n            <ng-container *ngFor=\"let mod of config_enabledMods\">\n              <ng-container *ngVar=\"ModInformation[mod] as info\">\n                <li *ngIf=\"info.type === ModifierType.Stasis\">\n                  Equip the stasis fragment {{ info.name }}\n                </li>\n              </ng-container>\n            </ng-container>\n          </ul>\n        </li>\n      </ol>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel class=\"mat-elevation-z6\">\n    <mat-expansion-panel-header>\n      <mat-panel-title> Stat overview </mat-panel-title>\n      <mat-panel-description>\n        Shows a summary of all the stats and where they come from.\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n    <table class=\"stat-preview\">\n      <tr>\n        <td colspan=\"2\">Stat</td>\n        <td class=\"tier-column\">1</td>\n        <td class=\"tier-column\">2</td>\n        <td class=\"tier-column\">3</td>\n        <td class=\"tier-column\">4</td>\n        <td class=\"tier-column\">5</td>\n        <td class=\"tier-column\">6</td>\n        <td class=\"tier-column\">7</td>\n        <td class=\"tier-column\">8</td>\n        <td class=\"tier-column\">9</td>\n        <td class=\"tier-column\">10</td>\n        <td>Tiers</td>\n      </tr>\n      <tr *ngFor=\"let statId of armorStatIds\">\n        <td>{{ ArmorStatNames[statId] }}</td>\n        <td>\n          <img\n            alt=\"{{ ArmorStatNames[statId] }}\"\n            src=\"{{ ArmorStatIconUrls[statId] }}\"\n            style=\"height: 18px\" />\n        </td>\n        <td *ngFor=\"let d of getColumnForStat(statId)\">\n          <div *ngIf=\"!!d\" [class]=\"d\" class=\"energy-bar\"></div>\n        </td>\n        <td class=\"sum-tiers\">{{ getTiersForStat(statId) }}</td>\n      </tr>\n      <tr class=\"legend\">\n        <td colspan=\"2\">Armor</td>\n        <td>\n          <div class=\"energy-bar normal\"></div>\n        </td>\n        <td colspan=\"3\">Stat Mod</td>\n        <td>\n          <div class=\"energy-bar mod\"></div>\n        </td>\n        <td colspan=\"4\">Fragments & Mods</td>\n        <td>\n          <div class=\"energy-bar config\"></div>\n        </td>\n      </tr>\n      <ng-container *ngVar=\"element?.exotic as exotic\">\n        <tr *ngIf=\"exotic\">\n          <td>Exotic:</td>\n          <td colspan=\"10\">{{ exotic.name }}</td>\n          <td colspan=\"1\">\n            <div class=\"item-icon-container\">\n              <img class=\"item-icon\" src=\"https://bungie.net/{{ exotic.icon }}\" />\n              <img class=\"item-icon-overlay\" src=\"https://bungie.net/{{ exotic.watermark }}\" />\n            </div>\n          </td>\n        </tr>\n      </ng-container>\n    </table>\n  </mat-expansion-panel>\n</mat-accordion>\n<br />\n<br />\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * Additional copyrighted lines in this file:\n *  bhollis (adaption of the DIM links)\n */\n\nimport { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  ArmorPerkOrSlot,\n  ArmorPerkOrSlotDIMText,\n  ArmorStat,\n  ArmorStatHashes,\n  ArmorStatIconUrls,\n  ArmorStatNames,\n  SpecialArmorStat,\n  STAT_MOD_VALUES,\n  StatModifier,\n  SubclassHashes,\n} from \"src/app/data/enum/armor-stat\";\nimport { ResultDefinition, ResultItem, ResultItemMoveState } from \"../results.component\";\nimport { ConfigurationService } from \"../../../../services/configuration.service\";\nimport { ModInformation } from \"../../../../data/ModInformation\";\nimport { ModifierValue } from \"../../../../data/modifier\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { BungieApiService } from \"../../../../services/bungie-api.service\";\nimport { ModOrAbility } from \"../../../../data/enum/modOrAbility\";\nimport { DestinyClass } from \"bungie-api-ts/destiny2\";\nimport { SubclassNames, ModifierType, Subclass } from \"../../../../data/enum/modifierType\";\nimport { BuildConfiguration } from \"../../../../data/buildConfiguration\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { Subject } from \"rxjs\";\nimport { MASTERWORK_COST_EXOTIC, MASTERWORK_COST_LEGENDARY } from \"../../../../data/masterworkCost\";\nimport {\n  AssumeArmorMasterwork,\n  Loadout,\n  LoadoutParameters,\n} from \"@destinyitemmanager/dim-api-types\";\nimport { MembershipService } from \"src/app/services/membership.service\";\nimport { ArmorSlot } from \"src/app/data/enum/armor-slot\";\n\n@Component({\n  selector: \"app-expanded-result-content\",\n  templateUrl: \"./expanded-result-content.component.html\",\n  styleUrls: [\"./expanded-result-content.component.scss\"],\n})\nexport class ExpandedResultContentComponent implements OnInit, OnDestroy {\n  public showGenericClassItemRow = false;\n  public armorStatIds: ArmorStat[] = [0, 1, 2, 3, 4, 5];\n  public ModifierType = ModifierType;\n  public ModInformation = ModInformation;\n  public ArmorStatNames = ArmorStatNames;\n  public ArmorStatIconUrls = ArmorStatIconUrls;\n  public ArmorStat = ArmorStat;\n  public StatModifier = StatModifier;\n  public config_characterClass = DestinyClass.Unknown;\n  public config_assumeLegendariesMasterworked = false;\n  public config_assumeExoticsMasterworked = false;\n  public config_assumeClassItemMasterworked = false;\n  public config_enabledMods: ModOrAbility[] = [];\n  public DIMUrl: string = \"\";\n  configValues: [number, number, number, number, number, number] = [0, 0, 0, 0, 0, 0];\n\n  @Input()\n  element: ResultDefinition | null = null;\n\n  constructor(\n    private config: ConfigurationService,\n    private _snackBar: MatSnackBar,\n    private bungieApi: BungieApiService,\n    private membership: MembershipService\n  ) {}\n\n  public buildItemIdString(element: ResultDefinition | null) {\n    if (!element) return \"\";\n    let result = element.items\n      .flat()\n      .filter((d) => d.slot != ArmorSlot.ArmorSlotClass)\n      .map((d) => `id:'${d.itemInstanceId}'`)\n      .join(\" or \");\n\n    let classItemFilters = [\"is:classitem\"];\n    // Exotic class item\n    let classItems = element.items\n      .flat()\n      .filter((d) => d.slot == ArmorSlot.ArmorSlotClass)\n      .map((d) => `exactname:'${d.name}'`)\n      .join(\" or \");\n\n    if (classItems.length > 0) {\n      classItemFilters = [classItems];\n    }\n    if (\n      element.classItem.perk != ArmorPerkOrSlot.None &&\n      element.classItem.perk != ArmorPerkOrSlot.COUNT\n    ) {\n      classItemFilters.push(ArmorPerkOrSlotDIMText[element.classItem.perk || 0]);\n    }\n\n    if (classItemFilters.length > 1) result += ` or (${classItemFilters.join(\" \")})`;\n\n    return result;\n  }\n\n  openSnackBar(message: string) {\n    this._snackBar.open(message, \"\", {\n      duration: 2500,\n      politeness: \"polite\",\n    });\n  }\n\n  ngOnInit(): void {\n    // set this.showGenericClassItemRow to true if the number of non-empty elements in this.element.items is <= 4\n    this.showGenericClassItemRow =\n      (this.element?.items.filter((i) => i.length > 0).length || 0) <= 4;\n\n    this.config.configuration.pipe(takeUntil(this.ngUnsubscribe)).subscribe((c) => {\n      this.config_characterClass = c.characterClass;\n      this.config_assumeLegendariesMasterworked = c.assumeLegendariesMasterworked;\n      this.config_assumeExoticsMasterworked = c.assumeExoticsMasterworked;\n      this.config_assumeClassItemMasterworked = c.assumeClassItemMasterworked;\n      this.config_enabledMods = c.enabledMods;\n      this.configValues = c.enabledMods\n        .reduce((p, v) => {\n          p = p.concat(ModInformation[v].bonus);\n          return p;\n        }, [] as ModifierValue[])\n        .reduce(\n          (p, v) => {\n            if (v.stat == SpecialArmorStat.ClassAbilityRegenerationStat)\n              p[[1, 0, 2][c.characterClass]] += v.value;\n            else p[v.stat as number] += v.value;\n            return p;\n          },\n          [0, 0, 0, 0, 0, 0]\n        );\n\n      this.DIMUrl = this.generateDIMLink(c);\n    });\n  }\n\n  disableAllItems() {\n    this.config.modifyConfiguration((cb) => {\n      for (let item of this.element?.items.flat() as ResultItem[])\n        cb.disabledItems.push(item.itemInstanceId);\n    });\n  }\n\n  disableItem(itemInstanceId: string) {\n    this.config.modifyConfiguration((cb) => {\n      cb.disabledItems.push(itemInstanceId);\n    });\n  }\n\n  get mayAnyItemBeBugged() {\n    return (this.element?.items.flat().filter((d: ResultItem) => d.mayBeBugged).length || 0) > 0;\n  }\n\n  async getCharacterId() {\n    // get character Id\n    let characters = await this.membership.getCharacters();\n    characters = characters.filter((c) => c.clazz == this.config_characterClass);\n    if (characters.length == 0) {\n      this.openSnackBar(\"Error: Could not find a character to move the items to.\");\n      return null;\n    }\n    return characters[0].characterId;\n  }\n\n  async moveItems(equip = false) {\n    for (let item of (this.element?.items || []).flat()) {\n      item.transferState = ResultItemMoveState.WAITING_FOR_TRANSFER;\n    }\n\n    let characterId = await this.getCharacterId();\n    if (!characterId) return;\n\n    let allSuccessful = true;\n    let items = (this.element?.items || []).flat().sort((i) => (i.exotic ? 1 : -1));\n    for (let item of items) {\n      item.transferState = ResultItemMoveState.TRANSFERRING;\n      let success = await this.bungieApi.transferItem(item.itemInstanceId, characterId, equip);\n      item.transferState = success\n        ? ResultItemMoveState.TRANSFERRED\n        : ResultItemMoveState.ERROR_DURING_TRANSFER;\n      if (!success) allSuccessful = false;\n    }\n    if (allSuccessful) {\n      this.openSnackBar(\"Success! Moved all the items.\");\n    } else {\n      this.openSnackBar(\n        \"Some of the items could not be moved. Make sure that there is enough space in the specific slot. This tool will not move items out of your inventory.\"\n      );\n    }\n  }\n\n  getItemsThatMustBeMasterworked(): ResultItem[] | undefined {\n    return this.element?.items.flat().filter((item) => {\n      if (item.masterworked) return false;\n      if (item.exotic && !this.config_assumeExoticsMasterworked) return false;\n      if (!item.exotic && !this.config_assumeLegendariesMasterworked) return false;\n\n      return true;\n    });\n  }\n\n  calculateRequiredMasterworkCost() {\n    let cost: { [id: string]: number } = {\n      shards: 0,\n      glimmer: 0,\n      core: 0,\n      prism: 0,\n      ascshard: 0,\n      total: 0,\n    };\n    let items = this.element?.items.flat() || [];\n    items = items.filter(\n      (i) =>\n        i.energyLevel < 10 &&\n        ((i.exotic && this.config_assumeExoticsMasterworked) ||\n          (!i.exotic && this.config_assumeLegendariesMasterworked))\n    );\n    for (let item of items) {\n      let costList = item.exotic ? MASTERWORK_COST_EXOTIC : MASTERWORK_COST_LEGENDARY;\n      for (let n = item.energyLevel; n < 10; n++)\n        for (let entryName in costList[n + 1]) {\n          cost[entryName] += costList[n + 1][entryName];\n          cost[\"total\"]++;\n        }\n    }\n    return cost;\n  }\n\n  generateDIMLink(c: BuildConfiguration): string {\n    const mods: number[] = [];\n    const fragments: number[] = [];\n\n    // add selected mods\n    for (let mod of this.config_enabledMods) {\n      const modInfo = ModInformation[mod];\n      if (modInfo.type === ModifierType.CombatStyleMod) {\n        mods.push(modInfo.hash);\n      } else {\n        fragments.push(modInfo.hash);\n      }\n    }\n\n    // add stat mods\n    if (this.element) {\n      for (let mod of this.element?.mods || []) {\n        mods.push(STAT_MOD_VALUES[mod as StatModifier][3]);\n      }\n      // add artifice mods\n      for (let artificemod of this.element?.artifice || []) {\n        mods.push(STAT_MOD_VALUES[artificemod as StatModifier][3]);\n      }\n    }\n\n    var data: LoadoutParameters = {\n      statConstraints: [],\n      mods,\n      assumeArmorMasterwork: c.assumeLegendariesMasterworked\n        ? c.assumeExoticsMasterworked\n          ? AssumeArmorMasterwork.All\n          : AssumeArmorMasterwork.Legendary\n        : AssumeArmorMasterwork.None,\n    };\n\n    // iterate over ArmorStat enum\n    for (let stat of this.armorStatIds) {\n      data.statConstraints!.push({\n        statHash: ArmorStatHashes[stat],\n        minTier: c.minimumStatTiers[stat].value,\n        maxTier: c.minimumStatTiers[stat].fixed ? c.minimumStatTiers[stat].value : 10,\n      });\n    }\n\n    if (c.selectedExotics.length == 1) {\n      data.exoticArmorHash = c.selectedExotics[0];\n    } else {\n      var exos = this.element?.exotic;\n      if (exos) {\n        var exoticHash = exos.hash;\n        if (!!exoticHash) data.exoticArmorHash = parseInt(exoticHash, 10);\n      }\n    }\n\n    const loadout: Loadout = {\n      id: \"d2ap\", // this doesn't matter and will be replaced\n      name: `${SubclassNames[c.selectedModElement as Subclass]}: (${this.element?.exotic?.name}) D2ArmorPicker Loadout`,\n      classType: c.characterClass as number,\n      parameters: data,\n      equipped: (this.element?.items || [])\n        .filter((i) => i.length > 0)\n        .map(([i]) => ({\n          id: i.itemInstanceId,\n          hash: i.hash,\n        })),\n      unequipped: [],\n      clearSpace: false,\n    };\n\n    // Configure subclass\n    if (fragments.length) {\n      const socketOverrides = fragments.reduce<{\n        [socketIndex: number]: number;\n      }>((m, hash, i) => {\n        m[i + 7] = hash;\n        return m;\n      }, {});\n\n      if (\n        c.characterClass != DestinyClass.Unknown &&\n        c.selectedModElement != ModifierType.CombatStyleMod\n      ) {\n        const cl = SubclassHashes[c.characterClass];\n        const subclassHash = cl[c.selectedModElement];\n        if (subclassHash) {\n          loadout.equipped.push({\n            id: \"12345\", // This shouldn't need to be specified but right now it does. The value doesn't matter\n            hash: subclassHash,\n            socketOverrides,\n          });\n        }\n      }\n    }\n\n    var url =\n      \"https://app.destinyitemmanager.com/loadouts?loadout=\" +\n      encodeURIComponent(JSON.stringify(loadout));\n\n    return url;\n  }\n\n  goToDIM() {\n    window.open(this.DIMUrl, \"blank\");\n  }\n\n  getTiersForStat(statId: number) {\n    return Math.floor((this.element?.stats[statId] || 0) / 10);\n  }\n\n  getColumnForStat(statId: number) {\n    var configValueTiers = Math.floor(this.configValues[statId] / 10);\n    let d = [];\n    let total = 0;\n\n    let moddedTiersMinor = Math.ceil(\n      ((this.element?.mods.filter((k) => k == 1 + 2 * statId) || []).length * 5 +\n        (this.element?.mods.filter((k) => k == 2 + 2 * statId) || []).length * 10) /\n        10\n    );\n\n    var tiers = this.getTiersForStat(statId) - configValueTiers - moddedTiersMinor;\n    for (let n = 0; n < tiers; n++) {\n      d.push(\"normal\" + (++total > 10 ? \" over100\" : \"\"));\n    }\n\n    for (let cvt = 0; cvt < moddedTiersMinor; cvt++)\n      d.push(\"mod\" + (++total > 10 ? \" over100\" : \"\"));\n    for (let cvt = 0; cvt < configValueTiers; cvt++)\n      d.push(\"config\" + (++total > 10 ? \" over100\" : \"\"));\n\n    while (total++ < 10) d.push(\"\");\n    return d;\n  }\n\n  getRequiredMasterworkBonus() {\n    return (\n      (\n        this.element?.items.filter(\n          (i) =>\n            (!i[0].masterworked && !i[0].exotic && this.config_assumeLegendariesMasterworked) ||\n            (i[0].exotic && this.config_assumeExoticsMasterworked)\n        ) || []\n      ).length * 2\n    );\n  }\n\n  private ngUnsubscribe = new Subject();\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<mat-list>\n  <ng-container *ngFor=\"let log of changelog.changelogData\">\n    <span matSubheader class=\"title\">{{ log.version }}, released on {{ log.date }}</span>\n    <mat-list-item *ngFor=\"let entry of log.entries\">\n      <mat-icon\n        *ngIf=\"entry.type === 0\"\n        matTooltip=\"A new function has been added.\"\n        matListItemIcon>\n        add_circle_outline\n      </mat-icon>\n      <mat-icon *ngIf=\"entry.type === 1\" matTooltip=\"A function has been removed.\" matListItemIcon>\n        remove_circle_outline\n      </mat-icon>\n      <mat-icon *ngIf=\"entry.type === 2\" matTooltip=\"Something has been modified.\" matListItemIcon>\n        change_history\n      </mat-icon>\n      <span class=\"e\">\n        <p>{{ entry.text }}</p>\n      </span>\n    </mat-list-item>\n    <mat-divider></mat-divider>\n  </ng-container>\n</mat-list>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component } from \"@angular/core\";\nimport { ChangelogService } from \"../../../../services/changelog.service\";\n\n@Component({\n  selector: \"app-changelog-list\",\n  templateUrl: \"./changelog-list.component.html\",\n  styleUrls: [\"./changelog-list.component.scss\"],\n})\nexport class ChangelogListComponent {\n  constructor(public changelog: ChangelogService) {}\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div id=\"help-container\">\n  <a class=\"returnbutton hide-gt-sm\" color=\"primary\" mat-raised-button routerLink=\"/\">\n    Return to D2ArmorPicker\n  </a>\n\n  <mat-card appearance=\"outlined\">\n    <mat-card-header>\n      <mat-card-title>\n        <span\n          >About D2ArmorPicker <small> by Mijago</small>\n          <a href=\"https://twitter.com/MijagoCoding/\" target=\"_blank\" matTooltip=\"Birb App\">\n            <img alt=\"Me on twitter\" class=\"logo-twitter\" src=\"assets/logo-twitter.png\" />\n          </a>\n          <a\n            href=\"https://ko-fi.com/mijago\"\n            target=\"_blank\"\n            matTooltip=\"If you like my work, you can always buy me a coffee!\">\n            <img alt=\"Ko-Fi\" class=\"logo-twitter\" src=\"assets/logo-kofi.png\" />\n          </a>\n          <a\n            href=\"http://discord.d2armorpicker.com/\"\n            target=\"_blank\"\n            matTooltip=\"Visit me at the development & support discord.\">\n            <img alt=\"Discord\" class=\"logo-twitter\" src=\"assets/logo-discord.png\" />\n          </a>\n        </span>\n      </mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      D2ArmorPicker (or short D2AP) is a small web-app to quickly find armor that fits your desired\n      stat requirements. It uses the armor in your vault, inventory and postmaster, calculates every\n      possible variation and shows only those that fulfill the given requirements.\n      <br />\n      <br />\n      As I raided a lot and I mainly play meme builds, I wanted to be able to switch exotics and\n      have decent stats without being a burden on my team. That's why I developed the\n      <a href=\"https://github.com/Mijago/D2-Gear-Calculator\" target=\"_blank\"\n        >first version of this tool</a\n      >\n      in Python. After a few days I started to translate this tool\n      <a href=\"https://mijago.github.io/D2GearCalculator/\" target=\"_blank\">into a webpage</a>. My\n      friends liked it, but it didn't have API access. Thus I created the first version of\n      D2ArmorPicker, and after people started using and liking it, I started to completely rewrite\n      it - that's Version&nbsp;2!\n      <br />\n      <br />\n      I keep updating and improving this tool, but beware that it takes a bit, as I work on it on my\n      spare time. Feel free to follow me on Twitter\n      <a href=\"https://twitter.com/MijagoCoding/\" target=\"_blank\"\n        ><img alt=\"Me on twitter\" class=\"logo-twitter\" src=\"assets/logo-twitter.png\" /></a\n      >, I occasionally post updates there. If you like my tools and want to support me, head to\n      <a href=\"https://ko-fi.com/mijago\" target=\"_blank\">ko-fi.com</a> and buy me a coffee! ❤\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card appearance=\"outlined\">\n    <mat-card-header>\n      <mat-card-title> How do I use D2ArmorPicker? </mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      Follow these few steps:\n      <ol>\n        <li>Login. You already did this!</li>\n        <li>\n          [Optional] Pick an exotic you want to use. The tool will only display results for this\n          exotic. You can always undo this.\n        </li>\n        <li>\n          [Optional] Select additional mods/fragments that give a bonus (or penalty). These are\n          important if you want certain stat combinations even if you have penalties on your gear.\n        </li>\n        <li>\n          Select the stat distribution you seek. This is the heart of D2ArmorPicker. You just click\n          100 recovery and it will display you builds that have 100 recovery.\n          <i>Note that it automatically adds stat mods if necessary.</i>\n        </li>\n        <li>\n          Now look to the result table. On a normal desktop it should be on the right, on smaller\n          devices it might move below the configuration. The table lists multiple results and you\n          can sort it by your requirements.<br />\n          <b>Click</b> on an entry to open look the detailed view:\n          <div class=\"preview-image-container\">\n            <img\n              alt=\"Preview of the results table\"\n              class=\"preview-image\"\n              src=\"assets/armor-images/preview_result_details.png\" />\n          </div>\n          The example above shows a build that utilizes Dunemarchers and a zero-waste-build. To\n          achieve it, I have to move all the items in my inventory and equip them. After this, I\n          <i>masterwork</i> them and <i>add the mods</i> as the table displays them:\n          <ul>\n            <li><b>Discipline:</b> One major mod, one minor mod;</li>\n            <li><b>Intellect:</b> One major mod, one minor mod;</li>\n            <li><b>Strength:</b> One major mod;</li>\n            <li\n              >I also add Powerful Friends and Radiant Light, as I chose them in the\n              configuration.</li\n            >\n          </ul>\n        </li>\n      </ol>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card appearance=\"outlined\">\n    <mat-card-header>\n      <mat-card-title> Where can I grind high stat armor? </mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      There are many spots that give you mediocre armor, but for the really good builds you need the\n      correct armor. Here I provide a list of high-stat armor sources. It may not be complete, but a\n      good starting point.\n      <i>Last updated February 8, 2022.</i>\n\n      <ul>\n        <li> Farm legendary Dares!</li>\n        <li>\n          Clear Pit of Heresy Dungeon, the boss drop guarantees two stats to be 16 (or higher).</li\n        >\n        <li>\n          Farm a bunch of Spoils, go into Master Vault of Glass and buy armor at the final\n          chest.</li\n        >\n        <li> The list will be extended sometime in Witch Queen!</li>\n      </ul>\n      Some good armor rolls may look like these:\n      <div [style.display]=\"'flex'\" [style.flex-direction]=\"'row'\" id=\"armor-image-container\">\n        <img src=\"assets/armor-images/kabrs_battlecage.png\" />\n        <img src=\"assets/armor-images/lightkin_gauntlets.png\" />\n        <img src=\"assets/armor-images/phobos_warden_helm.png\" />\n        <img src=\"assets/armor-images/wild_hunt_vest.png\" />\n      </div>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card appearance=\"outlined\">\n    <mat-card-header>\n      <mat-card-title>Known Issues</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <ul>\n        <li *ngFor=\"let text of knownIssues\">{{ text }}</li>\n      </ul>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card appearance=\"outlined\">\n    <mat-card-header>\n      <mat-card-title>Changelog</mat-card-title>\n    </mat-card-header>\n    <mat-card-content class=\"changelog-table-container\">\n      <app-changelog-list></app-changelog-list>\n    </mat-card-content>\n  </mat-card>\n\n  <a class=\"returnbutton hide-gt-sm\" color=\"primary\" mat-raised-button routerLink=\"/\">\n    Return to D2ArmorPicker\n  </a>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component } from \"@angular/core\";\nimport { CHANGELOG_DATA } from \"../../../../data/changelog\";\n\n@Component({\n  selector: \"app-help-page\",\n  templateUrl: \"./help-page.component.html\",\n  styleUrls: [\"./help-page.component.css\"],\n})\nexport class HelpPageComponent {\n  knownIssues: string[] = [\n    \"When you click buttons on the page too fast are able to select an invalid state with no results. Just undo your changed settings. And be patient - the calculation is an expensive task.\",\n    \"Sometimes duplicate results are given. This happens when the inventory got updated twice (Race Condition). Only reported once, and not really a problem.\",\n  ];\n\n  changelog = CHANGELOG_DATA;\n\n  constructor() {}\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div>\n  <div class=\"tooltip-container\">\n    <table>\n      <tr>\n        <td class=\"exotic-name\" colspan=\"3\">{{ ArmorStatNames[stat] }} at Tier {{ tier }}</td>\n      </tr>\n      <tr>\n        <th style=\"min-width: 50px\">Stat</th>\n        <th style=\"min-width: 50px\">Tier {{ tier }}</th>\n        <th style=\"min-width: 50px\" colspan=\"2\" *ngIf=\"differenceTier !== tier\"\n          >∆ Tier {{ differenceTier }}</th\n        >\n      </tr>\n\n      <ng-container *ngFor=\"let entry of entries\">\n        <tr\n          *ngIf=\"\n            entry.description === null ||\n            entry.description === undefined ||\n            !!entry.description[characterClass]\n          \">\n          <ng-container *ngVar=\"valueFunction(entry, tier) as currentTierValue\">\n            <td>\n              <img src=\"https://www.bungie.net/{{ entry.icon }}\" *ngIf=\"entry.icon\" />\n              {{ entry.name }}\n            </td>\n            <td>{{ formatEntry(entry, currentTierValue) }}</td>\n            <ng-container *ngVar=\"valueFunction(entry, differenceTier) as selectedTierValue\">\n              <ng-container\n                *ngVar=\"\n                  getPercentageDifference(currentTierValue, selectedTierValue) as tierDifference\n                \">\n                <td *ngIf=\"differenceTier !== tier\">\n                  <span\n                    [class.good]=\"differenceTier < tier\"\n                    [class.bad]=\"differenceTier > tier\"\n                    *ngVar=\"-(selectedTierValue - currentTierValue) as dif\">\n                    {{ dif > 0 ? \"+\" : \"\" }}{{ formatEntry(entry, dif) }}\n                  </span>\n                </td>\n                <td *ngIf=\"differenceTier !== tier\">\n                  <span [class.good]=\"differenceTier < tier\" [class.bad]=\"differenceTier > tier\">\n                    ({{ tierDifference > 0 ? \"+\" : \"\"\n                    }}{{ tierDifference * 100 | number : \"1.0-0\" }}%)\n                  </span>\n                </td>\n              </ng-container>\n            </ng-container>\n            <td>\n              <ng-container *ngFor=\"let itemHash of entry.overrideIcons\">\n                <app-item-icon [itemHash]=\"itemHash\"> </app-item-icon>\n              </ng-container>\n\n              {{ entry.description }}\n            </td>\n          </ng-container>\n        </tr>\n      </ng-container>\n    </table>\n  </div>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, Input, OnInit } from \"@angular/core\";\nimport { ArmorStat, ArmorStatNames } from \"../../../../data/enum/armor-stat\";\nimport { formatTimeMMMSS, formatTimeSplit } from \"../../../../data/cooldowns/cooldown_definitions\";\nimport { ConfigurationService } from \"../../../../services/configuration.service\";\nimport { CharacterStats } from \"../../../../data/character_stats/schema\";\nimport {\n  CharacterStatType,\n  CharacterStatsService,\n  CooldownEntry,\n} from \"../../../../services/character-stats.service\";\nimport { DestinyClass } from \"bungie-api-ts/destiny2\";\n\nconst speedTextFormatter = (t: number) => (Math.round(t * 100) / 100).toFixed(2) + \"m/s\";\n\nfunction reformatTimeMMMSS(time: number) {\n  var str = formatTimeMMMSS(time);\n  if (time < 0) str = \"- \" + str;\n  return str;\n}\nfunction reformatTimeSplit(time: number) {\n  var str = formatTimeSplit(time);\n  if (time < 0) str = \"- \" + str;\n  return str;\n}\n@Component({\n  selector: \"app-stat-cooldown-tooltip\",\n  templateUrl: \"./stat-cooldown-tooltip.component.html\",\n  styleUrls: [\"./stat-cooldown-tooltip.component.css\"],\n})\nexport class StatCooldownTooltipComponent implements OnInit {\n  public ArmorStatNames = ArmorStatNames;\n\n  @Input() tier: number = 0;\n  @Input() differenceTier: number = 0; // the tier we use to show a difference for\n  @Input() stat: ArmorStat = ArmorStat.Mobility;\n\n  public entries: CooldownEntry[] = [];\n\n  constructor(\n    private config: ConfigurationService,\n    private characterStats: CharacterStatsService\n  ) {}\n\n  get characterClass(): DestinyClass {\n    return this.config.readonlyConfigurationSnapshot.characterClass;\n  }\n\n  ngOnInit(): void {\n    const statName = ArmorStatNames[this.stat] as keyof CharacterStats;\n    this.entries = this.characterStats.get(\n      statName,\n      this.config.readonlyConfigurationSnapshot.characterClass,\n      this.config.readonlyConfigurationSnapshot.selectedModElement,\n      this.config.readonlyConfigurationSnapshot.selectedExotics\n    );\n  }\n\n  formatEntry(entry: CooldownEntry, value: number) {\n    value = parseFloat(value.toFixed(2));\n    if (entry.valueType === CharacterStatType.Speed) {\n      return speedTextFormatter(value);\n    }\n\n    if (entry.valueType === CharacterStatType.Percentage) {\n      return `${value}%`;\n    }\n\n    if (entry.valueType === CharacterStatType.PercentagePerSecond) {\n      return `${value}%/s`;\n    }\n\n    if (entry.valueType === CharacterStatType.TimeMMSS) {\n      return reformatTimeMMMSS(value);\n    }\n\n    if (entry.valueType === CharacterStatType.Time) {\n      return reformatTimeSplit(value);\n    }\n\n    return value;\n  }\n\n  valueFunction(entry: CooldownEntry, tier: number) {\n    return entry.values[tier];\n  }\n\n  getPercentageDifference(v1: number, v2: number) {\n    return (v1 - v2) / Math.max(1, v2);\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport function formatTimeMMMSS(seconds: number) {\n  seconds = Math.abs(seconds);\n  var min = Math.floor(seconds / 60);\n  var sec = Math.floor(seconds - min * 60);\n\n  return `${min}:${sec < 10 ? \"0\" : \"\"}${sec}`;\n}\n\nexport function formatTimeSplit(seconds: number) {\n  seconds = Math.abs(seconds);\n  var ms = Math.floor((seconds * 10) % 10);\n  var min = Math.floor(seconds / 60);\n  var sec = Math.floor(seconds - min * 60);\n\n  let str = `${sec}s`;\n  if (ms > 0) str = `${sec}.${ms}s`;\n  if (min > 0) str = `${min}m ${str}`;\n  return str;\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {\n  Directive,\n  Input,\n  TemplateRef,\n  ElementRef,\n  OnInit,\n  HostListener,\n  ComponentRef,\n  OnDestroy,\n} from \"@angular/core\";\nimport { Overlay, OverlayPositionBuilder, OverlayRef } from \"@angular/cdk/overlay\";\nimport { ComponentPortal } from \"@angular/cdk/portal\";\nimport { StatCooldownTooltipComponent } from \"./stat-cooldown-tooltip.component\";\nimport { ArmorStat } from \"../../../../data/enum/armor-stat\";\n\n@Directive({\n  selector: \"[statCooldownTooltip]\",\n})\nexport class StatCooldownTooltipDirective implements OnInit, OnDestroy {\n  /**\n   * This will be used to show tooltip or not\n   * This can be used to show the tooltip conditionally\n   */\n  @Input() showToolTip: boolean = true;\n\n  @Input() tooltipTier: number = 0;\n  @Input() tooltipStat: ArmorStat = ArmorStat.Mobility;\n  @Input() tooltipDifferenceTier: number = 0; // the tier we use to show a difference for\n\n  //If this is specified then specified template will be rendered in the tooltip\n  @Input() contentTemplate: TemplateRef<any> | undefined;\n\n  private _overlayRef: OverlayRef | undefined;\n\n  constructor(\n    private _overlay: Overlay,\n    private _overlayPositionBuilder: OverlayPositionBuilder,\n    private _elementRef: ElementRef\n  ) {}\n\n  /**\n   * Init life cycle event handler\n   */\n  ngOnInit() {\n    if (!this.showToolTip) {\n      return;\n    }\n\n    const positionStrategy = this._overlayPositionBuilder\n      .flexibleConnectedTo(this._elementRef)\n      .withPositions([\n        {\n          originX: \"center\",\n          originY: \"bottom\",\n          overlayX: \"center\",\n          overlayY: \"top\",\n          offsetY: 5,\n        },\n        {\n          originX: \"center\",\n          originY: \"top\",\n          overlayX: \"center\",\n          overlayY: \"bottom\",\n          offsetY: -5,\n        },\n      ]);\n\n    this._overlayRef = this._overlay.create({ positionStrategy });\n    this._overlayRef.addPanelClass(\"overlay-no-pointer-event\");\n  }\n\n  /**\n   * This method will be called whenever mouse enters in the Host element\n   * i.e. where this directive is applied\n   * This method will show the tooltip by instantiating the McToolTipComponent and attaching to the overlay\n   */\n  @HostListener(\"mouseenter\")\n  show() {\n    //attach the component if it has not already attached to the overlay\n    if (this._overlayRef && !this._overlayRef.hasAttached()) {\n      const tooltipRef: ComponentRef<StatCooldownTooltipComponent> = this._overlayRef.attach(\n        new ComponentPortal(StatCooldownTooltipComponent)\n      );\n      tooltipRef.instance.tier = this.tooltipTier;\n      tooltipRef.instance.differenceTier = this.tooltipDifferenceTier;\n      tooltipRef.instance.stat = this.tooltipStat;\n    }\n  }\n\n  /**\n   * This method will be called when mouse goes out of the host element\n   * i.e. where this directive is applied\n   * This method will close the tooltip by detaching the overlay from the view\n   */\n  @HostListener(\"mouseleave\")\n  hide() {\n    this.closeToolTip();\n  }\n\n  /**\n   * Destroy lifecycle event handler\n   * This method will make sure to close the tooltip\n   * It will be needed in case when app is navigating to different page\n   * and user is still seeing the tooltip; In that case we do not want to hang around the\n   * tooltip after the page [on which tooltip visible] is destroyed\n   */\n  ngOnDestroy() {\n    this.closeToolTip();\n  }\n\n  /**\n   * This method will close the tooltip by detaching the component from the overlay\n   */\n  private closeToolTip() {\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n    }\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<ng-container *ngIf=\"!allowExactStats\">\n  <mat-button-toggle-group appearance=\"standard\" name=\"fontStyle\">\n    <mat-button-toggle\n      (click)=\"setValue(i)\"\n      *ngFor=\"let tier of TierRange; let i = index\"\n      [checked]=\"selectedTier === i\"\n      [class.isFromMod]=\"isAddedByConfigMods(i)\"\n      [class.mat-button-toggle-checked]=\"selectedTier >= i\"\n      [class.not-checked]=\"selectedTier < i\"\n      [disabled]=\"maximumAvailableTier < i\"\n      class=\"select-button\"\n      value=\"{{ i }}\">\n      <div\n        class=\"stat-button-content\"\n        statCooldownTooltip\n        [tooltipTier]=\"i\"\n        [tooltipDifferenceTier]=\"selectedTier\"\n        [tooltipStat]=\"stat\">\n        {{ i * 10 }}\n      </div>\n    </mat-button-toggle>\n  </mat-button-toggle-group>\n</ng-container>\n\n<ng-container *ngIf=\"allowExactStats\">\n  <mat-form-field>\n    <input\n      matInput\n      type=\"number\"\n      min=\"0\"\n      [max]=\"maximumAvailableTier * 10\"\n      [value]=\"selectedTier * 10\"\n      (input)=\"setValueMob($event)\" />\n  </mat-form-field>\n</ng-container>\n\n<button\n  mat-icon-button\n  (click)=\"toggleLockState()\"\n  matTooltip=\"Locking a stat enforces this stat to have exactly this value. Use this for example to get exact T3 of Mobility on a Titan.\">\n  <mat-icon *ngIf=\"!locked\">lock_open</mat-icon>\n  <mat-icon *ngIf=\"locked\" class=\"lock-locked\">lock</mat-icon>\n</button>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ArmorStat } from \"../../../../../data/enum/armor-stat\";\n\n@Component({\n  selector: \"app-stat-tier-selection\",\n  templateUrl: \"./stat-tier-selection.component.html\",\n  styleUrls: [\"./stat-tier-selection.component.scss\"],\n})\nexport class StatTierSelectionComponent {\n  readonly TierRange = new Array(11);\n  @Input() allowExactStats: boolean = false;\n  @Input() stat: ArmorStat = ArmorStat.Mobility;\n  @Input() statsByMods: number = 0;\n  @Input() maximumAvailableTier: number = 10;\n  @Input() selectedTier: number = 0;\n  @Input() locked: boolean = false;\n  @Output() selectedTierChange = new EventEmitter<number>();\n  @Output() lockedChange = new EventEmitter<boolean>();\n\n  constructor() {}\n\n  setValue(newValue: number) {\n    if (newValue <= this.maximumAvailableTier) {\n      this.selectedTier = newValue;\n      this.selectedTierChange.emit(newValue);\n    }\n  }\n\n  setValueMob(inputEvent: any) {\n    let newValue = parseInt(inputEvent.target.value);\n    newValue = Math.min(Math.max(newValue, 0), 100);\n    this.setValue(newValue / 10);\n  }\n\n  isAddedByConfigMods(index: number) {\n    return (\n      index > 0 &&\n      ((this.selectedTier - index >= 0 && this.selectedTier - index < this.statsByMods) || // on the right\n        // ( index <= this.statsByMods) // on the left\n        (this.selectedTier < this.statsByMods && index <= this.statsByMods))\n    );\n  }\n\n  toggleLockState() {\n    this.locked = !this.locked;\n    this.lockedChange.emit(this.locked);\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, Input } from \"@angular/core\";\nimport { ArmorStat, ArmorStatIconUrls, ArmorStatNames } from \"../../../../data/enum/armor-stat\";\n\n@Component({\n  selector: \"app-stat-icon\",\n  templateUrl: \"./stat-icon.component.html\",\n  styleUrls: [\"./stat-icon.component.css\"],\n})\nexport class StatIconComponent {\n  ArmorStatNames = ArmorStatNames;\n  ArmorStatIconUrls = ArmorStatIconUrls;\n  @Input()\n  stat: ArmorStat = ArmorStat.Mobility;\n\n  constructor() {}\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<span class=\"statContainerWrapper\">\n  <img [src]=\"ArmorStatIconUrls[stat]\" class=\"dialogStatIcon\" [alt]=\"ArmorStatNames[stat]\" />\n</span>\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<table>\n  <tr *ngFor=\"let enum of stats\">\n    <td>\n      {{ enum.name }}\n    </td>\n    <td><app-stat-icon [stat]=\"enum.value\"></app-stat-icon></td>\n    <td>\n      <app-stat-tier-selection\n        [stat]=\"enum.value\"\n        [allowExactStats]=\"config_allowExactStats\"\n        [statsByMods]=\"statsByMods[enum.value]\"\n        [maximumAvailableTier]=\"maximumPossibleTiers[enum.value]\"\n        [selectedTier]=\"minimumStatTiers[enum.value].value\"\n        [locked]=\"minimumStatTiers[enum.value].fixed\"\n        (selectedTierChange)=\"setSelectedTier(enum.value, $event)\"\n        (lockedChange)=\"setLockState(enum.value, $event)\"></app-stat-tier-selection>\n    </td>\n  </tr>\n</table>\n\n<span id=\"tierSelectButtonContainer\">\n  <span class=\"tierSelectButton\">\n    <button mat-stroked-button color=\"warn\" id=\"clearStatButton\" (click)=\"clearStatSelection()\"\n      >Clear</button\n    >\n  </span>\n  <span class=\"tierSelectButton\">\n    <button\n      mat-stroked-button\n      class=\"selectStatDistributionButton\"\n      [matMenuTriggerFor]=\"menu1\"\n      aria-label=\"Select builds with three stats at tier 10.\"\n      [disabled]=\"_statCombo3x100.length === 0\">\n      <mat-icon>expand_more</mat-icon>\n      Select 3x T10 Builds\n    </button>\n    <mat-menu #menu1=\"matMenu\" menu>\n      <button mat-menu-item *ngFor=\"let d of _statCombo3x100\" (click)=\"useStatPreset(d)\">\n        <app-stat-icon *ngFor=\"let p of d\" [stat]=\"p\" class=\"dialogStatIcon\"></app-stat-icon>\n      </button>\n    </mat-menu>\n  </span>\n  <span class=\"tierSelectButton\">\n    <button\n      mat-stroked-button\n      [matMenuTriggerFor]=\"menu2\"\n      aria-label=\"Select builds with four stats at tier 10.\"\n      [disabled]=\"_statCombo4x100.length === 0\">\n      <mat-icon>expand_more</mat-icon>\n      Select 4x T10 Builds\n    </button>\n    <mat-menu #menu2=\"matMenu\">\n      <button mat-menu-item *ngFor=\"let d of _statCombo4x100\" (click)=\"useStatPreset(d)\">\n        <app-stat-icon *ngFor=\"let p of d\" [stat]=\"p\" class=\"dialogStatIcon\"></app-stat-icon>\n      </button>\n    </mat-menu>\n  </span>\n</span>\n\n<br />\n<br />\n<!-- modOptimizationStrategy -->\n<div>\n  <div><b>Mod optimization strategy:</b></div>\n  <div>You can choose if the algorithm should keep an eye on amount or the cost of mods.</div>\n  <div>These settings are extremely expensive when paired with the reduced waste feature.</div>\n  <mat-button-toggle-group\n    [(ngModel)]=\"config_mod_strategy\"\n    (change)=\"setModOptimizationStrategy()\">\n    <mat-button-toggle\n      [value]=\"0\"\n      matTooltip=\"Fast. Will result in good and fast results. Some better results *may* be skipped.\"\n      >No extra logic (fast)</mat-button-toggle\n    >\n    <mat-button-toggle\n      [value]=\"1\"\n      matTooltip=\"Slower. Reduces the amount of used mods. This means that it will try to give you 4 mods instead of 5 whenever possible.\"\n      >Fewer mods, high cost (slow)</mat-button-toggle\n    >\n    <mat-button-toggle\n      [value]=\"2\"\n      matTooltip=\"Slower. Reduces the total cost of mods. This will result in less Intellect mods, for example.\"\n      >Many mods, low cost (slow)</mat-button-toggle\n    >\n  </mat-button-toggle-group>\n</div>\n<br />\n<div>\n  <mat-slide-toggle color=\"primary\" [checked]=\"config_reduce_waste\" (change)=\"toggleReduceWaste()\">\n    Add mods to reduce wasted stats (slower)\n  </mat-slide-toggle>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ArmorStat } from \"../../../../data/enum/armor-stat\";\nimport { ConfigurationService } from \"../../../../services/configuration.service\";\nimport { EnumDictionary } from \"../../../../data/types/EnumDictionary\";\nimport { FixableSelection, getDefaultStatDict } from \"../../../../data/buildConfiguration\";\nimport { InventoryService } from \"../../../../services/inventory.service\";\nimport { ModInformation } from \"../../../../data/ModInformation\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { ModOptimizationStrategy } from \"../../../../data/enum/mod-optimization-strategy\";\n\nfunction calcScore(d: number[]) {\n  let score = 0;\n  for (let n of d) {\n    score += Math.pow(10, 6 - n);\n  }\n  return score;\n}\n\n@Component({\n  selector: \"app-desired-stat-selection\",\n  templateUrl: \"./desired-stat-selection.component.html\",\n  styleUrls: [\"./desired-stat-selection.component.css\"],\n})\nexport class DesiredStatSelectionComponent implements OnInit, OnDestroy {\n  readonly stats: { name: string; value: ArmorStat }[];\n  minimumStatTiers: EnumDictionary<ArmorStat, FixableSelection<number>> = getDefaultStatDict(1);\n  maximumPossibleTiers: number[] = [10, 10, 10, 10, 10, 10];\n  statsByMods: number[] = [0, 0, 0, 0, 0, 0];\n  _statCombo4x100: ArmorStat[][] = [];\n  _statCombo3x100: ArmorStat[][] = [];\n  config_zero_waste = false;\n  config_mod_strategy = ModOptimizationStrategy.None;\n  config_reduce_waste = false;\n  config_allowExactStats = false;\n\n  constructor(\n    public config: ConfigurationService,\n    private inventory: InventoryService\n  ) {\n    this.stats = Object.keys(ArmorStat)\n      .filter((value) => !isNaN(Number(value)))\n      .map((value) => {\n        return { name: (ArmorStat as any)[value], value: +value };\n      });\n  }\n\n  ngOnInit(): void {\n    this.config.configuration.pipe(takeUntil(this.ngUnsubscribe)).subscribe((c) => {\n      const tmpStatsByMods = [0, 0, 0, 0, 0, 0];\n      for (let enabledMod of c.enabledMods) {\n        for (let bonus of ModInformation[enabledMod].bonus) {\n          tmpStatsByMods[bonus.stat] += bonus.value / 10;\n        }\n      }\n      this.statsByMods = tmpStatsByMods;\n      this.minimumStatTiers = c.minimumStatTiers;\n      this.config_zero_waste = c.onlyShowResultsWithNoWastedStats;\n      this.config_mod_strategy = c.modOptimizationStrategy;\n      this.config_reduce_waste = c.tryLimitWastedStats;\n      this.config_allowExactStats = c.allowExactStats;\n    });\n\n    this.inventory.armorResults.pipe(takeUntil(this.ngUnsubscribe)).subscribe((d) => {\n      // Do not update if we get 0 results\n      const tiers = d.maximumPossibleTiers || [10, 10, 10, 10, 10, 10];\n      console.debug(\"Maximum Possible Tiers\", { tiers: tiers });\n      if (tiers.filter((d) => d == 0).length < 6) {\n        this.maximumPossibleTiers = tiers;\n      }\n\n      this._statCombo3x100 = (d.statCombo3x100 || []).sort((a, b) => calcScore(b) - calcScore(a));\n      this._statCombo4x100 = d.statCombo4x100 || [];\n    });\n  }\n\n  setSelectedTier(stat: ArmorStat, value: number) {\n    //if (this.config.readonlyConfigurationSnapshot.minimumStatTiers[stat].value == value)\n    //return;\n\n    this.config.modifyConfiguration((c) => {\n      c.minimumStatTiers[stat].value = value;\n    });\n  }\n\n  clearStatSelection() {\n    this.config.modifyConfiguration((c) => {\n      for (let n = 0; n < 6; n++) c.minimumStatTiers[n as ArmorStat] = { fixed: false, value: 0 };\n    });\n  }\n\n  useStatPreset(d: ArmorStat[]) {\n    if (\n      d.filter((k) => this.config.readonlyConfigurationSnapshot.minimumStatTiers[k].value != 10)\n        .length == 0\n    )\n      return;\n\n    this.config.modifyConfiguration((c) => {\n      for (let armorStat of d) {\n        c.minimumStatTiers[armorStat].value = 10;\n      }\n    });\n  }\n\n  setLockState(stat: ArmorStat, value: boolean) {\n    this.config.modifyConfiguration((c) => {\n      c.minimumStatTiers[stat].fixed = value;\n    });\n  }\n\n  private ngUnsubscribe = new Subject();\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  setModOptimizationStrategy() {\n    this.config.modifyConfiguration((c) => {\n      c.modOptimizationStrategy = this.config_mod_strategy;\n    });\n  }\n\n  toggleReduceWaste() {\n    this.config.modifyConfiguration((c) => {\n      c.tryLimitWastedStats = !this.config_reduce_waste;\n    });\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<!--<div class=\"container\" [matTooltip]=\"statName\" #tooltip=\"matTooltip\">\n  <img class=\"modIcon\" [class.minor]=\"true\" [src]=\"ModUrl[1+3*stat]\">\n  <span class=\"modText\" [class.minor]=\"true\">×{{amountMinor}}</span>\n</div>\n-->\n\n<div class=\"row-mod\">\n  <ng-container *ngVar=\"artifice | count as artificeCount\">\n    <div class=\"container\" *ngIf=\"artificeCount > 0\" matTooltip=\"Artifice\" #tooltip=\"matTooltip\">\n      <img class=\"artificeIcon artifice\" [src]=\"artificeUrl\" />\n      <span class=\"modText artifice\">×{{ artificeCount }}</span>\n    </div>\n  </ng-container>\n\n  <ng-container *ngFor=\"let stat of modIndex\">\n    <ng-container *ngFor=\"let modType of modTypeIndex\">\n      <ng-container *ngVar=\"mods | count : modType + 3 * stat as count\">\n        <div\n          class=\"container\"\n          *ngIf=\"count > 0\"\n          [matTooltip]=\"getStatName(stat)\"\n          #tooltip=\"matTooltip\">\n          <img\n            class=\"modIcon modIcon_{{ getStatName(stat) }}\"\n            [class.minor]=\"modType === 1\"\n            [src]=\"ModUrl[modType + 3 * stat]\" />\n          <span class=\"modText\" [class.minor]=\"modType === 1\">×{{ count }}</span>\n        </div>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, Input } from \"@angular/core\";\nimport {\n  ArmorPerkOrSlot,\n  ArmorPerkOrSlotIcons,\n  ArmorStat,\n  ArmorStatNames,\n  StatModifier,\n} from \"src/app/data/enum/armor-stat\";\n\nexport const ModUrl: { [k: number]: string } = {\n  [StatModifier.MINOR_MOBILITY]:\n    \"https://www.bungie.net/common/destiny2_content/icons/a5d9a778feddb2a9036588490a4818b0.png\",\n  [StatModifier.MAJOR_MOBILITY]:\n    \"https://www.bungie.net/common/destiny2_content/icons/db4b34c79c834d3cf36b592c688ed22d.png\",\n  [StatModifier.ARTIFICE_MOBILITY]:\n    \"https://www.bungie.net/common/destiny2_content/icons/a5d9a778feddb2a9036588490a4818b0.png\",\n  [StatModifier.MINOR_RESILIENCE]:\n    \"https://www.bungie.net/common/destiny2_content/icons/1b4eec255df03ae088db1eb251654316.png\",\n  [StatModifier.MAJOR_RESILIENCE]:\n    \"https://www.bungie.net/common/destiny2_content/icons/db6c438e9ff1a21b03a1f0488560e6a3.png\",\n  [StatModifier.ARTIFICE_RESILIENCE]:\n    \"https://www.bungie.net/common/destiny2_content/icons/1b4eec255df03ae088db1eb251654316.png\",\n  [StatModifier.MINOR_RECOVERY]:\n    \"https://www.bungie.net/common/destiny2_content/icons/51d46295defdf93d77a62e3e895df5cd.png\",\n  [StatModifier.MAJOR_RECOVERY]:\n    \"https://www.bungie.net/common/destiny2_content/icons/f42cc43389f147d25f0ee2946f1ff1bd.png\",\n  [StatModifier.ARTIFICE_RECOVERY]:\n    \"https://www.bungie.net/common/destiny2_content/icons/51d46295defdf93d77a62e3e895df5cd.png\",\n  [StatModifier.MINOR_DISCIPLINE]:\n    \"https://www.bungie.net/common/destiny2_content/icons/9ba335d570610d1ae9cffa071d5bcb8e.png\",\n  [StatModifier.MAJOR_DISCIPLINE]:\n    \"https://www.bungie.net/common/destiny2_content/icons/e54f6af6a4577e4d66396e5285bb73c0.png\",\n  [StatModifier.ARTIFICE_DISCIPLINE]:\n    \"https://www.bungie.net/common/destiny2_content/icons/9ba335d570610d1ae9cffa071d5bcb8e.png\",\n  [StatModifier.MINOR_INTELLECT]:\n    \"https://www.bungie.net/common/destiny2_content/icons/a8808e7528b16474f8c9c65b4e53b52b.png\",\n  [StatModifier.MAJOR_INTELLECT]:\n    \"https://www.bungie.net/common/destiny2_content/icons/2399dff2dc6952ea65c2b8c594d00658.png\",\n  [StatModifier.ARTIFICE_INTELLECT]:\n    \"https://www.bungie.net/common/destiny2_content/icons/a8808e7528b16474f8c9c65b4e53b52b.png\",\n  [StatModifier.MINOR_STRENGTH]:\n    \"https://www.bungie.net/common/destiny2_content/icons/6b45221fccade87ee39f3a03efc6e9b9.png\",\n  [StatModifier.MAJOR_STRENGTH]:\n    \"https://www.bungie.net/common/destiny2_content/icons/66714f030b79a1517c657f1378216cca.png\",\n  [StatModifier.ARTIFICE_STRENGTH]:\n    \"https://www.bungie.net/common/destiny2_content/icons/6b45221fccade87ee39f3a03efc6e9b9.png\",\n};\n\n@Component({\n  selector: \"app-table-mod-display\",\n  templateUrl: \"./table-mod-display.component.html\",\n  styleUrls: [\"./table-mod-display.component.css\"],\n})\nexport class TableModDisplayComponent {\n  artificeUrl = ArmorPerkOrSlotIcons[ArmorPerkOrSlot.SlotArtifice];\n  modIndex = [0, 1, 2, 3, 4, 5];\n  modTypeIndex = [1, 2];\n  ModUrl = ModUrl;\n  @Input()\n  mods: number[] = [];\n\n  @Input()\n  artifice: number[] = [];\n\n  constructor() {}\n\n  getStatName(stat: number) {\n    return ArmorStatNames[stat as ArmorStat];\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div [class.disabled]=\"disabled\" class=\"container\">\n  <div class=\"energy\">\n    <div (mouseout)=\"hoveredSlot = -1\" class=\"energy-container\">\n      <div (click)=\"setValue(5)\" (mouseover)=\"hoveredSlot = 0\" class=\"energy-bar blocked\"></div>\n      <div (click)=\"setValue(5)\" (mouseover)=\"hoveredSlot = 0\" class=\"energy-bar blocked\"></div>\n      <div (click)=\"setValue(5)\" (mouseover)=\"hoveredSlot = 0\" class=\"energy-bar blocked\"></div>\n      <div (click)=\"setValue(5)\" (mouseover)=\"hoveredSlot = 0\" class=\"energy-bar blocked\"></div>\n      <div (click)=\"setValue(5)\" (mouseover)=\"hoveredSlot = 0\" class=\"energy-bar blocked\"></div>\n      <div\n        (click)=\"setValue(4)\"\n        (mouseover)=\"hoveredSlot = 1\"\n        [class.active]=\"5 - maximumModSlots >= 1\"\n        [class.hovered-higher]=\"hoveredSlot > -1 && hoveredSlot < 1\"\n        [class.hovered]=\"hoveredSlot >= 1\"\n        [class.blocked]=\"featureDisabled\"\n        class=\"energy-bar\"></div>\n      <div\n        (click)=\"setValue(3)\"\n        (mouseover)=\"hoveredSlot = 2\"\n        [class.active]=\"5 - maximumModSlots >= 2\"\n        [class.hovered-higher]=\"hoveredSlot > -1 && hoveredSlot < 2\"\n        [class.hovered]=\"hoveredSlot >= 2\"\n        [class.blocked]=\"featureDisabled\"\n        class=\"energy-bar\"></div>\n      <div\n        (click)=\"setValue(2)\"\n        (mouseover)=\"hoveredSlot = 3\"\n        [class.active]=\"5 - maximumModSlots >= 3\"\n        [class.hovered-higher]=\"hoveredSlot > -1 && hoveredSlot < 3\"\n        [class.hovered]=\"hoveredSlot >= 3\"\n        [class.blocked]=\"featureDisabled\"\n        class=\"energy-bar\"></div>\n      <div\n        (click)=\"setValue(1)\"\n        (mouseover)=\"hoveredSlot = 4\"\n        [class.active]=\"5 - maximumModSlots >= 4\"\n        [class.hovered-higher]=\"hoveredSlot > -1 && hoveredSlot < 4\"\n        [class.hovered]=\"hoveredSlot >= 4\"\n        [class.blocked]=\"featureDisabled\"\n        class=\"energy-bar\"></div>\n      <div\n        (click)=\"setValue(0)\"\n        (mouseover)=\"hoveredSlot = 5\"\n        [class.active]=\"5 - maximumModSlots === 5\"\n        [class.hovered-higher]=\"hoveredSlot > -1 && hoveredSlot < 5\"\n        [class.hovered]=\"hoveredSlot === 5\"\n        [class.blocked]=\"featureDisabled\"\n        class=\"energy-bar\"></div>\n    </div>\n    <br />\n    <div *ngVar=\"hoveredSlot > -1 ? 5 - hoveredSlot : maximumModSlots as slot\">\n      <!-- *ngVar=\"5-slot-1 as slot\" -->\n      <!-- mobility -->\n      <div [class.major]=\"slot >= 3\" [class.minor]=\"slot >= 1 && slot < 3\" class=\"mod-info\">\n        <img class=\"mod-icon mod-major\" [src]=\"ModUrls[StatModifier.MAJOR_MOBILITY]\" />\n        <img class=\"mod-icon mod-minor\" [src]=\"ModUrls[StatModifier.MINOR_MOBILITY]\" />\n        <svg class=\"mod-number mod-major\" viewBox=\"0 0 100 100\">\n          <text font-size=\"25px\" text-anchor=\"end\" x=\"87\" y=\"30\">3</text>\n        </svg>\n        <svg class=\"mod-number mod-minor\" viewBox=\"0 0 100 100\">\n          <text font-size=\"25px\" text-anchor=\"end\" x=\"87\" y=\"30\">1</text>\n        </svg>\n        <div class=\"overlay\"></div>\n      </div>\n      <!-- resilience -->\n      <div [class.major]=\"slot >= 4\" [class.minor]=\"slot >= 2 && slot < 4\" class=\"mod-info\">\n        <img class=\"mod-icon mod-major\" [src]=\"ModUrls[StatModifier.MAJOR_RESILIENCE]\" />\n        <img class=\"mod-icon mod-minor\" [src]=\"ModUrls[StatModifier.MINOR_RESILIENCE]\" />\n        <svg class=\"mod-number mod-major\" viewBox=\"0 0 100 100\">\n          <text font-size=\"25px\" text-anchor=\"end\" x=\"87\" y=\"30\">4</text>\n        </svg>\n        <svg class=\"mod-number mod-minor\" viewBox=\"0 0 100 100\">\n          <text font-size=\"25px\" text-anchor=\"end\" x=\"87\" y=\"30\">2</text>\n        </svg>\n        <div class=\"overlay\"></div>\n      </div>\n      <!-- discipline -->\n      <div [class.major]=\"slot >= 3\" [class.minor]=\"slot >= 1 && slot < 3\" class=\"mod-info\">\n        <img class=\"mod-icon mod-major\" [src]=\"ModUrls[StatModifier.MAJOR_DISCIPLINE]\" />\n        <img class=\"mod-icon mod-minor\" [src]=\"ModUrls[StatModifier.MINOR_DISCIPLINE]\" />\n        <svg class=\"mod-number mod-major\" viewBox=\"0 0 100 100\">\n          <text font-size=\"25px\" text-anchor=\"end\" x=\"87\" y=\"30\">3</text>\n        </svg>\n        <svg class=\"mod-number mod-minor\" viewBox=\"0 0 100 100\">\n          <text font-size=\"25px\" text-anchor=\"end\" x=\"87\" y=\"30\">1</text>\n        </svg>\n        <div class=\"overlay\"></div>\n      </div>\n      <!-- strength -->\n      <div [class.major]=\"slot >= 3\" [class.minor]=\"slot >= 1 && slot < 3\" class=\"mod-info\">\n        <img class=\"mod-icon mod-major\" [src]=\"ModUrls[StatModifier.MAJOR_STRENGTH]\" />\n        <img class=\"mod-icon mod-minor\" [src]=\"ModUrls[StatModifier.MINOR_STRENGTH]\" />\n        <svg class=\"mod-number mod-major\" viewBox=\"0 0 100 100\">\n          <text font-size=\"25px\" text-anchor=\"end\" x=\"87\" y=\"30\">3</text>\n        </svg>\n        <svg class=\"mod-number mod-minor\" viewBox=\"0 0 100 100\">\n          <text font-size=\"25px\" text-anchor=\"end\" x=\"87\" y=\"30\">1</text>\n        </svg>\n        <div class=\"overlay\"></div>\n      </div>\n      <!-- recovery -->\n      <div [class.major]=\"slot >= 4\" [class.minor]=\"slot >= 2 && slot < 4\" class=\"mod-info\">\n        <img class=\"mod-icon mod-major\" [src]=\"ModUrls[StatModifier.MAJOR_RECOVERY]\" />\n        <img class=\"mod-icon mod-minor\" [src]=\"ModUrls[StatModifier.MINOR_RECOVERY]\" />\n        <svg class=\"mod-number mod-major\" viewBox=\"0 0 100 100\">\n          <text font-size=\"25px\" text-anchor=\"end\" x=\"87\" y=\"30\">4</text>\n        </svg>\n        <svg class=\"mod-number mod-minor\" viewBox=\"0 0 100 100\">\n          <text font-size=\"25px\" text-anchor=\"end\" x=\"87\" y=\"30\">2</text>\n        </svg>\n        <div class=\"overlay\"></div>\n      </div>\n      <!-- intellect -->\n      <div [class.major]=\"slot >= 4\" [class.minor]=\"slot >= 2 && slot < 4\" class=\"mod-info\">\n        <img class=\"mod-icon mod-major\" [src]=\"ModUrls[StatModifier.MAJOR_INTELLECT]\" />\n        <img class=\"mod-icon mod-minor\" [src]=\"ModUrls[StatModifier.MINOR_INTELLECT]\" />\n        <svg class=\"mod-number mod-major\" viewBox=\"0 0 100 100\">\n          <text font-size=\"25px\" text-anchor=\"end\" x=\"87\" y=\"30\">4</text>\n        </svg>\n        <svg class=\"mod-number mod-minor\" viewBox=\"0 0 100 100\">\n          <text font-size=\"25px\" text-anchor=\"end\" x=\"87\" y=\"30\">2</text>\n        </svg>\n        <div class=\"overlay\"></div>\n      </div>\n    </div>\n  </div>\n\n  <mat-button-toggle-group appearance=\"standard\" name=\"fontStyle\" style=\"display: none\">\n    <mat-button-toggle\n      (click)=\"setValue(i)\"\n      *ngFor=\"let r of ModRange; let i = index\"\n      [value]=\"i\"\n      class=\"select-button {{ selection >= i ? 'mat-button-toggle-checked' : '' }}\"\n      >{{ i }}</mat-button-toggle\n    >\n  </mat-button-toggle-group>\n\n  <div class=\"selector-slots\">\n    <mat-button-toggle-group [class.impossible]=\"!isPossible\">\n      <mat-button-toggle value=\"bold\" [matMenuTriggerFor]=\"dropdownArmorModslot\">\n        <app-armor-perk-icon [perk]=\"armorPerk\"></app-armor-perk-icon>\n        <mat-icon>arrow_drop_down</mat-icon>\n      </mat-button-toggle>\n\n      <mat-button-toggle\n        (click)=\"toggleArmorPerkLock(); $event.stopPropagation()\"\n        [disabled]=\"disabled\"\n        disabled\n        matTooltip=\"Force the selected perk or slot to be on a {{ slotName }}.\">\n        <mat-icon *ngIf=\"!armorPerkLock\">lock_open</mat-icon>\n        <mat-icon *ngIf=\"armorPerkLock\">lock</mat-icon>\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n    <mat-menu #dropdownArmorModslot=\"matMenu\" class=\"modslot-select-scroll-menu\">\n      <ng-container *ngFor=\"let perk of availableArmorPerks\">\n        <button\n          mat-menu-item\n          (click)=\"setArmorPerk(perk)\"\n          [class.selected-menu]=\"perk === armorPerk\">\n          <app-armor-perk-icon [perk]=\"perk\" class=\"menuArmorIcon\"></app-armor-perk-icon>\n          <span class=\"menuArmorText\">{{ ArmorPerkOrSlotNames[perk] }}</span>\n        </button>\n      </ng-container>\n    </mat-menu>\n  </div>\n\n  <span class=\"slot-icon-container\">\n    <!-- Source of the icons: DIM. Thanks! -->\n    <img\n      #tooltip=\"matTooltip\"\n      *ngIf=\"slot === ArmorSlot.ArmorSlotHelmet\"\n      class=\"slot-icon\"\n      matTooltip=\"If you enable the lock on the settings on the right they will be forced to exist on a {{\n        slotName\n      }}.\"\n      src=\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 51 51'%3e%3cpath d='M24.77 7.03c-8.15.38-14.42 7.41-14.42 15.57v16.06c0 .23.13.44.34.53l10.33 4.68c.78.35 1.66-.22 1.66-1.07V31.9c0-.39-.19-.75-.52-.97l-5.39-3.64c-.87-.52-1.43-1.5-1.34-2.61.13-1.46 1.46-2.52 2.93-2.52h4.36c.65 0 1.17.53 1.17 1.17v6.71s0 .61 1.61.61 1.61-.61 1.61-.61v-6.71c0-.65.52-1.17 1.17-1.17h4.36c1.47 0 2.8 1.06 2.93 2.52.1 1.11-.47 2.09-1.34 2.61l-5.39 3.64c-.32.22-.52.58-.52.97v10.91c0 .85.88 1.42 1.66 1.07l10.33-4.68c.21-.1.34-.3.34-.53v-16.5c.01-8.61-7.18-15.55-15.88-15.14z'/%3e%3c/svg%3e\" />\n    <img\n      #tooltip=\"matTooltip\"\n      *ngIf=\"slot === ArmorSlot.ArmorSlotGauntlet\"\n      class=\"slot-icon\"\n      matTooltip=\"If you enable the lock on the settings on the right they will be forced to exist on a {{\n        slotName\n      }}.\"\n      src=\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 51 51'%3e%3cpath d='M40.1 30.03c.39-.47.59-1.11.42-1.8-.18-.76-.81-1.39-1.58-1.55-.81-.17-1.54.14-2.01.68 0 0-.03.04-.05.07l-.12.15c-.47.61-1.95 2.37-3.29 2.45-1.62.1 2.51-16.14 2.51-16.14h-.01c.04-.15.07-.31.07-.48 0-.98-.79-1.77-1.77-1.77-.81 0-1.49.55-1.69 1.29h-.01s-.01.03-.01.05l-.03.15c-.24 1.21-1.68 8.2-2.81 8.89-1.24.75-1.22-13.23-1.22-13.23 0-.98-.79-1.77-1.77-1.77s-1.77.79-1.77 1.77c0 0-.35 12.85-1.73 12.73-1.37-.12-2.47-10.67-2.47-10.67 0-.98-.79-1.77-1.77-1.77s-1.77.79-1.77 1.77c0 .15.02.28.06.42.27 2.06 1.36 11.12-.06 11.12-1.6 0-3.68-6.35-3.68-6.35a1.62 1.62 0 0 0-3.14.56c0 .09.01.17.03.25l-.03.01s.02.07.07.19c.02.09.05.17.09.25.99 2.71 6.28 17.46 7.26 26.23.03.25.24.44.49.44H30.5a.5.5 0 0 0 .5-.45c.1-1.04.52-3.68 2.09-5.54 1.8-2.14 6.06-6.89 6.86-7.79.02-.02.03-.04.05-.06.07-.06.11-.1.1-.1z'/%3e%3c/svg%3e\" />\n    <img\n      #tooltip=\"matTooltip\"\n      *ngIf=\"slot === ArmorSlot.ArmorSlotChest\"\n      class=\"slot-icon\"\n      matTooltip=\"If you enable the lock on the settings on the right they will be forced to exist on a {{\n        slotName\n      }}.\"\n      src=\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 51 51'%3e%3cpath d='M42.49 13.55c-1.06-1.51-4.05-5.05-9.52-6.49a.635.635 0 0 0-.78.5c-.35 2.04-1.78 8.08-6.69 8.08s-6.34-6.04-6.69-8.08a.635.635 0 0 0-.78-.5c-5.47 1.44-8.46 4.98-9.52 6.49-.24.34-.09.8.3.94 2.01.7 7.34 2.94 7.34 7.01 0 4.24-4.47 6.89-5.87 7.61-.25.13-.38.4-.33.67 1.44 7.62 7.55 13.09 8.67 14.04.11.1.25.15.4.15h12.94c.15 0 .29-.05.4-.15 1.12-.95 7.23-6.42 8.67-14.04a.624.624 0 0 0-.33-.67c-1.4-.72-5.87-3.37-5.87-7.61 0-4.08 5.33-6.32 7.34-7.01.41-.14.56-.61.32-.94z'/%3e%3c/svg%3e\" />\n    <img\n      #tooltip=\"matTooltip\"\n      *ngIf=\"slot === ArmorSlot.ArmorSlotLegs\"\n      class=\"slot-icon\"\n      matTooltip=\"If you enable the lock on the settings on the right they will be forced to exist on a {{\n        slotName\n      }}.\"\n      src=\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 51 51'%3e%3cpath d='M13 7.6h13.96c1.73 0 2.99 1.64 2.54 3.32l-5.44 20.46c-.07.28.03.57.28.72.99.62 4.64 2.57 8.15 5.78.12.11 2.92-.03 3.09-.01 2.31.2 3.97-.08 5.05 4.7.09.42-.21.82-.64.82H11.82c-.34 0-.63-.26-.66-.61-.15-1.82-.4-7.23 1.74-9.32a.62.62 0 0 0 .2-.6c-.39-1.74-2.09-9.83-2.74-22.48-.07-1.5 1.12-2.78 2.64-2.78z'/%3e%3c/svg%3e\" />\n    <img\n      #tooltip=\"matTooltip\"\n      *ngIf=\"slot === ArmorSlot.ArmorSlotClass\"\n      class=\"slot-icon\"\n      matTooltip=\"If you enable the lock on the settings on the right they will be forced to exist on a {{\n        slotName\n      }}.\"\n      src=\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 51 51'%3e%3cpath d='M43.12 7.12c-4.13 2.33-17.62 1.9-17.62 1.9s-13.49.43-17.62-1.9c-.37-.21-.85-.03-.94.39-.36 1.49-.87 4.42.09 5.86.09.13.22.21.38.25 1.23.3 7.36 1.65 18.09 1.65s16.86-1.35 18.09-1.65c.15-.04.29-.12.38-.25.96-1.44.45-4.37.1-5.86-.1-.42-.58-.6-.95-.39zM9.27 28.34s0 2.34 2.27 2.34 2.27-2.34 2.27-2.34V15.73c-1.93-.22-3.45-.45-4.55-.65v13.26zM16.3 34.8s0 2.34 2.27 2.34 2.27-2.34 2.27-2.34V16.24c-1.66-.06-3.18-.16-4.55-.27V34.8zM37.18 28.34s0 2.34 2.27 2.34 2.27-2.34 2.27-2.34V15.08c-1.09.2-2.61.44-4.55.65v12.61zM30.15 34.8s0 2.34 2.27 2.34 2.27-2.34 2.27-2.34V15.97c-1.36.11-2.88.21-4.55.27V34.8zM23.23 16.31v25.31s0 2.34 2.27 2.34 2.27-2.34 2.27-2.34V16.31c-.74.01-1.49.02-2.27.02-.78.01-1.54 0-2.27-.02z'/%3e%3c/svg%3e\" />\n  </span>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\nimport { MAXIMUM_STAT_MOD_AMOUNT } from \"../../../../../data/constants\";\nimport { ArmorSlot } from \"../../../../../data/enum/armor-slot\";\nimport { ConfigurationService } from \"../../../../../services/configuration.service\";\nimport {\n  ArmorPerkOrSlot,\n  ArmorPerkOrSlotNames,\n  StatModifier,\n} from \"../../../../../data/enum/armor-stat\";\nimport { DestinyClass } from \"bungie-api-ts/destiny2\";\nimport { InventoryService } from \"../../../../../services/inventory.service\";\nimport { DatabaseService } from \"../../../../../services/database.service\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { environment } from \"../../../../../../environments/environment\";\nimport { ItemIconServiceService } from \"src/app/services/item-icon-service.service\";\nimport { ModUrl } from \"../../../results/table-mod-display/table-mod-display.component\";\n\n@Component({\n  selector: \"app-slot-limitation-selection\",\n  templateUrl: \"./slot-limitation-selection.component.html\",\n  styleUrls: [\"./slot-limitation-selection.component.scss\"],\n})\nexport class SlotLimitationSelectionComponent implements OnInit, OnDestroy, AfterViewInit {\n  readonly featureDisabled = !environment.featureFlags.enableModslotLimitation;\n  readonly ModUrls = ModUrl;\n  readonly StatModifier = StatModifier;\n  readonly ArmorSlot = ArmorSlot;\n  readonly ArmorPerkOrSlotNames = ArmorPerkOrSlotNames;\n  readonly ArmorPerkOrSlot = ArmorPerkOrSlot;\n  readonly ModRange = new Array(MAXIMUM_STAT_MOD_AMOUNT + 1);\n  selection: number = MAXIMUM_STAT_MOD_AMOUNT;\n\n  @Input()\n  slot: ArmorSlot = ArmorSlot.ArmorSlotHelmet;\n  @Output()\n  possible: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  fixedExoticInThisSlot: boolean = false;\n  isPossible: boolean = true;\n  configSelectedClass: DestinyClass = DestinyClass.Titan;\n  configAssumeLegendaryIsArtifice: boolean = false;\n  configSelectedExoticSum: number = 0;\n  configSelectedExotic: number[] = [];\n  configAssumeClassItemIsArtifice: boolean = false;\n  configAssumeExoticIsArtifice: boolean = false;\n  armorPerk: ArmorPerkOrSlot = ArmorPerkOrSlot.None;\n  armorPerkLock: boolean = false;\n  maximumModSlots: number = 5;\n\n  hoveredSlot: number = -1;\n\n  disabled: boolean = false;\n\n  readonly availableArmorPerks = [\n    ArmorPerkOrSlot.None,\n    ArmorPerkOrSlot.SlotEidosApprentice,\n    ArmorPerkOrSlot.SlotSalvationsEdge,\n    ArmorPerkOrSlot.SlotCrotasEnd,\n    ArmorPerkOrSlot.SlotRootOfNightmares,\n    ArmorPerkOrSlot.SlotKingsFall,\n    ArmorPerkOrSlot.SlotVowOfTheDisciple,\n    ArmorPerkOrSlot.SlotVaultOfGlass,\n    ArmorPerkOrSlot.SlotDeepStoneCrypt,\n    ArmorPerkOrSlot.SlotGardenOfSalvation,\n    ArmorPerkOrSlot.SlotLastWish,\n    ArmorPerkOrSlot.SlotArtifice,\n    ArmorPerkOrSlot.PerkEchoesOfGlory,\n    ArmorPerkOrSlot.PerkIronBanner,\n    ArmorPerkOrSlot.SlotNightmare,\n  ];\n\n  constructor(\n    public config: ConfigurationService,\n    public inventory: InventoryService,\n    private iconService: ItemIconServiceService,\n    private db: DatabaseService\n  ) {}\n\n  public async runPossibilityCheck() {\n    if (\n      this.configAssumeLegendaryIsArtifice ||\n      (this.slot == ArmorSlot.ArmorSlotClass && this.configAssumeClassItemIsArtifice)\n    ) {\n      this.isPossible = true;\n    } else {\n      const mustCheckArmorPerk = this.armorPerkLock && this.armorPerk != ArmorPerkOrSlot.None;\n\n      let results = 0;\n      if (mustCheckArmorPerk) {\n        // check if the current slot is locked to a specific exotic\n        if (this.fixedExoticInThisSlot) {\n          if (this.armorPerk == ArmorPerkOrSlot.SlotArtifice && this.configAssumeExoticIsArtifice) {\n            results += 1;\n          } else {\n            this.configSelectedExotic.forEach(async (exoticHash) => {\n              var exotics = await this.db.inventoryArmor\n                .where(\"clazz\")\n                .equals(this.configSelectedClass)\n                .and((f) => f.perk == this.armorPerk)\n                .and((f) => f.hash == exoticHash)\n                .and((f) => f.isExotic == 1)\n                .count();\n              results += exotics;\n              this.isPossible = results > 0;\n              this.possible.next(this.isPossible);\n            });\n          }\n        } else {\n          results += await this.db.inventoryArmor\n            .where(\"clazz\")\n            .equals(this.configSelectedClass)\n            .and((f) => this.configSelectedExoticSum == 0 || f.isExotic == 0)\n            .and((f) => f.slot == this.slot)\n            .and((f) => f.perk == this.armorPerk)\n            .count();\n          this.isPossible = results > 0;\n        }\n      } else {\n        this.isPossible = true;\n      }\n    }\n    this.possible.next(this.isPossible);\n  }\n\n  get slotName(): string {\n    switch (this.slot) {\n      case ArmorSlot.ArmorSlotHelmet:\n        return \"Helmet\";\n      case ArmorSlot.ArmorSlotGauntlet:\n        return \"Gauntlet\";\n      case ArmorSlot.ArmorSlotChest:\n        return \"Chest\";\n      case ArmorSlot.ArmorSlotLegs:\n        return \"Leg\";\n      case ArmorSlot.ArmorSlotClass:\n        return \"Class Item\";\n      default:\n        return \"\";\n    }\n  }\n\n  ngOnInit(): void {\n    this.config.configuration.pipe(takeUntil(this.ngUnsubscribe)).subscribe(async (c) => {\n      const newExoticSum = c.selectedExotics.reduce((acc, x) => acc + x, 0);\n\n      var mustRunPossibilityCheck =\n        this.configSelectedClass != (c.characterClass as unknown as DestinyClass) ||\n        this.configAssumeLegendaryIsArtifice != c.assumeEveryLegendaryIsArtifice ||\n        this.configAssumeExoticIsArtifice != c.assumeEveryExoticIsArtifice ||\n        this.configAssumeClassItemIsArtifice != c.assumeClassItemIsArtifice ||\n        this.selection != c.maximumModSlots[this.slot].value ||\n        this.armorPerk != c.armorPerks[this.slot].value ||\n        this.armorPerkLock != c.armorPerks[this.slot].fixed ||\n        this.configSelectedExoticSum != newExoticSum ||\n        this.maximumModSlots != c.maximumModSlots[this.slot].value;\n\n      this.configAssumeLegendaryIsArtifice = c.assumeEveryLegendaryIsArtifice;\n      this.configAssumeExoticIsArtifice = c.assumeEveryExoticIsArtifice;\n      this.configAssumeClassItemIsArtifice = c.assumeClassItemIsArtifice;\n      this.configSelectedClass = c.characterClass as unknown as DestinyClass;\n      this.selection = c.maximumModSlots[this.slot].value;\n      this.armorPerk = c.armorPerks[this.slot].value;\n      this.armorPerkLock = c.armorPerks[this.slot].fixed;\n      this.maximumModSlots = c.maximumModSlots[this.slot].value;\n      this.configSelectedExoticSum = newExoticSum;\n      this.configSelectedExotic = c.selectedExotics;\n\n      this.fixedExoticInThisSlot =\n        (await this.inventory.getExoticsForClass(c.characterClass))\n          .filter((x) => c.selectedExotics.indexOf(x.item.hash) > -1)\n          .map((e) => e.item.slot)\n          .indexOf(this.slot) > -1;\n\n      if (mustRunPossibilityCheck) await this.runPossibilityCheck();\n    });\n  }\n\n  ngAfterViewInit(): void {\n    if (\n      environment.featureFlags.enableGuardianGamesFeatures &&\n      this.slot === ArmorSlot.ArmorSlotClass\n    ) {\n      this.availableArmorPerks.splice(1, 0, ArmorPerkOrSlot.GuardianGamesClassItem);\n    }\n  }\n\n  toggleArmorPerkLock() {\n    this.config.modifyConfiguration((c) => {\n      c.armorPerks[this.slot].fixed = !c.armorPerks[this.slot].fixed;\n    });\n  }\n\n  setArmorPerk(perk: ArmorPerkOrSlot) {\n    if (this.armorPerk != perk)\n      this.config.modifyConfiguration((c) => {\n        c.armorPerks[this.slot].value = perk;\n      });\n  }\n\n  setValue(i: number) {\n    if (this.featureDisabled) return;\n    if (this.maximumModSlots == i) return;\n\n    this.maximumModSlots = i;\n    this.config.modifyConfiguration((c) => (c.maximumModSlots[this.slot].value = i));\n  }\n\n  async getStatIconUrl(statHash: number) {\n    const item = await this.iconService.getItemCached(statHash);\n    return item?.icon;\n  }\n\n  private ngUnsubscribe = new Subject();\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-slot-limitation-title\",\n  templateUrl: \"./slot-limitation-title.component.html\",\n  styleUrls: [\"./slot-limitation-title.component.css\"],\n})\nexport class SlotLimitationTitleComponent {\n  constructor() {}\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div>\n  <div class=\"energy\"> Energy </div>\n  <span class=\"selector-slots\"> Modslots </span>\n</div>\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<mat-toolbar color=\"warn\" class=\"mat-elevation-z4 impossible-container\" *ngIf=\"!allPossible\">\n  Some of your chosen limitations contain no armor pieces and will yield no results.\n</mat-toolbar>\n\n<div class=\"container\">\n  <!-- Title -->\n  <app-slot-limitation-title></app-slot-limitation-title>\n  <!-- /Title -->\n  <app-slot-limitation-selection\n    [slot]=\"$any(ArmorSlot.ArmorSlotHelmet)\"\n    (possible)=\"updatePossibility(0, $event)\"></app-slot-limitation-selection>\n  <br />\n  <app-slot-limitation-selection\n    [slot]=\"$any(ArmorSlot.ArmorSlotGauntlet)\"\n    (possible)=\"updatePossibility(1, $event)\"></app-slot-limitation-selection>\n  <br />\n  <app-slot-limitation-selection\n    [slot]=\"$any(ArmorSlot.ArmorSlotChest)\"\n    (possible)=\"updatePossibility(2, $event)\"></app-slot-limitation-selection>\n  <br />\n  <app-slot-limitation-selection\n    [slot]=\"$any(ArmorSlot.ArmorSlotLegs)\"\n    (possible)=\"updatePossibility(3, $event)\"></app-slot-limitation-selection>\n  <br />\n  <app-slot-limitation-selection\n    [slot]=\"$any(ArmorSlot.ArmorSlotClass)\"\n    (possible)=\"updatePossibility(4, $event)\"></app-slot-limitation-selection>\n</div>\n\n<div id=\"clear-container\">\n  <button (click)=\"clear()\" color=\"warn\" mat-stroked-button>Clear the whole selection</button>\n</div>\n<div class=\"minispace\"></div>\n\n<mat-toolbar\n  color=\"warn\"\n  class=\"mat-elevation-z4 impossible-container\"\n  *ngIf=\"disabledSlotLimitation\">\n  The mod cost limitation is currently disabled. Modslot filtering still works.\n</mat-toolbar>\n<div class=\"minispace\"></div>\n<mat-accordion>\n  <mat-expansion-panel class=\"mat-elevation-z6\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        <mat-icon aria-hidden=\"false\" inline>info</mat-icon>\n        Explanation\n      </mat-panel-title>\n      <mat-panel-description> Detailed instructions for this section. </mat-panel-description>\n    </mat-expansion-panel-header>\n    <div id=\"explanation-description\">\n      This section allows you to further finetune the results to your requirements.<br />\n\n      <div class=\"minispace\"></div>\n      <u>Limitation of available stat mod types</u><br />\n      First off, you are able to\n      <span class=\"text-highlight\">select the kind and amount of stat mods</span> you want. By\n      filling the bars you\n      <span class=\"text-highlight\">specify how many modslots are already occupied</span> and thus\n      the tool knows how much space it is able to use for your builds. Hover over the bars, it will\n      show you which mods are available after you changed your selection.\n      <div class=\"minispace\"></div>\n      <div class=\"example-usecase\">\n        Example Use Case: \"On one item I can only use up to four recovery mods, no major intellect\n        mod. One item can not hold any mods\". In this scenario you would set one slot to 10 used\n        slots, and the rest to 6.\n      </div>\n      <br />\n      <u>Filter for Elemental Affinity and Armor Perk/Slot</u><br />\n      This allows you to super-finetune your elemental and armor-perk requirements. You can change\n      the settings for <span class=\"text-highlight\">each armor slot</span>. There are two modes per\n      armor slot: <span class=\"text-highlight\">Locked</span> and\n      <span class=\"text-highlight\">Unlocked</span>. Per default each entry is in the\n      <span class=\"text-highlight\">Locked</span> mode.\n      <div class=\"minispace\"></div>\n      <span class=\"text-highlight\">Locked</span> means that\n      <span class=\"text-highlight\">this armor slot must have</span> the selected element or perk.\n      <div class=\"minispace\"></div>\n      <span class=\"text-highlight\">Unlocked</span> means that the perk must exist, but\n      <span class=\"text-highlight\">the exact armor slot is irrelevant</span>. That means that the\n      tool can decide where it puts the desired element or perk.\n      <div class=\"minispace\"></div>\n      <div class=\"example-usecase\">\n        Example Use Case: \"The Class Item and Gauntlet\n        <span class=\"text-highlight\">must be stasis</span>. Oh, and I need two solar and one arc\n        modslots, but the position does not matter\". In this scenario, Class Item and Gauntlet would\n        be <span class=\"text-highlight\">Locked</span> and the rest would be\n        <span class=\"text-highlight\">Unlocked</span>.\n      </div>\n      <br />\n      Legend:\n      <table class=\"modslot-legend\">\n        <tr>\n          <td>\n            <app-armor-perk-icon [perk]=\"ArmorPerkOrSlot.SlotVaultOfGlass\"></app-armor-perk-icon>\n          </td>\n          <td>Vault of Glass</td>\n          <td>\n            <app-armor-perk-icon [perk]=\"ArmorPerkOrSlot.SlotDeepStoneCrypt\"></app-armor-perk-icon>\n          </td>\n          <td>Deep Stone Crypt</td>\n          <td>\n            <app-armor-perk-icon\n              [perk]=\"ArmorPerkOrSlot.SlotGardenOfSalvation\"></app-armor-perk-icon>\n          </td>\n          <td>Garden of Salvation</td>\n        </tr>\n        <tr>\n          <td>\n            <app-armor-perk-icon [perk]=\"ArmorPerkOrSlot.SlotLastWish\"></app-armor-perk-icon>\n          </td>\n          <td>Last Wish</td>\n          <td>\n            <app-armor-perk-icon\n              [perk]=\"ArmorPerkOrSlot.SlotVowOfTheDisciple\"></app-armor-perk-icon>\n          </td>\n          <td>Vow of the Disciple</td>\n          <td>\n            <app-armor-perk-icon [perk]=\"ArmorPerkOrSlot.SlotNightmare\"></app-armor-perk-icon>\n          </td>\n          <td>Nightmare Modslot</td>\n        </tr>\n        <tr>\n          <td>\n            <app-armor-perk-icon [perk]=\"ArmorPerkOrSlot.SlotArtifice\"></app-armor-perk-icon>\n          </td>\n          <td>Artifice Modslot</td>\n          <td>\n            <app-armor-perk-icon [perk]=\"ArmorPerkOrSlot.PerkIronBanner\"></app-armor-perk-icon>\n          </td>\n          <td>Iron Banner Perk</td>\n          <td>\n            <app-armor-perk-icon [perk]=\"ArmorPerkOrSlot.PerkEchoesOfGlory\"></app-armor-perk-icon>\n          </td>\n          <td>Echoes of Glory Perk</td>\n        </tr>\n      </table>\n    </div>\n  </mat-expansion-panel>\n</mat-accordion>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component } from \"@angular/core\";\nimport { ArmorSlot } from \"src/app/data/enum/armor-slot\";\nimport { ConfigurationService } from \"../../../../services/configuration.service\";\nimport { ArmorPerkOrSlot } from \"../../../../data/enum/armor-stat\";\nimport { environment } from \"../../../../../environments/environment\";\n\n@Component({\n  selector: \"app-desired-mod-selection\",\n  templateUrl: \"./desired-mod-limit-selection.component.html\",\n  styleUrls: [\"./desired-mod-limit-selection.component.scss\"],\n})\nexport class DesiredModLimitSelectionComponent {\n  readonly ArmorSlot = ArmorSlot;\n  readonly ArmorPerkOrSlot = ArmorPerkOrSlot;\n\n  public possibilityList = [true, true, true, true, true];\n  public allPossible = true;\n  public disabledSlotLimitation = !environment.featureFlags.enableModslotLimitation;\n\n  constructor(public config: ConfigurationService) {}\n\n  updatePossibility(n: number, state: boolean) {\n    this.possibilityList[n] = state;\n    this.allPossible = this.possibilityList.filter((k) => !!k).length == 5;\n  }\n\n  clear() {\n    this.config.modifyConfiguration((c) => {\n      for (let n = 0; n < 5; n++) {\n        c.armorPerks[(n + 1) as ArmorSlot] = { fixed: true, value: 0 };\n        c.maximumModSlots[(n + 1) as ArmorSlot] = { fixed: true, value: 5 };\n      }\n    });\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div>\n  <div class=\"tooltip-container\">\n    <table>\n      <tr>\n        <td class=\"perk-icon-col\" rowspan=\"2\">\n          <img\n            *ngIf=\"exoticPerk\"\n            alt=\"{{ exoticPerk.name }}\"\n            class=\"perk-icon\"\n            src=\"https://bungie.net/{{ exoticPerk.icon }}\" />\n        </td>\n        <td class=\"exotic-name\">{{ armor?.name }}</td>\n      </tr>\n      <tr *ngIf=\"!exoticPerk && !exoticPerkNotThere\">\n        <td>Loading exotic perk..</td>\n      </tr>\n      <tr *ngIf=\"!exoticPerk && exoticPerkNotThere\">\n        <td>No (fixed) exotic perk available.</td>\n      </tr>\n      <tr *ngIf=\"exoticPerk\">\n        <td>\n          <span>{{ exoticPerk.name }}</span>\n        </td>\n      </tr>\n      <tr *ngIf=\"exoticPerk\">\n        <td colspan=\"2\">\n          {{ exoticPerk.description }}\n        </td>\n      </tr>\n\n      <tr *ngIf=\"collection || vendor\" class=\"collection-roll-info\">\n        <td colspan=\"2\">\n          This exotic is not in your inventory but it is\n          <ng-container *ngIf=\"collection\">\n            in your collection\n            <ng-container *ngIf=\"vendor\"> and </ng-container>\n          </ng-container>\n          <ng-container *ngIf=\"vendor\">available at a vendor</ng-container>. You can still generate\n          a loadout with this exotic, but you will have to grab it by yourself.\n        </td>\n      </tr>\n    </table>\n  </div>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, Input, OnInit } from \"@angular/core\";\nimport { IManifestArmor } from \"../../../../data/types/IManifestArmor\";\nimport { InventoryService } from \"../../../../services/inventory.service\";\nimport { ItemIconServiceService } from \"../../../../services/item-icon-service.service\";\n\n@Component({\n  selector: \"app-exotic-perk-tooltip\",\n  templateUrl: \"./exotic-perk-tooltip.component.html\",\n  styleUrls: [\"./exotic-perk-tooltip.component.css\"],\n})\nexport class ExoticPerkTooltipComponent implements OnInit {\n  @Input() armor: IManifestArmor | undefined;\n  @Input() vendor: boolean = false;\n  @Input() collection: boolean = false;\n\n  exoticPerk: IManifestArmor | undefined;\n  exoticPerkNotThere: boolean = false;\n\n  constructor(public inv: InventoryService, public iconService: ItemIconServiceService) {}\n\n  async ngOnInit() {\n    this.exoticPerk = await this.iconService.getItemCached(this.armor?.exoticPerkHash ?? 0);\n    this.exoticPerkNotThere = this.exoticPerk == null;\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {\n  Directive,\n  Input,\n  TemplateRef,\n  ElementRef,\n  OnInit,\n  HostListener,\n  ComponentRef,\n  OnDestroy,\n} from \"@angular/core\";\nimport { Overlay, OverlayPositionBuilder, OverlayRef } from \"@angular/cdk/overlay\";\nimport { ComponentPortal } from \"@angular/cdk/portal\";\nimport { ExoticPerkTooltipComponent } from \"./exotic-perk-tooltip.component\";\nimport { IManifestArmor } from \"../../../../data/types/IManifestArmor\";\n\n@Directive({\n  selector: \"[exoticTooltip]\",\n})\nexport class ExoticTooltipDirective implements OnInit, OnDestroy {\n  /**\n   * This will be used to show tooltip or not\n   * This can be used to show the tooltip conditionally\n   */\n  @Input() showToolTip: boolean = true;\n\n  //If this is specified then specified text will be show in in the tooltip\n  @Input() exoticTooltip: IManifestArmor | undefined;\n\n  @Input() exoticTooltipInVendor: boolean = false;\n\n  @Input() exoticTooltipInCollection: boolean = false;\n\n  //If this is specified then specified template will be rendered in the tooltip\n  @Input() contentTemplate: TemplateRef<any> | undefined;\n\n  private _overlayRef: OverlayRef | undefined;\n\n  constructor(\n    private _overlay: Overlay,\n    private _overlayPositionBuilder: OverlayPositionBuilder,\n    private _elementRef: ElementRef\n  ) {}\n\n  /**\n   * Init life cycle event handler\n   */\n  ngOnInit() {\n    if (!this.showToolTip) {\n      return;\n    }\n\n    const positionStrategy = this._overlayPositionBuilder\n      .flexibleConnectedTo(this._elementRef)\n      .withPositions([\n        {\n          originX: \"center\",\n          originY: \"bottom\",\n          overlayX: \"center\",\n          overlayY: \"top\",\n          offsetY: 5,\n        },\n        {\n          originX: \"center\",\n          originY: \"top\",\n          overlayX: \"center\",\n          overlayY: \"bottom\",\n          offsetY: -5,\n        },\n      ]);\n\n    this._overlayRef = this._overlay.create({ positionStrategy });\n    this._overlayRef.addPanelClass(\"overlay-no-pointer-event\");\n  }\n\n  /**\n   * This method will be called whenever mouse enters in the Host element\n   * i.e. where this directive is applied\n   * This method will show the tooltip by instantiating the McToolTipComponent and attaching to the overlay\n   */\n  @HostListener(\"mouseenter\")\n  show() {\n    //attach the component if it has not already attached to the overlay\n    if (this._overlayRef && !this._overlayRef.hasAttached()) {\n      const tooltipRef: ComponentRef<ExoticPerkTooltipComponent> = this._overlayRef.attach(\n        new ComponentPortal(ExoticPerkTooltipComponent)\n      );\n      tooltipRef.instance.collection = this.exoticTooltipInCollection;\n      tooltipRef.instance.vendor = this.exoticTooltipInVendor;\n      tooltipRef.instance.armor = this.exoticTooltip;\n    }\n  }\n\n  /**\n   * This method will be called when mouse goes out of the host element\n   * i.e. where this directive is applied\n   * This method will close the tooltip by detaching the overlay from the view\n   */\n  @HostListener(\"mouseleave\")\n  hide() {\n    this.closeToolTip();\n  }\n\n  /**\n   * Destroy lifecycle event handler\n   * This method will make sure to close the tooltip\n   * It will be needed in case when app is navigating to different page\n   * and user is still seeing the tooltip; In that case we do not want to hang around the\n   * tooltip after the page [on which tooltip visible] is destroyed\n   */\n  ngOnDestroy() {\n    this.closeToolTip();\n  }\n\n  /**\n   * This method will close the tooltip by detaching the component from the overlay\n   */\n  private closeToolTip() {\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n    }\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n<div *ngFor=\"let itemGroup of exotics; let i = index\" [@listAnimation]=\"itemGroup.length\">\n  <img\n    class=\"exoticIcon {{ selectedExotics.indexOf(-2) > -1 ? 'selected' : '' }}\"\n    *ngIf=\"i === 0\"\n    src=\"https://www.bungie.net/common/destiny2_content/icons/763634b78eb22168ac707500588b7333.jpg\"\n    matTooltip=\"Force to use ANY exotic (that is NOT a class item)\"\n    #tooltip=\"matTooltip\"\n    (click)=\"selectExotic(-2, $event)\" />\n  <img\n    class=\"exoticIcon {{ selectedExotics.indexOf(-1) > -1 ? 'selected' : '' }}\"\n    *ngIf=\"i === 0\"\n    src=\"https://www.bungie.net/common/destiny2_content/icons/b4d05ef69d0c3227a7d4f7f35bbc2848.png\"\n    matTooltip=\"Force to use NO exotic at all\"\n    #tooltip=\"matTooltip\"\n    (click)=\"selectExotic(-1, $event)\" />\n  <span class=\"container\" *ngFor=\"let exotic of itemGroup\">\n    <img\n      class=\"exoticIcon {{ selectedExotics.indexOf(exotic.item.hash) > -1 ? 'selected' : '' }}\"\n      src=\"https://www.bungie.net/{{ exotic.item.icon }}\"\n      [exoticTooltip]=\"exotic.item\"\n      [exoticTooltipInVendor]=\"!exotic.inInventory && includeVendorRolls && exotic.inVendor\"\n      [exoticTooltipInCollection]=\"\n        !exotic.inInventory && includeCollectionRolls && exotic.inCollection\n      \"\n      [class.vendor-item]=\"!exotic.inInventory && includeVendorRolls && exotic.inVendor\"\n      [class.collection-item]=\"!exotic.inInventory && includeCollectionRolls && exotic.inCollection\"\n      [class.disabled]=\"\n        !(\n          exotic.inInventory ||\n          (includeCollectionRolls && exotic.inCollection) ||\n          (includeVendorRolls && exotic.inVendor)\n        )\n      \"\n      (click)=\"\n        (exotic.inInventory || (includeCollectionRolls && exotic.inCollection)) &&\n          selectExotic(exotic.item.hash, $event)\n      \" />\n    <img\n      class=\"watermarkIcon\"\n      *ngIf=\"exotic.item.watermarkIcon\"\n      src=\"https://www.bungie.net/{{ exotic.item.watermarkIcon }}\" />\n    <div\n      class=\"item-source-overlay\"\n      *ngIf=\"!exotic.inInventory\"\n      [class.vendor-item]=\"includeVendorRolls && exotic.inVendor\"\n      [class.collection-item]=\"includeCollectionRolls && exotic.inCollection\"></div>\n  </span>\n</div>\n\n<div>\n  <button\n    *ngIf=\"exotics.length === 0 || exotics[0].length === 0\"\n    mat-raised-button\n    color=\"warn\"\n    (click)=\"refreshAll()\">\n    Manually refresh manifest and inventory\n  </button>\n</div>\n\n<div>\n  <mat-slide-toggle\n    color=\"primary\"\n    [checked]=\"includeCollectionRolls\"\n    (change)=\"setAllowCollectionRolls($event.checked)\">\n    Include <u>exotic</u> collection rolls\n  </mat-slide-toggle>\n</div>\n<div>\n  <mat-slide-toggle\n    color=\"primary\"\n    [checked]=\"includeVendorRolls\"\n    (change)=\"setAllowVendorItems($event.checked)\">\n    Include <u>legendary and exotic</u> vendor armor (slower)\n  </mat-slide-toggle>\n</div>\n<div>\n  <mat-slide-toggle\n    color=\"primary\"\n    [checked]=\"allowBlueArmorPieces\"\n    (change)=\"setAllowBlueArmorPieces($event.checked)\">\n    Include white, blue and green items\n  </mat-slide-toggle>\n</div>\n<div>\n  <mat-slide-toggle\n    color=\"primary\"\n    [checked]=\"!ignoreSunsetArmor\"\n    (change)=\"setIgnoreSunsetArmor(!$event.checked)\">\n    Include sunset armor\n  </mat-slide-toggle>\n</div>\n<div>\n  <mat-slide-toggle\n    color=\"warn\"\n    [checked]=\"ignoreExistingExoticArtificeSlots\"\n    (change)=\"setIgnoreExistingExoticArtificeSlots($event.checked)\">\n    Ignore existing artifice slots on exotics (useful for the exotic class item)\n  </mat-slide-toggle>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ClassExoticInfo, InventoryService } from \"../../../../services/inventory.service\";\nimport { ConfigurationService } from \"../../../../services/configuration.service\";\nimport { animate, query, stagger, style, transition, trigger } from \"@angular/animations\";\nimport { ArmorSlot } from \"../../../../data/enum/armor-slot\";\nimport { FORCE_USE_NO_EXOTIC } from \"../../../../data/constants\";\nimport { debounceTime, takeUntil } from \"rxjs/operators\";\nimport { Subject } from \"rxjs\";\nimport { DestinyClass } from \"bungie-api-ts/destiny2\";\n\nexport const listAnimation = trigger(\"listAnimation\", [\n  transition(\"* <=> *\", [\n    query(\n      \":enter\",\n      [style({ opacity: 0 }), stagger(\"30ms\", animate(\"350ms ease-out\", style({ opacity: 1 })))],\n      { optional: true }\n    ),\n  ]),\n]);\n\n@Component({\n  selector: \"app-desired-exotic-selection\",\n  templateUrl: \"./desired-exotic-selection.component.html\",\n  styleUrls: [\"./desired-exotic-selection.component.scss\"],\n  animations: [listAnimation],\n})\nexport class DesiredExoticSelectionComponent implements OnInit, OnDestroy {\n  selectedExotics: number[] = [];\n  includeCollectionRolls = false;\n  includeVendorRolls = false;\n  ignoreSunsetArmor = false;\n  ignoreExistingExoticArtificeSlots = false;\n  allowBlueArmorPieces = false;\n  currentClass: DestinyClass = DestinyClass.Titan;\n  exotics: ClassExoticInfo[][] = [];\n\n  constructor(public inventory: InventoryService, public config: ConfigurationService) {}\n\n  ngOnInit(): void {\n    this.config.configuration.pipe(takeUntil(this.ngUnsubscribe)).subscribe(async (c) => {\n      if (c.characterClass != this.currentClass || this.exotics.length == 0) {\n        this.currentClass = c.characterClass;\n        await this.updateExoticsForClass();\n      }\n      this.includeCollectionRolls = c.includeCollectionRolls;\n      this.includeVendorRolls = c.includeVendorRolls;\n      this.selectedExotics = c.selectedExotics;\n      this.ignoreSunsetArmor = c.ignoreSunsetArmor;\n      this.allowBlueArmorPieces = c.allowBlueArmorPieces;\n      this.ignoreExistingExoticArtificeSlots = c.ignoreExistingExoticArtificeSlots;\n    });\n\n    this.inventory.manifest\n      .pipe(debounceTime(10), takeUntil(this.ngUnsubscribe))\n      .subscribe(async () => {\n        await this.updateExoticsForClass();\n      });\n    this.inventory.inventory\n      .pipe(debounceTime(10), takeUntil(this.ngUnsubscribe))\n      .subscribe(async () => {\n        await this.updateExoticsForClass();\n      });\n  }\n\n  private async updateExoticsForClass() {\n    const armors = await this.inventory.getExoticsForClass(this.currentClass);\n\n    function uniq(a: ClassExoticInfo[]) {\n      var seen: any = {};\n      return a.filter(function (item) {\n        var k = item.item.hash;\n        return seen.hasOwnProperty(k) ? false : (seen[k] = true);\n      });\n    }\n\n    this.exotics = [\n      uniq(armors.filter((a) => a.item.slot == ArmorSlot.ArmorSlotHelmet)),\n      uniq(armors.filter((a) => a.item.slot == ArmorSlot.ArmorSlotGauntlet)),\n      uniq(armors.filter((a) => a.item.slot == ArmorSlot.ArmorSlotChest)),\n      uniq(armors.filter((a) => a.item.slot == ArmorSlot.ArmorSlotLegs)),\n      uniq(armors.filter((a) => a.item.slot == ArmorSlot.ArmorSlotClass)),\n    ];\n  }\n\n  setAllowCollectionRolls(allow: boolean) {\n    this.config.modifyConfiguration((c) => {\n      c.includeCollectionRolls = allow;\n    });\n  }\n\n  setAllowVendorItems(allow: boolean) {\n    this.config.modifyConfiguration((c) => {\n      c.includeVendorRolls = allow;\n    });\n  }\n\n  setAllowBlueArmorPieces(allow: boolean) {\n    this.config.modifyConfiguration((c) => {\n      c.allowBlueArmorPieces = allow;\n    });\n  }\n\n  setIgnoreSunsetArmor(ignore: boolean) {\n    this.config.modifyConfiguration((c) => {\n      c.ignoreSunsetArmor = ignore;\n    });\n  }\n\n  setIgnoreExistingExoticArtificeSlots(allow: boolean) {\n    this.config.modifyConfiguration((c) => {\n      c.ignoreExistingExoticArtificeSlots = allow;\n    });\n  }\n\n  selectExotic(hash: number, $event: any) {\n    const index = this.selectedExotics.indexOf(hash);\n    if (index > -1) {\n      // Always delete an item if it is already in the list\n      this.selectedExotics.splice(index, 1);\n    } else if (hash == FORCE_USE_NO_EXOTIC) {\n      this.selectedExotics = [FORCE_USE_NO_EXOTIC];\n    } else if (this.selectedExotics.length == 0 || !$event.shiftKey) {\n      // if length is 0 or shift is NOT pressed, add the exotic\n      this.selectedExotics = [hash];\n    }\n    this.config.modifyConfiguration((c) => {\n      c.selectedExotics = this.selectedExotics;\n    });\n  }\n\n  async refreshAll() {\n    await this.inventory.refreshAll(true, true);\n  }\n\n  private ngUnsubscribe = new Subject();\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { AuthService } from \"./auth.service\";\nimport { InventoryService } from \"./inventory.service\";\nimport { DestinyClass } from \"bungie-api-ts/destiny2/interfaces\";\nimport { MembershipService } from \"./membership.service\";\nimport { ConfigurationService } from \"./configuration.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserdataService {\n  public characters:\n    | any[]\n    | { emblemUrl: string; characterId: string; clazz: DestinyClass; lastPlayed: number }[] = [];\n\n  constructor(\n    private auth: AuthService,\n    private config: ConfigurationService,\n    private membership: MembershipService,\n    private inventory: InventoryService\n  ) {\n    this.loadCachedData();\n\n    this.auth.logoutEvent.subscribe((k) => this.clearCachedData());\n\n    this.inventory.inventory.subscribe(async () => {\n      await this.updateCharacterData();\n    });\n  }\n\n  public clearCachedData() {\n    this.characters = [];\n    localStorage.removeItem(\"cachedCharacters\");\n  }\n\n  private loadCachedData() {\n    let item = localStorage.getItem(\"cachedCharacters\") || \"[]\";\n    this.characters = JSON.parse(item);\n  }\n\n  private async updateCharacterData() {\n    this.characters = await this.membership.getCharacters();\n    this.config.modifyConfiguration((d) => {\n      if (d.characterClass == DestinyClass.Unknown) d.characterClass = this.characters[0].clazz;\n    });\n    localStorage.setItem(\"cachedCharacters\", JSON.stringify(this.characters));\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div class=\"character-container\">\n  <div *ngIf=\"userdata.characters.length === 0\" class=\"character-entry\"> Loading characters.. </div>\n  <div\n    (click)=\"selectClass(char.clazz)\"\n    *ngFor=\"let char of userdata.characters; let idx = index\"\n    [class.selected]=\"selectedClass === char.clazz\"\n    [style.background-image]=\"'url(https://bungie.net/' + char.emblemUrl + ')'\"\n    class=\"character-entry\"\n    style=\"float: left\">\n    <div class=\"class-text\">\n      <span *ngIf=\"char.clazz === 0\">Titan</span>\n      <span *ngIf=\"char.clazz === 1\">Hunter</span>\n      <span *ngIf=\"char.clazz === 2\">Warlock</span>\n    </div>\n    <div *ngIf=\"!!itemCounts[idx]\">\n      <img\n        class=\"head-icon\"\n        matTooltip=\"Amount of armor pieces for this class.\"\n        src=\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 51 51'%3e%3cpath d='M24.77 7.03c-8.15.38-14.42 7.41-14.42 15.57v16.06c0 .23.13.44.34.53l10.33 4.68c.78.35 1.66-.22 1.66-1.07V31.9c0-.39-.19-.75-.52-.97l-5.39-3.64c-.87-.52-1.43-1.5-1.34-2.61.13-1.46 1.46-2.52 2.93-2.52h4.36c.65 0 1.17.53 1.17 1.17v6.71s0 .61 1.61.61 1.61-.61 1.61-.61v-6.71c0-.65.52-1.17 1.17-1.17h4.36c1.47 0 2.8 1.06 2.93 2.52.1 1.11-.47 2.09-1.34 2.61l-5.39 3.64c-.32.22-.52.58-.52.97v10.91c0 .85.88 1.42 1.66 1.07l10.33-4.68c.21-.1.34-.3.34-.53v-16.5c.01-8.61-7.18-15.55-15.88-15.14z'/%3e%3c/svg%3e\" />\n      <span class=\"armor-text\" matTooltip=\"Amount of armor pieces for this class.\"\n        >×{{ itemCounts[char.clazz] }}</span\n      >\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"storedMaterials !== null\">\n  <span class=\"material-listing\" matTooltip=\"Exotic Cipher: {{ storedMaterials['3467984096'] }}\">\n    <img\n      src=\"https://www.bungie.net/common/destiny2_content/icons/9970631fe1052642c268132dfc30e16b.jpg\"\n      alt=\"Exotic Cipher\" />\n    {{ storedMaterials[\"3467984096\"] | number: \"1.0-0\" }}\n  </span>\n  <span class=\"material-listing\" matTooltip=\"Ascendant Shards: {{ storedMaterials['4257549985'] }}\">\n    <img\n      src=\"https://www.bungie.net/common/destiny2_content/icons/0271d214fc3ec91b3def799a4b286b46.jpg\"\n      alt=\"Ascendant Shard\" />\n    {{ storedMaterials[\"4257549985\"] | number: \"1.0-0\" }}\n  </span>\n  <span\n    class=\"material-listing\"\n    matTooltip=\"Enhancement Prisms: {{ storedMaterials['4257549984'] }}\">\n    <img\n      src=\"https://www.bungie.net/common/destiny2_content/icons/dea2a35badf7466d4c2c2697ce6e8d87.jpg\"\n      alt=\"Enhancement Prism\" />\n    {{ storedMaterials[\"4257549984\"] | number: \"1.0-0\" }}\n  </span>\n  <span\n    class=\"material-listing\"\n    matTooltip=\"Enhancement Cores: {{ storedMaterials['3853748946'] }}\">\n    <img\n      src=\"https://www.bungie.net/common/destiny2_content/icons/0a4eb695ed55b4e720ddc401460cc0f9.jpg\"\n      alt=\"Enhancement Core\" />\n    {{ storedMaterials[\"3853748946\"] | number: \"1.0-0\" }}\n  </span>\n  <span class=\"material-listing\" matTooltip=\"Glimmer: {{ storedMaterials['3159615086'] }}\">\n    <img\n      src=\"https://www.bungie.net/common/destiny2_content/icons/88993eaeedad32f42072df6f77f47311.png\"\n      alt=\"Glimmer\" />\n    {{ storedMaterials[\"3159615086\"] | number: \"1.0-0\" }}\n  </span>\n</div>\n\n<a color=\"primary\" class=\"hide-gt-xs\" mat-flat-button routerLink=\"/help\" style=\"margin-left: 15px\">\n  <mat-icon>help</mat-icon>\n  Help and Information about D2ArmorPicker\n</a>\n\n<div>\n  If you like my work, you can\n  <a\n    color=\"accent\"\n    href=\"https://ko-fi.com/mijago\"\n    matTooltip=\"You like my work? This leads you to ko-fi.com, where you can easily support me!\"\n    target=\"_blank\">\n    support me here.</a\n  >\n  You can also\n  <a color=\"accent\" href=\"http://discord.d2armorpicker.com\" target=\"_blank\">\n    join my dev Discord!\n  </a>\n\n  <div>\n    Also check out my Discord-Bot\n    <div class=\"crayon_logo_container\">\n      <img\n        class=\"crayon_logo\"\n        alt=\"\"\n        src=\"https://cdn.discordapp.com/emojis/917423317139480586.webp?size=96&quality=lossless\" />\n    </div>\n\n    <a href=\"https://mijago.github.io/Crayon\" target=\"_blank\">Crayon</a>, for all your item\n    information needs!\n  </div>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\nimport { ConfigurationService } from \"../../../../services/configuration.service\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { UserdataService } from \"../../../../services/userdata.service\";\nimport { InventoryService } from \"../../../../services/inventory.service\";\n\n@Component({\n  selector: \"app-desired-class-selection\",\n  templateUrl: \"./desired-class-selection.component.html\",\n  styleUrls: [\"./desired-class-selection.component.scss\"],\n})\nexport class DesiredClassSelectionComponent implements OnInit, OnDestroy {\n  itemCounts: (null | number)[] = [null, null, null];\n  selectedClass = -1;\n  public storedMaterials: {\n    \"3853748946\": number;\n    \"4257549985\": number;\n    \"4257549984\": number;\n    \"3159615086\": number;\n    \"3467984096\": number;\n  } | null = null;\n\n  constructor(\n    public config: ConfigurationService,\n    public userdata: UserdataService,\n    public inv: InventoryService\n  ) {}\n\n  ngOnInit(): void {\n    this.config.configuration.pipe(takeUntil(this.ngUnsubscribe)).subscribe((c) => {\n      this.selectedClass = c.characterClass;\n\n      // find valid\n      const classAvailable =\n        this.userdata.characters.findIndex((chr) => chr.clazz == c.characterClass) != -1;\n      if (this.userdata.characters.length > 0 && !classAvailable) {\n        this.config.modifyConfiguration((d) => {\n          d.characterClass = this.userdata.characters[0].clazz;\n          d.selectedExotics = [];\n        });\n      }\n    });\n    this.inv.inventory.pipe(takeUntil(this.ngUnsubscribe)).subscribe(async (k) => {\n      await this.loadStoredMaterials();\n      await this.updateItemCount();\n    });\n  }\n\n  selectClass(clazz: number) {\n    if (this.config.readonlyConfigurationSnapshot.characterClass == clazz) return;\n\n    this.config.modifyConfiguration((d) => {\n      d.characterClass = clazz;\n      d.selectedExotics = [];\n    });\n  }\n\n  private ngUnsubscribe = new Subject();\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  private async updateItemCount() {\n    for (let n = 0; n < 3; n++) this.itemCounts[n] = await this.inv.getItemCountForClass(n);\n  }\n\n  private async loadStoredMaterials() {\n    var k: {\n      \"3853748946\": number;\n      \"4257549985\": number;\n      \"4257549984\": number;\n      \"3159615086\": number;\n      \"3467984096\": number;\n    } = JSON.parse(localStorage.getItem(\"stored-materials\") || \"{}\");\n\n    this.storedMaterials = {\n      \"3853748946\": k[\"3853748946\"] ?? 0,\n      \"4257549985\": k[\"4257549985\"] ?? 0,\n      \"4257549984\": k[\"4257549984\"] ?? 0,\n      \"3159615086\": k[\"3159615086\"] ?? 0,\n      \"3467984096\": k[\"3467984096\"] ?? 0,\n    };\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, Input } from \"@angular/core\";\nimport { Modifier } from \"../../../../data/modifier\";\n\n@Component({\n  selector: \"app-mod-description-tooltip\",\n  templateUrl: \"./mod-description-tooltip.component.html\",\n  styleUrls: [\"./mod-description-tooltip.component.css\"],\n})\nexport class ModDescriptionTooltipComponent {\n  @Input() mod: Modifier | undefined;\n\n  constructor() {}\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div>\n  <div class=\"tooltip-container\">\n    <table>\n      <tr>\n        <td class=\"exotic-name\">{{ mod?.name }}</td>\n      </tr>\n      <tr>\n        <td>{{ mod?.description }}</td>\n      </tr>\n    </table>\n  </div>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {\n  Directive,\n  Input,\n  ElementRef,\n  OnInit,\n  HostListener,\n  ComponentRef,\n  OnDestroy,\n} from \"@angular/core\";\nimport { Overlay, OverlayPositionBuilder, OverlayRef } from \"@angular/cdk/overlay\";\nimport { ComponentPortal } from \"@angular/cdk/portal\";\nimport { Modifier } from \"../../../../data/modifier\";\nimport { ModDescriptionTooltipComponent } from \"./mod-description-tooltip.component\";\n\n@Directive({\n  selector: \"[modTooltip]\",\n})\nexport class ModTooltipDirective implements OnInit, OnDestroy {\n  //If this is specified then specified text will be show in in the tooltip\n  @Input(`modTooltip`) mod: Modifier | undefined;\n\n  private _overlayRef: OverlayRef | undefined;\n\n  constructor(\n    private _overlay: Overlay,\n    private _overlayPositionBuilder: OverlayPositionBuilder,\n    private _elementRef: ElementRef\n  ) {}\n\n  /**\n   * Init life cycle event handler\n   */\n  ngOnInit() {\n    const positionStrategy = this._overlayPositionBuilder\n      .flexibleConnectedTo(this._elementRef)\n      .withPositions([\n        {\n          originX: \"center\",\n          originY: \"bottom\",\n          overlayX: \"center\",\n          overlayY: \"top\",\n          offsetY: 5,\n        },\n        {\n          originX: \"center\",\n          originY: \"top\",\n          overlayX: \"center\",\n          overlayY: \"bottom\",\n          offsetY: -5,\n        },\n      ]);\n\n    this._overlayRef = this._overlay.create({ positionStrategy });\n    this._overlayRef.addPanelClass(\"overlay-no-pointer-event\");\n  }\n\n  /**\n   * This method will be called whenever mouse enters in the Host element\n   * i.e. where this directive is applied\n   * This method will show the tooltip by instantiating the McToolTipComponent and attaching to the overlay\n   */\n  @HostListener(\"mouseenter\")\n  show() {\n    //attach the component if it has not already attached to the overlay\n    if (this._overlayRef && !this._overlayRef.hasAttached()) {\n      const tooltipRef: ComponentRef<ModDescriptionTooltipComponent> = this._overlayRef.attach(\n        new ComponentPortal(ModDescriptionTooltipComponent)\n      );\n      tooltipRef.instance.mod = this.mod;\n    }\n  }\n\n  /**\n   * This method will be called when mouse goes out of the host element\n   * i.e. where this directive is applied\n   * This method will close the tooltip by detaching the overlay from the view\n   */\n  @HostListener(\"mouseleave\")\n  hide() {\n    this.closeToolTip();\n  }\n\n  /**\n   * Destroy lifecycle event handler\n   * This method will make sure to close the tooltip\n   * It will be needed in case when app is navigating to different page\n   * and user is still seeing the tooltip; In that case we do not want to hang around the\n   * tooltip after the page [on which tooltip visible] is destroyed\n   */\n  ngOnDestroy() {\n    this.closeToolTip();\n  }\n\n  /**\n   * This method will close the tooltip by detaching the component from the overlay\n   */\n  private closeToolTip() {\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n    }\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<span *ngFor=\"let d of data; let idx = index\">\n  <ng-container *ngIf=\"idx === 0\">\n    <br />\n    <mat-button-toggle-group [value]=\"selectedElement\" class=\"mat-primary\">\n      <mat-button-toggle (click)=\"setElement(ModifierType.Arc)\" [value]=\"ModifierType.Arc\">\n        Arc\n      </mat-button-toggle>\n      <mat-button-toggle (click)=\"setElement(ModifierType.Solar)\" [value]=\"ModifierType.Solar\">\n        Solar\n      </mat-button-toggle>\n      <mat-button-toggle (click)=\"setElement(ModifierType.Void)\" [value]=\"ModifierType.Void\">\n        Void\n      </mat-button-toggle>\n      <mat-button-toggle (click)=\"setElement(ModifierType.Stasis)\" [value]=\"ModifierType.Stasis\">\n        Stasis\n      </mat-button-toggle>\n      <mat-button-toggle (click)=\"setElement(ModifierType.Strand)\" [value]=\"ModifierType.Strand\">\n        Strand\n      </mat-button-toggle>\n      <mat-button-toggle\n        (click)=\"setElement(ModifierType.Prismatic)\"\n        [value]=\"ModifierType.Prismatic\">\n        Prismatic\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n  </ng-container>\n  <ng-container *ngIf=\"!d.group || d.type === selectedElement\">\n    <h3 class=\"stat-part-title\" *ngIf=\"!d.group\">{{ d.name }}</h3>\n    <span *ngIf=\"d.data.length === 0\"\n      >There are no fragments configured yet. Please be patient.</span\n    >\n    <table [dataSource]=\"d.data\" mat-table *ngIf=\"d.data.length > 0\">\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"name\">\n        <th *matHeaderCellDef mat-header-cell>Name</th>\n        <td *matCellDef=\"let element\" mat-cell [modTooltip]=\"element\">\n          <mat-slide-toggle\n            [checked]=\"selectedMods.indexOf(element.id) > -1\"\n            color=\"primary\"\n            style=\"cursor: pointer !important; user-select: none\">\n            <app-item-icon [itemHash]=\"element.hash\"></app-item-icon>\n            {{ element.name }}\n          </mat-slide-toggle>\n        </td>\n      </ng-container>\n\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"mobility\">\n        <th *matHeaderCellDef mat-header-cell>\n          <app-stat-icon [stat]=\"0\"></app-stat-icon>\n        </th>\n        <td *matCellDef=\"let element\" mat-cell>\n          <span *ngVar=\"getModifierTextForValue(element.bonus, 0) as value\">\n            <span *ngIf=\"value > 0\" class=\"stat-positive\">+{{ value }}</span>\n            <span *ngIf=\"value < 0\" class=\"stat-negative\">{{ value }}</span>\n          </span>\n        </td>\n      </ng-container>\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"resilience\">\n        <th *matHeaderCellDef mat-header-cell>\n          <app-stat-icon [stat]=\"1\"></app-stat-icon>\n        </th>\n        <td *matCellDef=\"let element\" mat-cell>\n          <span *ngVar=\"getModifierTextForValue(element.bonus, 1) as value\">\n            <span *ngIf=\"value > 0\" class=\"stat-positive\">+{{ value }}</span>\n            <span *ngIf=\"value < 0\" class=\"stat-negative\">{{ value }}</span>\n          </span>\n        </td>\n      </ng-container>\n\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"recovery\">\n        <th *matHeaderCellDef mat-header-cell>\n          <app-stat-icon [stat]=\"2\"></app-stat-icon>\n        </th>\n        <td *matCellDef=\"let element\" mat-cell>\n          <span *ngVar=\"getModifierTextForValue(element.bonus, 2) as value\">\n            <span *ngIf=\"value > 0\" class=\"stat-positive\">+{{ value }}</span>\n            <span *ngIf=\"value < 0\" class=\"stat-negative\">{{ value }}</span>\n          </span>\n        </td>\n      </ng-container>\n\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"discipline\">\n        <th *matHeaderCellDef mat-header-cell>\n          <app-stat-icon [stat]=\"3\"></app-stat-icon>\n        </th>\n        <td *matCellDef=\"let element\" mat-cell>\n          <span *ngVar=\"getModifierTextForValue(element.bonus, 3) as value\">\n            <span *ngIf=\"value > 0\" class=\"stat-positive\">+{{ value }}</span>\n            <span *ngIf=\"value < 0\" class=\"stat-negative\">{{ value }}</span>\n          </span>\n        </td>\n      </ng-container>\n\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"intellect\">\n        <th *matHeaderCellDef mat-header-cell>\n          <app-stat-icon [stat]=\"4\"></app-stat-icon>\n        </th>\n        <td *matCellDef=\"let element\" mat-cell>\n          <span *ngVar=\"getModifierTextForValue(element.bonus, 4) as value\">\n            <span *ngIf=\"value > 0\" class=\"stat-positive\">+{{ value }}</span>\n            <span *ngIf=\"value < 0\" class=\"stat-negative\">{{ value }}</span>\n          </span>\n        </td>\n      </ng-container>\n\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"strength\">\n        <th *matHeaderCellDef mat-header-cell>\n          <app-stat-icon [stat]=\"5\"></app-stat-icon>\n        </th>\n        <td *matCellDef=\"let element\" mat-cell>\n          <span *ngVar=\"getModifierTextForValue(element.bonus, 5) as value\">\n            <span *ngIf=\"value > 0\" class=\"stat-positive\">+{{ value }}</span>\n            <span *ngIf=\"value < 0\" class=\"stat-negative\">{{ value }}</span>\n          </span>\n        </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n      <tr\n        (click)=\"handleRowClick(row)\"\n        *matRowDef=\"let row; columns: displayedColumns\"\n        [class.selected]=\"selectedMods.indexOf(row.id) > -1\"\n        mat-row></tr>\n    </table>\n  </ng-container>\n</span>\n\n<div id=\"clear-container\">\n  <button (click)=\"clear()\" color=\"warn\" mat-stroked-button>Clear the whole selection</button>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ModInformation } from \"../../../../data/ModInformation\";\nimport { ModifierType } from \"../../../../data/enum/modifierType\";\nimport { Modifier, ModifierValue } from \"../../../../data/modifier\";\nimport { ArmorStat, SpecialArmorStat } from \"../../../../data/enum/armor-stat\";\nimport { ConfigurationService } from \"../../../../services/configuration.service\";\nimport { ModOrAbility } from \"../../../../data/enum/modOrAbility\";\nimport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS } from \"@angular/material/slide-toggle\";\nimport { DestinyClass } from \"bungie-api-ts/destiny2\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { Subject } from \"rxjs\";\n\n@Component({\n  selector: \"app-desired-mods-selection\",\n  templateUrl: \"./desired-mods-selection.component.html\",\n  styleUrls: [\"./desired-mods-selection.component.scss\"],\n  providers: [\n    {\n      provide: MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,\n      useValue: { disableToggleValue: false, disableDragValue: true },\n    },\n  ],\n})\nexport class DesiredModsSelectionComponent implements OnInit, OnDestroy {\n  ModifierType = ModifierType;\n  ModOrAbility = ModOrAbility;\n  dataSource: Modifier[];\n  displayedColumns = [\n    \"name\",\n    \"mobility\",\n    \"resilience\",\n    \"recovery\",\n    \"discipline\",\n    \"intellect\",\n    \"strength\",\n  ];\n  private selectedClass: DestinyClass = DestinyClass.Unknown;\n  data: { data: Modifier[]; name: string; group: boolean; type: ModifierType }[];\n  selectedMods: ModOrAbility[] = [];\n  selectedElement: ModifierType = ModifierType.Solar;\n\n  constructor(private config: ConfigurationService) {\n    const modifiers = Object.values(ModInformation).sort((a, b) => {\n      if (a.name.toLowerCase() < b.name.toLowerCase()) {\n        return -1;\n      }\n      if (a.name.toLowerCase() > b.name.toLowerCase()) {\n        return 1;\n      }\n      return 0;\n    });\n\n    this.data = [\n      {\n        name: \"Stasis Fragments\",\n        data: modifiers.filter((value) => value.type == ModifierType.Stasis),\n        group: true,\n        type: ModifierType.Stasis,\n      },\n      {\n        name: \"Void Fragments\",\n        data: modifiers.filter((value) => value.type == ModifierType.Void),\n        group: true,\n        type: ModifierType.Void,\n      },\n      {\n        name: \"Solar Fragments\",\n        data: modifiers.filter((value) => value.type == ModifierType.Solar),\n        group: true,\n        type: ModifierType.Solar,\n      },\n      {\n        name: \"Arc Fragments\",\n        data: modifiers.filter((value) => value.type == ModifierType.Arc),\n        group: true,\n        type: ModifierType.Arc,\n      },\n      {\n        name: \"Strand Fragments\",\n        data: modifiers.filter((value) => value.type == ModifierType.Strand),\n        group: true,\n        type: ModifierType.Strand,\n      },\n      {\n        name: \"Prismatic Fragments\",\n        data: modifiers.filter((value) => value.type == ModifierType.Prismatic),\n        group: true,\n        type: ModifierType.Prismatic,\n      },\n    ];\n\n    this.dataSource = modifiers;\n  }\n\n  ngOnInit(): void {\n    this.config.configuration.pipe(takeUntil(this.ngUnsubscribe)).subscribe((c) => {\n      this.selectedMods = c.enabledMods;\n      this.selectedClass = c.characterClass;\n      this.selectedElement = c.selectedModElement;\n    });\n  }\n\n  getModifierTextForValue(value: ModifierValue[], type: ArmorStat | SpecialArmorStat) {\n    return value\n      .filter((v) => {\n        if (v.stat == type) return true;\n        if (v.stat == SpecialArmorStat.ClassAbilityRegenerationStat) {\n          if (this.selectedClass == DestinyClass.Titan && type == ArmorStat.Resilience) return true;\n          if (this.selectedClass == DestinyClass.Hunter && type == ArmorStat.Mobility) return true;\n          if (this.selectedClass == DestinyClass.Warlock && type == ArmorStat.Recovery) return true;\n        }\n        return false;\n      })\n      .reduce((p, v) => p + v.value, 0);\n  }\n\n  handleRowClick(row: Modifier) {\n    this.config.modifyConfiguration((c) => {\n      const pos = c.enabledMods.indexOf(row.id);\n      if (pos > -1) {\n        c.enabledMods.splice(pos, 1);\n      } else {\n        c.enabledMods.push(row.id);\n      }\n    });\n  }\n\n  clear() {\n    this.config.modifyConfiguration((c) => {\n      c.enabledMods = [];\n    });\n  }\n\n  setElement(element: ModifierType) {\n    if (this.selectedElement == element) return;\n    this.config.modifyConfiguration((c) => {\n      const pos = c.enabledMods.filter(\n        (m) =>\n          ModInformation[m].type != ModifierType.CombatStyleMod && ModInformation[m].type != element\n      );\n\n      c.selectedModElement = element;\n\n      for (let toDisableMods of pos) {\n        const position = c.enabledMods.indexOf(toDisableMods);\n        c.enabledMods.splice(position, 1);\n      }\n    });\n  }\n\n  private ngUnsubscribe = new Subject();\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div *ngFor=\"let category of fieldKeys\">\n  <span class=\"category-header\">{{ category }}</span>\n  <div *ngFor=\"let f of fields2[category]\" class=\"adv-settings\">\n    <mat-slide-toggle\n      color=\"primary\"\n      [disabled]=\"f.disabled\"\n      [checked]=\"f.value\"\n      (change)=\"f.cp($event.checked)\">\n      {{ f.name }}\n    </mat-slide-toggle>\n    <mat-icon\n      inline\n      aria-hidden=\"false\"\n      aria-label=\"Help\"\n      *ngIf=\"f.help\"\n      matTooltip=\"{{ f.help }}\"\n      #tooltip=\"matTooltip\">\n      help\n    </mat-icon>\n    <mat-icon\n      inline\n      aria-hidden=\"false\"\n      aria-label=\"Help\"\n      *ngIf=\"f.impactsResultCount\"\n      class=\"report-problem-icon\"\n      matTooltip=\"This setting might impact the amount of results. It may happen that you won't get any results if you change this setting. In this case, simply switch it back to its default state.\"\n      #tooltip=\"matTooltip\">\n      report_problem\n    </mat-icon>\n  </div>\n  <div class=\"category-spacer\"></div>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ConfigurationService } from \"../../../../services/configuration.service\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { environment } from \"../../../../../environments/environment\";\n\ninterface AdvancedSettingField {\n  name: string;\n  value: boolean;\n  cp: (v: boolean) => void;\n  help: string | undefined;\n  disabled: boolean;\n  impactsResultCount: boolean;\n}\n\n@Component({\n  selector: \"app-advanced-settings\",\n  templateUrl: \"./advanced-settings.component.html\",\n  styleUrls: [\"./advanced-settings.component.scss\"],\n})\nexport class AdvancedSettingsComponent implements OnInit, OnDestroy {\n  fields2: { [id: string]: AdvancedSettingField[] } = {};\n  fieldKeys: string[] = [];\n\n  constructor(private config: ConfigurationService) {}\n\n  ngOnInit(): void {\n    this.config.configuration.pipe(takeUntil(this.ngUnsubscribe)).subscribe((c) => {\n      this.fields2 = {\n        Events: [\n          {\n            name: \"Enforce the usage of a Festival of the Lost Mask.\",\n            cp: (v: boolean) => this.config.modifyConfiguration((c) => (c.useFotlArmor = v)),\n            value: c.useFotlArmor,\n            disabled: false,\n            impactsResultCount: true,\n            help: \"Only use a FotL masks. You will not get results if you do not own the mask.\",\n          },\n        ],\n        Masterwork: [\n          {\n            name: \"Assume all legendary items are masterworked\",\n            cp: (v: boolean) =>\n              this.config.modifyConfiguration((c) => (c.assumeLegendariesMasterworked = v)),\n            value: c.assumeLegendariesMasterworked,\n            disabled: false,\n            impactsResultCount: false,\n            help: undefined,\n          },\n          {\n            name: \"Assume all legendary class items are masterworked\",\n            cp: (v: boolean) =>\n              this.config.modifyConfiguration((c) => (c.assumeClassItemMasterworked = v)),\n            value: c.assumeClassItemMasterworked,\n            disabled: false,\n            impactsResultCount: false,\n            help: \"If this setting is enabled, a plain +2 is added to every stat. This means that your Class Item must be masterworked. Ignored if you select an exotic class item.\",\n          },\n          {\n            name: \"Assume all exotic items are masterworked\",\n            cp: (v: boolean) =>\n              this.config.modifyConfiguration((c) => (c.assumeExoticsMasterworked = v)),\n            value: c.assumeExoticsMasterworked,\n            disabled: false,\n            impactsResultCount: false,\n            help: \"If this setting is enabled, the tool will treat non-masterworked exotic armor as if it were masterworked-.\",\n          },\n          {\n            name: \"Only use already masterworked exotic items\",\n            cp: (v: boolean) =>\n              this.config.modifyConfiguration((c) => (c.onlyUseMasterworkedExotics = v)),\n            value: c.onlyUseMasterworkedExotics,\n            disabled: false,\n            impactsResultCount: true,\n            help: undefined,\n          },\n          {\n            name: \"Only use already masterworked legendary items\",\n            cp: (v: boolean) =>\n              this.config.modifyConfiguration((c) => (c.onlyUseMasterworkedLegendaries = v)),\n            value: c.onlyUseMasterworkedLegendaries,\n            disabled: false,\n            impactsResultCount: true,\n            help: undefined,\n          },\n        ],\n        \"Artifice Slots\": [\n          {\n            name: \"Assume every legendary class item is an artifice armor.\",\n            cp: (v: boolean) =>\n              this.config.modifyConfiguration((c) => (c.assumeClassItemIsArtifice = v)),\n            value: c.assumeClassItemIsArtifice || c.assumeEveryLegendaryIsArtifice,\n            disabled: c.assumeEveryLegendaryIsArtifice,\n            impactsResultCount: true,\n            help: \"This is for debugging purposes. No support if you enable this.\",\n          },\n          {\n            name: \"Assume every legendary is an artifice armor.\",\n            cp: (v: boolean) =>\n              this.config.modifyConfiguration((c) => (c.assumeEveryLegendaryIsArtifice = v)),\n            value: c.assumeEveryLegendaryIsArtifice,\n            disabled: false,\n            impactsResultCount: true,\n            help: \"This is for debugging purposes. No support if you enable this.\",\n          },\n          {\n            name: \"Assume every exotic has an artifice slot.\",\n            cp: (v: boolean) =>\n              this.config.modifyConfiguration((c) => (c.assumeEveryExoticIsArtifice = v)),\n            value: c.assumeEveryExoticIsArtifice,\n            disabled: false,\n            impactsResultCount: true,\n            help: \"Preparation for the upcoming Artifice Mod Slot for exotics.\",\n          },\n        ],\n        \"Performance Optimization\": [\n          {\n            name: \"Use security features to prevent app crashes (resets on reload).\",\n            cp: (v: boolean) => this.config.modifyConfiguration((c) => (c.limitParsedResults = v)),\n            value: c.limitParsedResults,\n            disabled: false,\n            impactsResultCount: true,\n            help: \"Only parse the first 30,000 results. Deactivating this may crash your browser. The results will still be limited to 1,000,000 entries. Note that you will not miss any significant results by leaving this enabled.\",\n          },\n        ],\n        \"Extra Columns\": [\n          {\n            name: \"Show maximum reachable tiers in the Tiers-Column instead of real Tiers.\",\n            cp: (v: boolean) =>\n              this.config.modifyConfiguration((c) => (c.showPotentialTierColumn = v)),\n            value: c.showPotentialTierColumn,\n            disabled: false,\n            impactsResultCount: false,\n            help: \"Shows an additional column in the table that shows how many tiers this build would have, if all stat mods were used. This is important when builds do not use all 5 stat mods.\",\n          },\n          {\n            name: \"Show the wasted stats in an extra column.\",\n            cp: (v: boolean) =>\n              this.config.modifyConfiguration((c) => (c.showWastedStatsColumn = v)),\n            value: c.showWastedStatsColumn,\n            disabled: false,\n            impactsResultCount: false,\n            help: \"Shows an additional column in the table that shows how many stats are wasted in a build.\",\n          },\n        ],\n        \"Wasted Stats\": [\n          {\n            name: \"Try to optimize wasted stats (slower)\",\n            cp: (v: boolean) => this.config.modifyConfiguration((c) => (c.tryLimitWastedStats = v)),\n            value: c.tryLimitWastedStats,\n            disabled: false,\n            impactsResultCount: false,\n            help: \"The tool will try to add minor stat mods to minimize wasted stats. This only works for combinations that fulfill your desired stat combination with enough mods so at least one mod slot is still open.\",\n          },\n          {\n            name: \"Only show builds with no wasted stats\",\n            cp: (v: boolean) =>\n              this.config.modifyConfiguration((c) => (c.onlyShowResultsWithNoWastedStats = v)),\n            value: environment.featureFlags.enableZeroWaste && c.onlyShowResultsWithNoWastedStats,\n            disabled: !environment.featureFlags.enableZeroWaste,\n            impactsResultCount: true,\n            help: \"Only show builds with zero wasted stats - this means, its highly likely that you won't get any results.\",\n          },\n        ],\n        \"Data-Science\": [\n          {\n            name: \"Add a constant +1 resilience to the results with non-exotic chests (resets on reload).\",\n            cp: (v: boolean) =>\n              this.config.modifyConfiguration((c) => (c.addConstent1Resilience = v)),\n            value: c.addConstent1Resilience,\n            disabled: false,\n            impactsResultCount: false,\n            help: \"You usually do not want to use this.\",\n          },\n          {\n            name: \"Replace the tier selection with text fields for exact stat values.\",\n            cp: (v: boolean) =>\n              this.config.modifyConfiguration((c) => {\n                c.allowExactStats = v;\n                if (!v) {\n                  for (let cf of Object.values(c.minimumStatTiers)) {\n                    cf.value = Math.floor(cf.value);\n                  }\n                }\n              }),\n            value: c.allowExactStats,\n            disabled: false,\n            impactsResultCount: true,\n            help: \"This is a beta feature. Usability and quality may vary a lot.\",\n          },\n        ],\n      };\n      this.fieldKeys = Object.keys(this.fields2);\n    });\n  }\n\n  private ngUnsubscribe = new Subject();\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, Inject } from \"@angular/core\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\nexport interface ConfirmDialogData {\n  description: string;\n}\n\n@Component({\n  selector: \"app-confirm-dialog\",\n  templateUrl: \"./confirm-dialog.component.html\",\n  styleUrls: [\"./confirm-dialog.component.css\"],\n})\nexport class ConfirmDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogData\n  ) {}\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<h1 mat-dialog-title>Confirm</h1>\n<div mat-dialog-content>\n  <p>{{ data.description }}</p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"true\">Ok</button>\n</div>\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<form (submit)=\"submit()\" [formGroup]=\"settingsNameForm\">\n  <table id=\"settings\">\n    <tr>\n      <td>\n        <mat-form-field appearance=\"outline\" subscriptSizing=\"dynamic\" subscriptSizing=\"dynamic\">\n          <mat-label>Name to save the configuration</mat-label>\n          <input\n            formControlName=\"name\"\n            matInput\n            maxlength=\"30\"\n            minlength=\"4\"\n            placeholder=\"Awesome Discipline Build 4\" />\n        </mat-form-field>\n      </td>\n      <td>\n        <button\n          [disabled]=\"\n            !this.settingsNameForm.get('name')?.value ||\n            this.settingsNameForm.get('name')?.value.length < 4 ||\n            this.settingsNameForm.get('name')?.value.length > 30\n          \"\n          color=\"primary\"\n          mat-raised-button\n          type=\"submit\"\n          >Save current\n        </button>\n      </td>\n      <td>\n        <button\n          (click)=\"clearEverything()\"\n          color=\"warn\"\n          mat-raised-button\n          matTooltip=\"Clears the ENTIRE configuration and uses the default settings. Use with caution.\"\n          >Clear everything\n        </button>\n      </td>\n      <td>\n        <button\n          (click)=\"\n            openSnackBar(\n              'Copied the configuration to your clipboard. You can share it with your friends.'\n            )\n          \"\n          [cdkCopyToClipboard]=\"config.getCurrentConfigBase64Compressed()\"\n          color=\"primary\"\n          mat-raised-button\n          matTooltip=\"Copy your current configuration into your clipboard. You will be able to share it with others and import it later.\"\n          >Copy Current\n        </button>\n      </td>\n    </tr>\n    <tr style=\"display: none\">\n      <td>\n        <mat-form-field appearance=\"outline\" subscriptSizing=\"dynamic\">\n          <mat-label>Load saved configuration</mat-label>\n          <mat-select [(value)]=\"selectedEntry\" [disabled]=\"storedConfigs.length === 0\">\n            <mat-option *ngFor=\"let element of storedConfigs\" [value]=\"element.name\">\n              <span\n                >(<span *ngIf=\"element.configuration.characterClass === 0\">Titan</span>\n                <span *ngIf=\"element.configuration.characterClass === 1\">Hunter</span>\n                <span *ngIf=\"element.configuration.characterClass === 2\">Warlock</span>)\n              </span>\n              <span> {{ element.name }}</span>\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </td>\n      <td>\n        <button\n          (click)=\"load(selectedEntry)\"\n          [disabled]=\"!selectedEntry || storedConfigs.length === 0\"\n          color=\"primary\"\n          mat-raised-button\n          matTooltip=\"Load the currently selected configuration.\"\n          >Load\n        </button>\n      </td>\n      <td>\n        <button\n          (click)=\"delete(selectedEntry)\"\n          [disabled]=\"!selectedEntry || storedConfigs.length === 0\"\n          color=\"warn\"\n          mat-stroked-button\n          matTooltip=\"Delete the currently selected configuration. Can not be undone.\"\n          >Delete\n        </button>\n      </td>\n    </tr>\n  </table>\n</form>\n<br />\n\n<table [dataSource]=\"storedConfigs\" mat-table>\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"name\">\n    <th *matHeaderCellDef mat-header-cell>Name</th>\n    <td *matCellDef=\"let element\" mat-cell>{{ element.name }} </td>\n  </ng-container>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"class\">\n    <th *matHeaderCellDef mat-header-cell> Class </th>\n    <td *matCellDef=\"let element\" mat-cell>\n      <span *ngIf=\"element.configuration.characterClass === 0\">Titan</span>\n      <span *ngIf=\"element.configuration.characterClass === 1\">Hunter</span>\n      <span *ngIf=\"element.configuration.characterClass === 2\">Warlock</span>\n    </td>\n  </ng-container>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"mobility\">\n    <th *matHeaderCellDef mat-header-cell>\n      <app-stat-icon [stat]=\"0\"></app-stat-icon>\n    </th>\n    <td *matCellDef=\"let element\" mat-cell>\n      {{ element.configuration.minimumStatTiers[0].value * 10 }}\n    </td>\n  </ng-container>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"resilience\">\n    <th *matHeaderCellDef mat-header-cell>\n      <app-stat-icon [stat]=\"1\"></app-stat-icon>\n    </th>\n    <td *matCellDef=\"let element\" mat-cell>\n      {{ element.configuration.minimumStatTiers[1].value * 10 }}\n    </td>\n  </ng-container>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"recovery\">\n    <th *matHeaderCellDef mat-header-cell>\n      <app-stat-icon [stat]=\"2\"></app-stat-icon>\n    </th>\n    <td *matCellDef=\"let element\" mat-cell>\n      {{ element.configuration.minimumStatTiers[2].value * 10 }}\n    </td>\n  </ng-container>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"discipline\">\n    <th *matHeaderCellDef mat-header-cell>\n      <app-stat-icon [stat]=\"3\"></app-stat-icon>\n    </th>\n    <td *matCellDef=\"let element\" mat-cell>\n      {{ element.configuration.minimumStatTiers[3].value * 10 }}\n    </td>\n  </ng-container>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"intellect\">\n    <th *matHeaderCellDef mat-header-cell>\n      <app-stat-icon [stat]=\"4\"></app-stat-icon>\n    </th>\n    <td *matCellDef=\"let element\" mat-cell>\n      {{ element.configuration.minimumStatTiers[4].value * 10 }}\n    </td>\n  </ng-container>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"strength\">\n    <th *matHeaderCellDef mat-header-cell>\n      <app-stat-icon [stat]=\"5\"></app-stat-icon>\n    </th>\n    <td *matCellDef=\"let element\" mat-cell>\n      {{ element.configuration.minimumStatTiers[5].value * 10 }}\n    </td>\n  </ng-container>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th *matHeaderCellDef mat-header-cell> </th>\n    <td *matCellDef=\"let element\" mat-cell>\n      <button\n        (click)=\"delete(element.name)\"\n        color=\"warn\"\n        mat-icon-button\n        matTooltip=\"Delete this configuration permanently.\">\n        <mat-icon>delete_forever</mat-icon>\n      </button>\n      <button\n        (click)=\"load(element.name)\"\n        color=\"primary\"\n        mat-icon-button\n        matTooltip=\"Load this configuration. Your current settings will be overwritten.\">\n        <mat-icon>check_circle_outline</mat-icon>\n      </button>\n      <button\n        (click)=\"copySingleSettingToClipboard(element)\"\n        color=\"primary\"\n        mat-icon-button\n        matTooltip=\"Copy this configuration into your clipboard. You will be able to share it with others and import it later.\">\n        <mat-icon>get_app</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n  <tr *matRowDef=\"let row; columns: displayedColumns\" mat-row></tr>\n</table>\n\n<ng-container *ngIf=\"storedConfigs.length > 0\">\n  <br />\n  <button\n    color=\"primary\"\n    mat-raised-button\n    (click)=\"copyAllSettingsToClipboard()\"\n    matTooltip=\"Export all configurations to the clipboard. You can then save and share them.\">\n    Copy all saved configurations to the clipboard\n  </button>\n</ng-container>\n\n<!-- import -->\n<br />\n<div>\n  <hr />\n  <h2>Import a previously exported configuration</h2>\n  <form [formGroup]=\"importTextForm\">\n    <table>\n      <tr>\n        <td>\n          <mat-form-field appearance=\"outline\" subscriptSizing=\"dynamic\">\n            <mat-label>Copied configuration</mat-label>\n            <input formControlName=\"content\" matInput />\n          </mat-form-field>\n        </td>\n        <td>\n          <button\n            (click)=\"runImport()\"\n            color=\"primary\"\n            mat-raised-button\n            matTooltip=\"Import the given configuration\">\n            Start the import\n          </button>\n        </td>\n      </tr>\n    </table>\n  </form>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  ConfigurationService,\n  StoredConfiguration,\n} from \"../../../../services/configuration.service\";\nimport { UntypedFormBuilder, UntypedFormGroup } from \"@angular/forms\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport {\n  ConfirmDialogComponent,\n  ConfirmDialogData,\n} from \"../../components/confirm-dialog/confirm-dialog.component\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport * as lzutf8 from \"lzutf8\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { Clipboard } from \"@angular/cdk/clipboard\";\n\n@Component({\n  selector: \"app-load-and-save-settings\",\n  templateUrl: \"./load-and-save-settings.component.html\",\n  styleUrls: [\"./load-and-save-settings.component.css\"],\n})\nexport class LoadAndSaveSettingsComponent implements OnInit, OnDestroy {\n  selectedEntry: string = \"\";\n  storedConfigs: StoredConfiguration[] = [];\n  displayedColumns = [\n    \"name\",\n    \"class\",\n    \"mobility\",\n    \"resilience\",\n    \"recovery\",\n    \"discipline\",\n    \"intellect\",\n    \"strength\",\n    \"delete\",\n  ];\n\n  settingsNameForm: UntypedFormGroup;\n  importTextForm: UntypedFormGroup;\n\n  constructor(\n    public config: ConfigurationService,\n    private formBuilder: UntypedFormBuilder,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar,\n    private clipboard: Clipboard\n  ) {\n    this.settingsNameForm = this.formBuilder.group({ name: [null] });\n    this.importTextForm = this.formBuilder.group({ content: [null] });\n  }\n\n  ngOnInit(): void {\n    this.config.storedConfigurations\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe((d) => (this.storedConfigs = d));\n  }\n\n  submit() {\n    const name = this.settingsNameForm.get(\"name\")?.value;\n    if (!name) return; // TODO LOG ERROR\n\n    if (this.config.doesSavedConfigurationExist(name)) {\n      const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n        width: \"300px\",\n        data: {\n          description: \"Do you want to overwrite this configuration?\",\n        } as ConfirmDialogData,\n      });\n\n      dialogRef.afterClosed().subscribe((result) => {\n        if (result) {\n          this.config.saveCurrentConfigurationToName(name);\n          this.settingsNameForm.reset();\n          this.selectedEntry = name;\n        }\n      });\n    } else {\n      this.config.saveCurrentConfigurationToName(name);\n      this.settingsNameForm.reset();\n      this.selectedEntry = name;\n    }\n  }\n\n  delete(element: string) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: \"300px\",\n      data: { description: \"Do you want to delete this configuration?\" } as ConfirmDialogData,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.config.deleteStoredConfiguration(element);\n    });\n  }\n\n  clearEverything() {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: \"300px\",\n      data: { description: \"Do you want to clear all settings?\" } as ConfirmDialogData,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.config.resetCurrentConfiguration();\n    });\n  }\n\n  load(element: string) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: \"300px\",\n      data: { description: \"Do you want to load this preset?\" } as ConfirmDialogData,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.config.loadSavedConfiguration(element);\n    });\n  }\n\n  runImport() {\n    const content = this.importTextForm.get(\"content\")?.value;\n    if (!content) return this.openSnackBar(\"Invalid input.\");\n    try {\n      const jsonText = lzutf8.decompress(content, { inputEncoding: \"Base64\" });\n      const isArray = jsonText.substr(0, 1) == \"[\";\n      let jsonData = JSON.parse(jsonText);\n      if (!isArray) jsonData = [jsonData];\n\n      console.log(\"Incoming json:\", jsonData);\n      for (let jsonDatum of jsonData) {\n        this.config.checkAndFixOldSavedConfigurations(jsonDatum);\n        if (jsonDatum.hasOwnProperty(\"name\")) {\n          if (isArray) this.config.saveConfiguration(jsonDatum.name, jsonDatum.configuration);\n          else this.config.saveCurrentConfiguration(jsonDatum.configuration);\n        } else {\n          this.config.saveCurrentConfiguration(jsonDatum);\n        }\n      }\n      this.openSnackBar(\"Successfully loaded this configuration\");\n      this.importTextForm.get(\"content\")?.reset();\n    } catch (e) {\n      this.openSnackBar(\"Invalid input.\");\n      console.error(e);\n    }\n  }\n\n  copySingleSettingToClipboard(element: any) {\n    this.clipboard.copy(this.config.getStoredConfigurationBase64Compressed(element.name));\n    this.openSnackBar(\n      \"Copied the configuration to your clipboard. You can share it with your friends.\"\n    );\n  }\n\n  copyAllSettingsToClipboard() {\n    this.clipboard.copy(this.config.getAllStoredConfigurationsBase64Compressed());\n    this.openSnackBar(\n      \"Exported all configurations to the clipboard. You can then save and share them.\"\n    );\n  }\n\n  openSnackBar(message: string) {\n    this._snackBar.open(message, \"\", {\n      duration: 2500,\n      politeness: \"polite\",\n    });\n  }\n\n  private ngUnsubscribe = new Subject();\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div class=\"item-icon-container\" *ngIf=\"characterClass !== null\">\n  <div *ngFor=\"let entries of disabledItems; let idx = index\">\n    <div *ngIf=\"idx === 1 && entries.length > 0\">Helmets</div>\n    <div *ngIf=\"idx === 2 && entries.length > 0\">Gauntlets</div>\n    <div *ngIf=\"idx === 3 && entries.length > 0\">Chest Pieces</div>\n    <div *ngIf=\"idx === 4 && entries.length > 0\">Legs</div>\n    <div *ngIf=\"idx === 5 && entries.length > 0\">Class Items</div>\n\n    <span *ngFor=\"let i of entries; let idx = index\" class=\"item-sub\">\n      <img\n        class=\"item-icon\"\n        src=\"https://bungie.net/{{ i.icon }}\"\n        (click)=\"enableItem(i.itemInstanceId)\"\n        matTooltipClass=\"allow-cr\"\n        [matTooltip]=\"generateTooltip(i)\" />\n      <br *ngIf=\"(idx + 1) % 10 === 0\" />\n    </span>\n  </div>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ConfigurationService } from \"../../../../services/configuration.service\";\nimport { DatabaseService } from \"../../../../services/database.service\";\nimport {\n  IDisplayInventoryArmor,\n  InventoryArmorSource,\n} from \"../../../../data/types/IInventoryArmor\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { DestinyClass, TierType } from \"bungie-api-ts/destiny2\";\nimport { ArmorSlot } from \"src/app/data/enum/armor-slot\";\n\n@Component({\n  selector: \"app-ignored-items-list\",\n  templateUrl: \"./ignored-items-list.component.html\",\n  styleUrls: [\"./ignored-items-list.component.scss\"],\n})\nexport class IgnoredItemsListComponent implements OnInit, OnDestroy {\n  disabledItems: IDisplayInventoryArmor[][] = [];\n  characterClass: DestinyClass | null = null;\n\n  constructor(\n    private config: ConfigurationService,\n    private db: DatabaseService\n  ) {}\n\n  enableItem(instanceId: string) {\n    this.config.modifyConfiguration((cb) => {\n      cb.disabledItems.splice(cb.disabledItems.indexOf(instanceId), 1);\n    });\n  }\n\n  generateTooltip(armor: IDisplayInventoryArmor) {\n    return (\n      \"Click this icon to activate this item again.\\r\\n\" +\n      \"\" +\n      armor.name +\n      \"  \" +\n      \"\" +\n      (armor.mobility + (armor.masterworked ? 2 : 0)) +\n      \"/\" +\n      \"\" +\n      (armor.resilience + (armor.masterworked ? 2 : 0)) +\n      \"/\" +\n      \"\" +\n      (armor.recovery + (armor.masterworked ? 2 : 0)) +\n      \"/\" +\n      \"\" +\n      (armor.discipline + (armor.masterworked ? 2 : 0)) +\n      \"/\" +\n      \"\" +\n      (armor.intellect + (armor.masterworked ? 2 : 0)) +\n      \"/\" +\n      \"\" +\n      (armor.strength + (armor.masterworked ? 2 : 0))\n    );\n  }\n\n  ngOnInit(): void {\n    this.config.configuration.pipe(takeUntil(this.ngUnsubscribe)).subscribe(async (cb) => {\n      this.characterClass = null;\n      const newDisabledItems: IDisplayInventoryArmor[][] = [[], [], [], [], [], []];\n\n      let items = [];\n      for (let hash of cb.disabledItems) {\n        let itemInstance = (await this.db.inventoryArmor\n          .where(\"itemInstanceId\")\n          .equals(hash)\n          .first()) as IDisplayInventoryArmor;\n        if (!itemInstance)\n          itemInstance = {\n            id: 0,\n            hash: 0,\n            itemInstanceId: hash,\n            energyLevel: 0,\n            name: \"Missing Armor\",\n            icon: \"/common/destiny2_content/icons/763634b78eb22168ac707500588b7333.jpg\",\n            description: \"This armor has been deleted\",\n            clazz: DestinyClass.Unknown,\n            slot: ArmorSlot.ArmorSlotNone,\n            isExotic: 0 as 0,\n            rarity: TierType.Unknown,\n            masterworked: false,\n            source: InventoryArmorSource.Inventory,\n            mobility: 0,\n            resilience: 0,\n            recovery: 0,\n            discipline: 0,\n            intellect: 0,\n            strength: 0,\n          };\n        items.push(itemInstance);\n      }\n\n      for (let item of items) {\n        //if (item.clazz != this.characterClass) continue;\n        newDisabledItems[item.slot].push(item);\n      }\n\n      this.characterClass = cb.characterClass;\n\n      for (let row of newDisabledItems) {\n        row.sort((a, b) => a.hash - b.hash);\n      }\n      this.disabledItems = newDisabledItems;\n    });\n  }\n\n  private ngUnsubscribe = new Subject();\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"./settings.component.html\",\n  styleUrls: [\"./settings.component.css\"],\n})\nexport class SettingsComponent {\n  constructor() {}\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div id=\"card-config\">\n  <mat-card appearance=\"outlined\">\n    <mat-card-header>\n      <mat-card-title>Character Selection</mat-card-title>\n    </mat-card-header>\n    <mat-card-content id=\"content-char-selection\">\n      <app-desired-class-selection></app-desired-class-selection>\n    </mat-card-content>\n  </mat-card>\n  <mat-card appearance=\"outlined\">\n    <mat-card-header>\n      <mat-card-title>Select the stats you want to achieve</mat-card-title>\n      <mat-card-subtitle>\n        The heart of this tool. Select the stats you want!\n        <mat-icon\n          inline\n          aria-hidden=\"false\"\n          aria-label=\"Help\"\n          matTooltip=\"Cooldowns and Stats provided by Clarity.\"\n          #tooltip=\"matTooltip\">\n          info\n        </mat-icon>\n      </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <app-desired-stat-selection></app-desired-stat-selection>\n    </mat-card-content>\n  </mat-card>\n  <mat-card appearance=\"outlined\">\n    <mat-card-header>\n      <mat-card-title>Armor Selection</mat-card-title>\n      <mat-card-subtitle>\n        This section allows you to limit the armor pieces that are used in the buildcrafting\n        process.<br />\n        If you want, limit all results to one exotic. <br />\n        Exotics you do not have in the inventory or vault are grayed out.\n      </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <app-desired-exotic-selection></app-desired-exotic-selection>\n    </mat-card-content>\n  </mat-card>\n  <mat-card appearance=\"outlined\">\n    <mat-card-header>\n      <mat-card-title>Armor limitation</mat-card-title>\n      <mat-card-subtitle>\n        This section allows you to further specify what kind of armor and mods you want.\n      </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <app-desired-mod-selection></app-desired-mod-selection>\n    </mat-card-content>\n  </mat-card>\n  <mat-card appearance=\"outlined\">\n    <mat-card-header>\n      <mat-card-title>Stat-Boost Selection</mat-card-title>\n      <mat-card-subtitle>\n        Select Mods and Skills that affect your overall stats.<br />\n        Please note that D2AP also allows theoretical, but impossible input.<br />\n        <b>Only fragments that affect stats are shown.</b>\n      </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <app-desired-mods-selection></app-desired-mods-selection>\n    </mat-card-content>\n  </mat-card>\n  <mat-card appearance=\"outlined\">\n    <mat-card-header>\n      <mat-card-title>Advanced Settings</mat-card-title>\n      <mat-card-subtitle>\n        More settings! Use them to fine-tune your buildcrafting process.\n      </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <app-advanced-settings></app-advanced-settings>\n    </mat-card-content>\n  </mat-card>\n  <mat-card appearance=\"outlined\">\n    <mat-card-header>\n      <mat-card-title>Disabled Armor Pieces</mat-card-title>\n      <mat-card-subtitle>\n        These armor pieces are disabled. Click them to enable them again.<br />\n        They won't show up in any results.<br />\n        You can disable items in the detailed result overview.\n      </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <app-ignored-items-list></app-ignored-items-list>\n    </mat-card-content>\n  </mat-card>\n  <mat-card appearance=\"outlined\">\n    <mat-card-header>\n      <mat-card-title>Configuration Management</mat-card-title>\n      <mat-card-subtitle>\n        Save and load your buildcrafting settings for another day!\n      </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <app-load-and-save-settings></app-load-and-save-settings>\n    </mat-card-content>\n  </mat-card>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-armor-picker-page\",\n  templateUrl: \"./armor-picker-page.component.html\",\n  styleUrls: [\"./armor-picker-page.component.css\"],\n})\nexport class ArmorPickerPageComponent {\n  constructor() {}\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div id=\"container\">\n  <app-settings></app-settings>\n  <app-results></app-results>\n</div>\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div id=\"cluster-container\">\n  <a class=\"returnbutton hide-gt-sm\" color=\"primary\" mat-raised-button routerLink=\"/\">\n    Return to D2ArmorPicker\n  </a>\n  <mat-card appearance=\"outlined\">\n    <mat-card-header>\n      <mat-card-title> About this page </mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      This page <i>can</i> help you to sort out your vault a bit. It takes all your armor entries\n      and tries to sort them into {{ clusterInformation.length }} clusters. It then gives you a DIM\n      search query for each cluster. You can use this to look at similar rolls in your vault and to\n      clean out some of them.\n      <br />\n      <br />\n      Please note that it will cluster all armor for all characters. Make sure to use \"is:titan\",\n      \"is:warlock\" or \"is:hunter\" in DIM.\n      <br />\n      <br />\n      Please also note that this feature is new and may have some inaccuracy for some items.\n    </mat-card-content>\n    <mat-card-header>\n      <mat-card-title> How do I use this page? </mat-card-title>\n    </mat-card-header>\n\n    <mat-card-content>\n      <ol>\n        <li>Pick one of the clusters below.</li>\n        <li>Copy the DIM search query and insert it in the search bar in DIM.</li>\n        <li>\n          If you want, add one of the following to the search query: \"is:titan\", \"is:warlock\",\n          \"is:hunter\" (without \" of course);<br />\n          You can also use \"not:masterwork\", \"not:exotic\" or other filters.\n        </li>\n        <li\n          >Look at all the armor. Just look at it. If you see duplicates, you can look at them and\n          decide which ones to keep.\n        </li>\n      </ol>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card appearance=\"outlined\">\n    <mat-card-header>\n      <mat-card-title>Options</mat-card-title>\n      <mat-card-subtitle> Additional options for the clustering results. </mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-card-content>\n      <div class=\"settings-container\">\n        <span><b>Exotics</b><br />Decide whether you want to see or hide exotics.</span>\n        <span>\n          <mat-button-toggle-group (valueChange)=\"Update()\" [(value)]=\"exoticFilter\">\n            <mat-button-toggle\n              class=\"red\"\n              matTooltip=\"Only select non-exotic armor pieces.\"\n              value=\"-1\"\n              ><mat-icon>visibility_off</mat-icon></mat-button-toggle\n            >\n            <mat-button-toggle\n              class=\"green\"\n              matTooltip=\"Only select exotic  armor pieces.\"\n              value=\"1\"\n              ><mat-icon>visibility</mat-icon></mat-button-toggle\n            >\n            <mat-button-toggle checked value=\"0\">All</mat-button-toggle>\n          </mat-button-toggle-group>\n        </span>\n      </div>\n      <div class=\"settings-container\">\n        <span\n          ><b>Masterwork</b><br />Decide whether you want to see or hide masterworked armor.</span\n        >\n        <span>\n          <mat-button-toggle-group (valueChange)=\"Update()\" [(value)]=\"masterworkFilter\">\n            <mat-button-toggle\n              class=\"red\"\n              matTooltip=\"Only select non-masterworked armor pieces.\"\n              value=\"-1\"\n              ><mat-icon>visibility_off</mat-icon></mat-button-toggle\n            >\n            <mat-button-toggle\n              class=\"green\"\n              matTooltip=\"Only select masterworked armor pieces.\"\n              value=\"1\"\n              ><mat-icon>visibility</mat-icon></mat-button-toggle\n            >\n            <mat-button-toggle checked value=\"0\">All</mat-button-toggle>\n          </mat-button-toggle-group>\n        </span>\n      </div>\n      <div class=\"settings-container\">\n        <span><b>Class</b><br />Decide which class you want to see.</span>\n        <span>\n          <mat-button-toggle-group (valueChange)=\"Update()\" [(value)]=\"classFilter\">\n            <mat-button-toggle matTooltip=\"Titan\" value=\"0\">\n              <svg\n                aria-hidden=\"true\"\n                class=\"svgClassIcon\"\n                focusable=\"false\"\n                viewBox=\"0 0 32 32\"\n                xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"m14.839 15.979-13.178-7.609v15.218zm2.322 0 13.178 7.609v-15.218zm5.485-12.175-6.589-3.804-13.178 7.609 13.178 7.609 13.179-7.609zm0 16.784-6.589-3.805-13.178 7.609 13.178 7.608 13.179-7.608-6.59-3.805z\"\n                  fill=\"currentColor\"></path>\n              </svg>\n            </mat-button-toggle>\n            <mat-button-toggle matTooltip=\"Hunter\" value=\"1\">\n              <svg\n                aria-hidden=\"true\"\n                class=\"svgClassIcon\"\n                focusable=\"false\"\n                viewBox=\"0 0 32 32\"\n                xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"m9.055 10.446 6.945-.023-6.948 10.451 6.948-.024-7.412 11.15h-7.045l7.036-10.428h-7.036l7.032-10.422h-7.032l7.507-11.126 6.95-.024zm13.89 0-6.945-10.446 6.95.024 7.507 11.126h-7.032l7.032 10.422h-7.036l7.036 10.428h-7.045l-7.412-11.15 6.948.024-6.948-10.451z\"\n                  fill=\"currentColor\"></path>\n              </svg>\n            </mat-button-toggle>\n            <mat-button-toggle matTooltip=\"Warlock\" value=\"2\">\n              <svg\n                aria-hidden=\"true\"\n                class=\"svgClassIcon\"\n                focusable=\"false\"\n                viewBox=\"0 0 32 32\"\n                xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"m5.442 23.986 7.255-11.65-2.71-4.322-9.987 15.972zm5.986 0 4.28-6.849-2.717-4.333-6.992 11.182zm7.83-11.611 7.316 11.611h5.426l-10.015-15.972zm-7.26 11.611h8.004l-4.008-6.392zm6.991-11.182-2.703 4.324 4.302 6.858h5.413zm-5.707-.459 2.71-4.331 2.71 4.331-2.703 4.326z\"\n                  fill=\"currentColor\"></path>\n              </svg>\n            </mat-button-toggle>\n\n            <mat-button-toggle checked value=\"-1\">All</mat-button-toggle>\n          </mat-button-toggle-group>\n        </span>\n      </div>\n    </mat-card-content>\n  </mat-card>\n\n  <div\n    class=\"cluster-container\"\n    [style.display]=\"'flex'\"\n    [style.flex-direction]=\"'row'\"\n    [style.gap]=\"'5px'\"\n    [style.flex-fill]=\"1\">\n    <ng-container *ngFor=\"let cluster of clusters; let idx = index\">\n      <mat-card appearance=\"outlined\" *ngIf=\"cluster.length > 0\" class=\"cluster-item\">\n        <mat-card-header>\n          <mat-card-title> Cluster {{ idx + 1 }} </mat-card-title>\n          <mat-card-subtitle>\n            Contains {{ cluster.length }} item{{ cluster.length > 1 ? \"s\" : \"\" }}\n          </mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n          <div>\n            <table width=\"100%\">\n              <ng-container *ngFor=\"let entry of clusterInformation[idx].mean; let idx1 = index\">\n                <tr\n                  *ngIf=\"idx1 > 0\"\n                  [matTooltip]=\"\n                    [\n                      '',\n                      'Mobility',\n                      'Resilience',\n                      'Recovery',\n                      'Discipline',\n                      'Intellect',\n                      'Strength',\n                    ][idx1]\n                  \">\n                  <td>\n                    {{\n                      [\n                        \"\",\n                        \"Mobility\",\n                        \"Resilience\",\n                        \"Recovery\",\n                        \"Discipline\",\n                        \"Intellect\",\n                        \"Strength\",\n                      ][idx1]\n                    }}\n                  </td>\n                  <td width=\"100%\">\n                    <div class=\"stat-range\">\n                      <div\n                        class=\"stat-range-bar\"\n                        [style.width]=\"(clusterInformation[idx].mean[idx1] / 32) * 100 + '%'\"></div>\n                      <span class=\"avg-stat-value\">\n                        {{ clusterInformation[idx].mean[idx1] | number: \"1.0-0\" }}\n                      </span>\n                    </div>\n                  </td>\n                </tr>\n              </ng-container>\n            </table>\n          </div>\n          <mat-form-field appearance=\"fill\" class=\"searchQueryField\">\n            <mat-label>DIM Search Query</mat-label>\n            <input [value]=\"getDIMStringForCluster(cluster)\" matInput readonly type=\"text\" />\n          </mat-form-field>\n          <button\n            (click)=\"openSnackBar('Copied the DIM search query to your clipboard.')\"\n            [cdkCopyToClipboard]=\"getDIMStringForCluster(cluster)\"\n            class=\"copyButton\"\n            color=\"primary\"\n            mat-raised-button\n            matTooltip=\"Use this button to copy a DIM search query to your clip board. It allows you to search the given items in DIM.\">\n            Copy DIM query to clipboard\n          </button>\n        </mat-card-content>\n      </mat-card>\n    </ng-container>\n  </div>\n\n  <a class=\"returnbutton hide-gt-sm\" color=\"primary\" mat-raised-button routerLink=\"/\">\n    Return to D2ArmorPicker\n  </a>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { AfterViewInit, Component } from \"@angular/core\";\nimport { IInventoryArmor, InventoryArmorSource } from \"../../../../data/types/IInventoryArmor\";\nimport { DatabaseService } from \"../../../../services/database.service\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { InventoryService } from \"../../../../services/inventory.service\";\nimport { debounceTime } from \"rxjs/operators\";\nimport { ArmorSlot } from \"../../../../data/enum/armor-slot\";\n\nvar clusterData = [\n  {\n    id: 0,\n    size: 214,\n    centroids: [\n      5.242990654205609, 3.4392523364485994, 23.074766355140188, 4.52336448598131,\n      17.99532710280374, 8.074766355140188,\n    ],\n    std: [\n      3.262185500658884, 3.137958193527344, 2.0745611905196912, 3.223158380401712,\n      2.6478649185881147, 3.356022774004607, 3.3823650213485315,\n    ],\n    mean: [\n      62.350467289719624, 5.242990654205608, 3.439252336448598, 23.074766355140188,\n      4.5233644859813085, 17.99532710280374, 8.074766355140186,\n    ],\n  },\n  {\n    id: 1,\n    size: 264,\n    centroids: [\n      13.613636363636365, 3.060606060606063, 14.431818181818182, 6.731060606060606,\n      12.575757575757574, 10.575757575757576,\n    ],\n    std: [\n      4.915624932359143, 2.735897756946947, 1.897597343200423, 3.036390647550984,\n      3.2253188618447473, 3.0097969617389406, 3.1372197425220545,\n    ],\n    mean: [\n      60.98863636363637, 13.613636363636363, 3.0606060606060606, 14.431818181818182,\n      6.731060606060606, 12.575757575757576, 10.575757575757576,\n    ],\n  },\n  {\n    id: 2,\n    size: 220,\n    centroids: [\n      5.209090909090909, 15.586363636363636, 10.936363636363636, 13.281818181818181,\n      13.604545454545452, 3.8818181818181836,\n    ],\n    std: [\n      3.3631090204013643, 2.931782865076046, 2.9200605883727038, 3.289049973803757,\n      2.6349662061268395, 2.6591750828428204, 2.395703224398619,\n    ],\n    mean: [\n      62.5, 5.209090909090909, 15.586363636363636, 10.936363636363636, 13.281818181818181,\n      13.604545454545455, 3.881818181818182,\n    ],\n  },\n  {\n    id: 3,\n    size: 230,\n    centroids: [\n      8.6, 15.330434782608698, 6.943478260869563, 6.408695652173913, 5.578260869565216,\n      18.26086956521739,\n    ],\n    std: [\n      4.27370926113142, 3.855014315301441, 3.2487061290912984, 3.5081098914433078,\n      3.559587955581114, 3.1761194803539676, 3.596667444705349,\n    ],\n    mean: [\n      61.12173913043478, 8.6, 15.330434782608696, 6.943478260869565, 6.408695652173913,\n      5.578260869565217, 18.26086956521739,\n    ],\n  },\n  {\n    id: 4,\n    size: 261,\n    centroids: [\n      11.74712643678161, 5.655172413793104, 13.873563218390803, 11.022988505747126,\n      16.57088122605364, 3.0038314176245224,\n    ],\n    std: [\n      3.5878146263573103, 2.8197860971981994, 2.9890605143791737, 2.9825309245974925,\n      2.7497287061744258, 2.8324620286123516, 1.8428616632651005,\n    ],\n    mean: [\n      61.87356321839081, 11.74712643678161, 5.655172413793103, 13.873563218390805,\n      11.022988505747126, 16.57088122605364, 3.003831417624521,\n    ],\n  },\n  {\n    id: 5,\n    size: 249,\n    centroids: [\n      6.598393574297189, 7.2289156626506035, 7.674698795180722, 6.831325301204822,\n      5.995983935742974, 7.425702811244981,\n    ],\n    std: [\n      12.188382924990831, 3.7780346472852226, 3.7855581933977014, 3.9659084518463055,\n      3.2508780840166134, 2.4288222155150856, 3.23718036285365,\n    ],\n    mean: [\n      41.75502008032129, 6.598393574297189, 7.228915662650603, 7.674698795180723, 6.831325301204819,\n      5.995983935742972, 7.42570281124498,\n    ],\n  },\n  {\n    id: 6,\n    size: 241,\n    centroids: [\n      4.580912863070541, 10.62655601659751, 15.72199170124481, 20.186721991701248,\n      5.7634854771784205, 4.8672199170124495,\n    ],\n    std: [\n      4.0360666526825675, 2.5776864620318327, 2.726712032141287, 2.7236414380869185,\n      3.4135743182998106, 3.164594939982558, 2.8952195061747896,\n    ],\n    mean: [\n      61.74688796680498, 4.580912863070539, 10.62655601659751, 15.721991701244812,\n      20.186721991701244, 5.763485477178423, 4.867219917012448,\n    ],\n  },\n  {\n    id: 7,\n    size: 352,\n    centroids: [\n      4.96875, 10.849431818181818, 15.676136363636362, 5.085227272727275, 13.079545454545453,\n      12.113636363636365,\n    ],\n    std: [\n      3.864447558701623, 2.876694966732471, 2.825917840642513, 2.8500410080793133,\n      2.604753041986593, 2.753797030174534, 3.084495990290069,\n    ],\n    mean: [\n      61.77272727272727, 4.96875, 10.849431818181818, 15.676136363636363, 5.0852272727272725,\n      13.079545454545455, 12.113636363636363,\n    ],\n  },\n  {\n    id: 8,\n    size: 219,\n    centroids: [\n      21.401826484018265, 4.529680365296804, 4.954337899543379, 14.022831050228312,\n      7.168949771689496, 6.8036529680365305,\n    ],\n    std: [\n      7.654498360234386, 3.856746305047457, 3.0774088630224354, 3.486239910130717,\n      4.509361233853425, 3.691515724130434, 3.433882092856456,\n    ],\n    mean: [\n      58.881278538812786, 21.401826484018265, 4.529680365296803, 4.954337899543379,\n      14.02283105022831, 7.168949771689498, 6.80365296803653,\n    ],\n  },\n  {\n    id: 9,\n    size: 183,\n    centroids: [\n      4.448087431693989, 22.114754098360656, 4.868852459016392, 7.459016393442623,\n      11.240437158469945, 9.765027322404372,\n    ],\n    std: [\n      7.900837110469869, 3.265921971202623, 3.896032191192026, 3.424902708986657,\n      3.3556927380910535, 3.7206143627650876, 3.9564220813839577,\n    ],\n    mean: [\n      59.89617486338798, 4.448087431693989, 22.114754098360656, 4.868852459016393,\n      7.459016393442623, 11.240437158469945, 9.765027322404372,\n    ],\n  },\n  {\n    id: 10,\n    size: 197,\n    centroids: [\n      13.563451776649746, 10.761421319796954, 6.527918781725887, 20.654822335025383,\n      4.934010152284262, 5.18274111675127,\n    ],\n    std: [\n      4.239153654030002, 3.3077343290831713, 2.8924486501981233, 2.9338771160608355,\n      3.5098461495889413, 3.192898794854312, 2.920215710334156,\n    ],\n    mean: [\n      61.6243654822335, 13.563451776649746, 10.761421319796954, 6.527918781725888,\n      20.65482233502538, 4.934010152284264, 5.182741116751269,\n    ],\n  },\n  {\n    id: 11,\n    size: 176,\n    centroids: [\n      8.255681818181818, 16.181818181818183, 7.11931818181818, 4.619318181818182, 21.0625,\n      5.505681818181819,\n    ],\n    std: [\n      3.349621998445128, 3.4620343467651815, 3.3296776490755446, 2.945693532873097,\n      2.7583580190103967, 3.126214049887545, 3.078027492852078,\n    ],\n    mean: [\n      62.74431818181818, 8.255681818181818, 16.181818181818183, 7.119318181818182,\n      4.619318181818182, 21.0625, 5.505681818181818,\n    ],\n  },\n  {\n    id: 12,\n    size: 194,\n    centroids: [\n      3.5670103092783503, 14.773195876288659, 13.036082474226804, 13.185567010309278,\n      4.979381443298967, 12.144329896907218,\n    ],\n    std: [\n      3.89886364980042, 2.255251632823776, 2.5893570716174388, 3.248552824613239,\n      3.1004926799108317, 2.8845824993776903, 2.8864151735009584,\n    ],\n    mean: [\n      61.68556701030928, 3.5670103092783507, 14.77319587628866, 13.036082474226804,\n      13.185567010309278, 4.979381443298969, 12.144329896907216,\n    ],\n  },\n  {\n    id: 13,\n    size: 302,\n    centroids: [\n      5.311258278145695, 4.4701986754966905, 21.897350993377486, 10.688741721854305,\n      6.834437086092715, 12.605960264900663,\n    ],\n    std: [\n      5.1142628152416245, 2.9920946350614983, 2.6882491851253567, 3.071581172564087,\n      2.99431450280505, 3.116626644660552, 2.58548804104293,\n    ],\n    mean: [\n      61.80794701986755, 5.311258278145695, 4.470198675496689, 21.897350993377483,\n      10.688741721854305, 6.8344370860927155, 12.605960264900663,\n    ],\n  },\n  {\n    id: 14,\n    size: 364,\n    centroids: [\n      12.263736263736265, 11.32967032967033, 5.936813186813188, 8.524725274725274,\n      12.07142857142857, 7.782967032967034,\n    ],\n    std: [\n      6.666392881793753, 2.8942239993391565, 2.947866371540881, 3.041289192757803,\n      3.0876888182534996, 2.4540644069260296, 2.6803305558675676,\n    ],\n    mean: [\n      57.90934065934066, 12.263736263736265, 11.32967032967033, 5.936813186813187,\n      8.524725274725276, 12.071428571428571, 7.782967032967033,\n    ],\n  },\n  {\n    id: 15,\n    size: 219,\n    centroids: [\n      6.981735159817351, 5.9908675799086755, 18.127853881278536, 4.97716894977169,\n      5.182648401826483, 20.89041095890411,\n    ],\n    std: [\n      4.3335830659244685, 3.5503759593138464, 3.5270785628911785, 4.123339305032141,\n      2.7998081886699646, 3.283747903424203, 2.8311584355558064,\n    ],\n    mean: [\n      62.15068493150685, 6.981735159817352, 5.9908675799086755, 18.12785388127854,\n      4.9771689497716896, 5.1826484018264845, 20.89041095890411,\n    ],\n  },\n  {\n    id: 16,\n    size: 147,\n    centroids: [\n      6.285714285714285, 20.836734693877553, 4.8639455782312915, 17.510204081632654,\n      5.897959183673469, 7.394557823129253,\n    ],\n    std: [\n      3.358145469360083, 3.4877476344546254, 3.2245649941865486, 3.0557367019327,\n      4.0937094190209065, 3.1136788219952605, 3.842013283457479,\n    ],\n    mean: [\n      62.7891156462585, 6.285714285714286, 20.836734693877553, 4.863945578231292,\n      17.510204081632654, 5.8979591836734695, 7.394557823129252,\n    ],\n  },\n  {\n    id: 17,\n    size: 202,\n    centroids: [\n      18.425742574257423, 6.871287128712871, 6.678217821782177, 5.06930693069307, 20.40594059405941,\n      5.876237623762377,\n    ],\n    std: [\n      3.0226636827682554, 3.292828132097339, 3.518715749263091, 3.4627255810748356,\n      3.075363266145594, 3.5804283293104753, 3.315804113390658,\n    ],\n    mean: [\n      63.32673267326733, 18.425742574257427, 6.871287128712871, 6.678217821782178,\n      5.069306930693069, 20.405940594059405, 5.876237623762377,\n    ],\n  },\n  {\n    id: 18,\n    size: 286,\n    centroids: [\n      11.22027972027972, 7.073426573426573, 12.65034965034965, 12.594405594405593,\n      4.209790209790211, 13.220279720279722,\n    ],\n    std: [\n      4.720510224882134, 2.8685361372318168, 2.6005789112305338, 3.052197922484291,\n      2.451602446915686, 2.7244266014541174, 2.7638787756329526,\n    ],\n    mean: [\n      60.96853146853147, 11.22027972027972, 7.073426573426573, 12.65034965034965,\n      12.594405594405595, 4.20979020979021, 13.22027972027972,\n    ],\n  },\n  {\n    id: 19,\n    size: 197,\n    centroids: [\n      6.263959390862944, 8.568527918781726, 16.80710659898477, 4.000000000000003,\n      22.593908629441625, 4.883248730964468,\n    ],\n    std: [\n      2.7333118141791917, 3.3626657547151964, 3.4540163497542435, 2.646397291854302,\n      2.565469285152567, 3.018237668617547, 2.8287109641017594,\n    ],\n    mean: [\n      63.11675126903553, 6.2639593908629445, 8.568527918781726, 16.80710659898477, 4.0,\n      22.593908629441625, 4.883248730964467,\n    ],\n  },\n  {\n    id: 20,\n    size: 279,\n    centroids: [\n      18.025089605734767, 6.150537634408602, 6.161290322580646, 5.767025089605736,\n      7.999999999999998, 15.602150537634408,\n    ],\n    std: [\n      6.590788110639117, 3.6436721401086296, 3.165505073725202, 3.13700467469825,\n      2.7769973891540207, 3.4672154149710614, 4.017425492621824,\n    ],\n    mean: [\n      59.70609318996416, 18.025089605734767, 6.150537634408602, 6.161290322580645,\n      5.767025089605735, 8.0, 15.602150537634408,\n    ],\n  },\n  {\n    id: 21,\n    size: 78,\n    centroids: [\n      15.96153846153846, 16.85897435897436, 16.807692307692307, 3.552713678800501e-15,\n      5.329070518200751e-15, -5.329070518200751e-15,\n    ],\n    std: [2.095815090231219, 7.438828122504502, 7.482836393563639, 8.12413063050432, 0.0, 0.0, 0.0],\n    mean: [\n      49.62820512820513, 15.961538461538462, 16.858974358974358, 16.807692307692307, 0.0, 0.0, 0.0,\n    ],\n  },\n  {\n    id: 22,\n    size: 137,\n    centroids: [\n      4.525547445255475, 3.583941605839417, 23.532846715328468, 19.948905109489054,\n      4.3576642335766405, 6.248175182481752,\n    ],\n    std: [\n      2.9351806639916567, 2.7575572416084317, 2.2707939003224227, 2.908029186302962,\n      3.3306093063017315, 2.6644092885703916, 3.4848010785869454,\n    ],\n    mean: [\n      62.197080291970806, 4.525547445255475, 3.5839416058394162, 23.532846715328468,\n      19.94890510948905, 4.357664233576642, 6.248175182481752,\n    ],\n  },\n  {\n    id: 23,\n    size: 194,\n    centroids: [\n      13.242268041237114, 3.5103092783505163, 14.675257731958762, 19.55154639175258,\n      6.139175257731957, 5.092783505154641,\n    ],\n    std: [\n      3.810494814771566, 2.886105181640385, 2.0818477512276696, 2.6197152448917316,\n      3.409818599464837, 3.0311357231629183, 2.9733966349516936,\n    ],\n    mean: [\n      62.21134020618557, 13.242268041237113, 3.5103092783505154, 14.675257731958762,\n      19.551546391752577, 6.139175257731959, 5.092783505154639,\n    ],\n  },\n  {\n    id: 24,\n    size: 239,\n    centroids: [\n      5.569037656903766, 5.401673640167365, 20.92468619246862, 13.09205020920502,\n      13.497907949790793, 4.096234309623432,\n    ],\n    std: [\n      3.8502204432228733, 3.071015816571908, 3.081143061480697, 2.79904271710946, 2.169280265760518,\n      2.62802363192924, 2.3450167178621983,\n    ],\n    mean: [\n      62.58158995815899, 5.569037656903766, 5.401673640167364, 20.92468619246862,\n      13.092050209205022, 13.497907949790795, 4.096234309623431,\n    ],\n  },\n];\n\n@Component({\n  selector: \"app-armor-cluster-page\",\n  templateUrl: \"./armor-cluster-page.component.html\",\n  styleUrls: [\"./armor-cluster-page.component.css\"],\n})\nexport class ArmorClusterPageComponent implements AfterViewInit {\n  clusterInformation = clusterData;\n  items: Array<IInventoryArmor> = [];\n  clusters: IInventoryArmor[][] = [];\n\n  exoticFilter: number = 0;\n  masterworkFilter: number = 0;\n  classFilter: number = -1;\n\n  constructor(\n    private db: DatabaseService,\n    private _snackBar: MatSnackBar,\n    private inventory: InventoryService\n  ) {\n    this.clusterInformation = clusterData.sort((a, b) => {\n      return b.mean[3] - a.mean[3];\n    });\n  }\n\n  async ngAfterViewInit(): Promise<void> {\n    this.inventory.inventory.pipe(debounceTime(200)).subscribe(async () => {\n      await this.Update();\n      this.openSnackBar(\"Clusters were updated.\");\n    });\n  }\n\n  public async Update() {\n    var items = (await this.db.inventoryArmor.toArray()).filter(\n      (item) => item.source === InventoryArmorSource.Inventory\n    );\n\n    var clusters: IInventoryArmor[][] = [];\n    for (let i = 0; i < this.clusterInformation.length; i++) {\n      clusters.push([]);\n    }\n\n    for (let item of items) {\n      if (item.slot == ArmorSlot.ArmorSlotClass) continue;\n      if (item.slot == ArmorSlot.ArmorSlotNone) continue; // ignores stasis and halloween masks.\n\n      if (this.classFilter != -1 && item.clazz != this.classFilter) continue;\n      if (this.exoticFilter == -1 && item.isExotic) continue;\n      if (this.exoticFilter == 1 && !item.isExotic) continue;\n      if (this.masterworkFilter == -1 && item.masterworked) continue;\n      if (this.masterworkFilter == 1 && !item.masterworked) continue;\n\n      var clusterId = this.getClusterid(item);\n      clusters[clusterId].push(item);\n    }\n    this.clusters = clusters;\n  }\n\n  openSnackBar(message: string) {\n    this._snackBar.open(message, \"\", {\n      duration: 2500,\n      politeness: \"polite\",\n    });\n  }\n\n  public getDIMStringForCluster(cluster: IInventoryArmor[]) {\n    return cluster.map((d) => `id:'${d.itemInstanceId}'`).join(\" or \");\n  }\n\n  vectorDistance(x: number[], y: number[]) {\n    return Math.sqrt(x.reduce((acc, val, i) => acc + Math.pow(val - y[i], 2), 0));\n  }\n\n  public getClusterid(item: IInventoryArmor): number {\n    var currentDist = Number.MAX_VALUE;\n    var currentId = -1;\n    for (let i = 0; i < this.clusterInformation.length; i++) {\n      const clusterDatum = this.clusterInformation[i];\n      var dist = this.vectorDistance(clusterDatum.mean, [\n        item.mobility +\n          item.resilience +\n          item.recovery +\n          item.discipline +\n          item.intellect +\n          item.strength,\n        item.mobility,\n        item.resilience,\n        item.recovery,\n        item.discipline,\n        item.intellect,\n        item.strength,\n      ]);\n      if (dist < currentDist) {\n        currentDist = dist;\n        currentId = i;\n      }\n    }\n\n    return currentId;\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<mat-card appearance=\"outlined\" id=\"description\">\n  <mat-card-header>\n    <mat-card-title> Armor Investigation </mat-card-title>\n    <mat-card-subtitle> A visualization tool for data scientists. </mat-card-subtitle>\n  </mat-card-header>\n\n  <mat-card-content>\n    This part of the D2ArmorPicker lists all of your armor items. For each armor it shows how it is\n    generated. It shows every used <i>\"plug\"</i>, as well as the intrinsic stats of exotics. For\n    more information about plugs, see\n    <a\n      href=\"https://www.reddit.com/r/DestinyTheGame/comments/mpaopq/how_armor_stats_roll_an_advanced_insight_into/\"\n      target=\"_blank\"\n      >here</a\n    >. Make sure to give the author an upvote for the hard work! <br /><br />\n    Please note that this feature is mainly targeted for data nerds and people interested in the\n    basic stats of armor. It is just a data visualization. Mobile layout and a search function\n    <i>may</i> happen in the future.\n  </mat-card-content>\n  <mat-card-header>\n    <mat-card-title> Filters </mat-card-title>\n    <mat-card-subtitle> Some filters. Nothing fancy but it works. Sorry ;) </mat-card-subtitle>\n  </mat-card-header>\n\n  <mat-card-content>\n    <table>\n      <tr>\n        <td colspan=\"3\">\n          <mat-form-field appearance=\"outline\" subscriptSizing=\"dynamic\">\n            <mat-label>Item Name</mat-label>\n            <input matInput placeholder=\"Stronghold\" [(ngModel)]=\"armorName\" />\n          </mat-form-field>\n        </td>\n        <td colspan=\"3\">\n          <mat-form-field appearance=\"outline\" subscriptSizing=\"dynamic\">\n            <mat-label>Item Hash</mat-label>\n            <input matInput [(ngModel)]=\"armorHash\" />\n          </mat-form-field>\n        </td>\n        <td colspan=\"3\">\n          <mat-form-field appearance=\"outline\" subscriptSizing=\"dynamic\">\n            <mat-label>Item ID</mat-label>\n            <input matInput [(ngModel)]=\"armorId\" />\n          </mat-form-field>\n        </td>\n      </tr>\n      <tr>\n        <td> Mobility: </td>\n        <td> {{ minMobility }}</td>\n        <td>\n          <!-- TODO: The 'tickInterval' property no longer exists -->\n          <mat-slider max=\"32\" min=\"0\" step=\"1\" thumbLabel\n            ><input matSliderThumb [(value)]=\"minMobility\"\n          /></mat-slider>\n        </td>\n\n        <td> Resilience: </td>\n        <td> {{ minResilience }}</td>\n        <td>\n          <!-- TODO: The 'tickInterval' property no longer exists -->\n          <mat-slider max=\"32\" min=\"0\" step=\"1\" thumbLabel\n            ><input matSliderThumb [(value)]=\"minResilience\"\n          /></mat-slider>\n        </td>\n\n        <td> Recovery: </td>\n        <td> {{ minRecovery }}</td>\n        <td>\n          <!-- TODO: The 'tickInterval' property no longer exists -->\n          <mat-slider max=\"32\" min=\"0\" step=\"1\" thumbLabel\n            ><input matSliderThumb [(value)]=\"minRecovery\"\n          /></mat-slider>\n        </td>\n      </tr>\n      <tr>\n        <td> Discipline: </td>\n        <td> {{ minDiscipline }}</td>\n        <td>\n          <!-- TODO: The 'tickInterval' property no longer exists -->\n          <mat-slider max=\"32\" min=\"0\" step=\"1\" thumbLabel\n            ><input matSliderThumb [(value)]=\"minDiscipline\"\n          /></mat-slider>\n        </td>\n        <td> Intellect: </td>\n        <td> {{ minIntellect }}</td>\n        <td>\n          <!-- TODO: The 'tickInterval' property no longer exists -->\n          <mat-slider max=\"32\" min=\"0\" step=\"1\" thumbLabel\n            ><input matSliderThumb [(value)]=\"minIntellect\"\n          /></mat-slider>\n        </td>\n        <td> Strength: </td>\n        <td>{{ minStrength }}</td>\n        <td>\n          <!-- TODO: The 'tickInterval' property no longer exists -->\n          <mat-slider max=\"32\" min=\"0\" step=\"1\" thumbLabel\n            ><input matSliderThumb [(value)]=\"minStrength\"\n          /></mat-slider>\n        </td>\n      </tr>\n      <tr>\n        <td> Any plug >=: </td>\n        <td>{{ anyPlugWithN }}</td>\n        <td>\n          <!-- TODO: The 'tickInterval' property no longer exists -->\n          <mat-slider max=\"17\" min=\"0\" step=\"1\" thumbLabel\n            ><input matSliderThumb [(value)]=\"anyPlugWithN\"\n          /></mat-slider>\n        </td>\n        <td> Any Plug <=: </td>\n        <td>{{ anyPlugBelowN }}</td>\n        <td>\n          <!-- TODO: The 'tickInterval' property no longer exists -->\n          <mat-slider max=\"17\" min=\"0\" step=\"1\" thumbLabel\n            ><input matSliderThumb [(value)]=\"anyPlugBelowN\"\n          /></mat-slider>\n        </td>\n      </tr>\n      <tr>\n        <td> All plugs >=: </td>\n        <td>{{ allPlugsWithN }}</td>\n        <td>\n          <!-- TODO: The 'tickInterval' property no longer exists -->\n          <mat-slider max=\"17\" min=\"0\" step=\"1\" thumbLabel\n            ><input matSliderThumb [(value)]=\"allPlugsWithN\"\n          /></mat-slider>\n        </td>\n        <td> All Plugs <=: </td>\n        <td>{{ allPlugsBelowN }}</td>\n        <td>\n          <!-- TODO: The 'tickInterval' property no longer exists -->\n          <mat-slider max=\"17\" min=\"0\" step=\"1\" thumbLabel\n            ><input matSliderThumb [(value)]=\"allPlugsBelowN\"\n          /></mat-slider>\n        </td>\n      </tr>\n    </table>\n\n    <a mat-raised-button color=\"primary\" (click)=\"updateItems()\">Update</a>&nbsp;\n    <a mat-raised-button color=\"warn\" (click)=\"clear()\">Clear</a>\n  </mat-card-content>\n</mat-card>\n\n<ng-container *ngFor=\"let armorItems of armorItemsPerSlot | keyvalue\">\n  <mat-toolbar>\n    {{ getCategoryName(armorItems.key) }}\n  </mat-toolbar>\n  <br />\n\n  <div\n    class=\"armor-container\"\n    [style.display]=\"'flex'\"\n    [style.display]=\"'flex'\"\n    [style.flex-direction]=\"'row'\"\n    [style.gap]=\"'10px'\">\n    <ng-container *ngFor=\"let armor of armorItems.value; let idx = index\">\n      <mat-card appearance=\"outlined\" class=\"cluster-item\">\n        <mat-card-header>\n          <mat-card-title>\n            {{ armor.name }}\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <table>\n            <tr>\n              <td colspan=\"2\">Hash:</td>\n              <td>\n                <a\n                  alt=\"This armor on data.destinysets.com\"\n                  href=\"https://data.destinysets.com/i/InventoryItem:{{ armor.hash }}\"\n                  target=\"_blank\">\n                  <img\n                    src=\"https://data.destinysets.com/static/media/logo.556bd7bd.svg\"\n                    style=\"width: 15px\" />\n                </a>\n                {{ armor.hash }}</td\n              >\n            </tr>\n            <tr>\n              <td colspan=\"2\">ItemInstanceId:</td>\n              <td>{{ armor.itemInstanceId }}</td>\n            </tr>\n            <tr>\n              <td colspan=\"2\">Sunset?</td>\n              <td>{{ armor.isSunset }}</td>\n            </tr>\n            <tr>\n              <td>Total</td>\n              <td>{{ armor.totalSum }}</td>\n            </tr>\n            <ng-container\n              *ngFor=\"\n                let entry of [\n                  armor.mobility,\n                  armor.resilience,\n                  armor.recovery,\n                  armor.discipline,\n                  armor.intellect,\n                  armor.strength,\n                ];\n                let idx1 = index\n              \">\n              <tr\n                [matTooltip]=\"\n                  ['Mobility', 'Resilience', 'Recovery', 'Discipline', 'Intellect', 'Strength'][\n                    idx1\n                  ]\n                \">\n                <td>\n                  {{\n                    [\"Mobility\", \"Resilience\", \"Recovery\", \"Discipline\", \"Intellect\", \"Strength\"][\n                      idx1\n                    ]\n                  }}\n                </td>\n                <td>{{ armor.totalStats[idx1] | number: \"1.0-0\" }}</td>\n                <td width=\"100%\">\n                  <div class=\"stat-range\">\n                    <div\n                      *ngFor=\"let ci of entry; let id2 = index\"\n                      class=\"stat-range-bar stat-range-bar{{ id2 + (idx1 >= 3 ? 3 : 0) }}\"\n                      [style.width]=\"(ci / 32) * 100 + '%'\"></div>\n                  </div>\n                </td>\n              </tr>\n            </ng-container>\n          </table>\n        </mat-card-content>\n        <mat-card-content>\n          Plugs:\n          <table>\n            <tr>\n              <td>Plug</td>\n              <td>Total</td>\n              <td>Values</td>\n            </tr>\n            <tr *ngFor=\"let plug of armor.statPlugHashes\">\n              <td>\n                <a\n                  alt=\"This plug on data.destinysets.com\"\n                  href=\"https://data.destinysets.com/i/InventoryItem:{{ plug }}\"\n                  target=\"_blank\">\n                  <img\n                    src=\"https://data.destinysets.com/static/media/logo.556bd7bd.svg\"\n                    style=\"width: 15px\" />\n                </a>\n                {{ plug }}</td\n              >\n              <td class=\"plug-sum-col\">{{ getPlugSum(plug) }}</td>\n              <td>{{ getPlugString(plug) }}</td>\n            </tr>\n          </table>\n        </mat-card-content>\n      </mat-card>\n    </ng-container>\n  </div>\n</ng-container>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, takeUntil } from \"rxjs/operators\";\nimport { InventoryService } from \"../../../../services/inventory.service\";\nimport { IInventoryArmor, InventoryArmorSource } from \"../../../../data/types/IInventoryArmor\";\nimport { DatabaseService } from \"../../../../services/database.service\";\nimport { IManifestArmor } from \"../../../../data/types/IManifestArmor\";\nimport { ArmorSlot } from \"../../../../data/enum/armor-slot\";\n\ntype LocalArmorInfo = {\n  isSunset: boolean;\n  slot: ArmorSlot;\n  totalSum: number;\n  totalStats: number[];\n  itemInstanceId: string;\n  mobility: number[];\n  intellect: number[];\n  strength: number[];\n  statPlugHashes: number[];\n  name: string;\n  recovery: number[];\n  discipline: number[];\n  resilience: number[];\n  hash: number;\n};\n\n@Component({\n  selector: \"app-armor-investigation-page\",\n  templateUrl: \"./armor-investigation-page.component.html\",\n  styleUrls: [\"./armor-investigation-page.component.css\"],\n})\nexport class ArmorInvestigationPageComponent implements OnInit, OnDestroy {\n  minMobility: number | null = 0;\n  minResilience: number | null = 0;\n  minRecovery: number | null = 0;\n  minDiscipline: number | null = 0;\n  minIntellect: number | null = 0;\n  minStrength: number | null = 0;\n  anyPlugWithN: number | null = 0;\n  anyPlugBelowN: number | null = 17;\n  allPlugsWithN: number | null = 0;\n  allPlugsBelowN: number | null = 17;\n\n  armorName: string | null = \"\";\n  armorHash: string | null = \"\";\n  armorId: string | null = \"\";\n\n  armorItemsPerSlot: Map<ArmorSlot, LocalArmorInfo[]> = new Map();\n\n  plugData: { [p: string]: IManifestArmor } = {};\n\n  constructor(public inventory: InventoryService, private db: DatabaseService) {}\n\n  ngOnInit(): void {\n    this.inventory.inventory\n      .pipe(debounceTime(10), takeUntil(this.ngUnsubscribe))\n      .subscribe(async () => {\n        this.updateItems();\n      });\n  }\n\n  getPlugString(plugId: number) {\n    var plugInfo = this.plugData[plugId];\n    let info = [0, 0, 0, 0, 0, 0];\n    for (let stat of plugInfo.investmentStats) {\n      switch (stat.statTypeHash) {\n        case 2996146975:\n          info[0] += stat.value;\n          break;\n        case 392767087:\n          info[1] += stat.value;\n          break;\n        case 1943323491:\n          info[2] += stat.value;\n          break;\n        case 1735777505:\n          info[3] += stat.value;\n          break;\n        case 144602215:\n          info[4] += stat.value;\n          break;\n        case 4244567218:\n          info[5] += stat.value;\n          break;\n      }\n    }\n    return \"[\" + info.join(\" \") + \"]\";\n  }\n\n  async updateItems() {\n    let manifestArmor = await this.db.manifestArmor.toArray();\n    const modsData = manifestArmor.filter((d) => d.itemType == 19);\n    let plugData = Object.fromEntries(modsData.map((_) => [_.hash, _]));\n    this.plugData = plugData;\n\n    let armorItems = ((await this.db.inventoryArmor.toArray()) as IInventoryArmor[])\n      .filter((i) => i.source === InventoryArmorSource.Inventory)\n      .sort((a, b) => (\"\" + a.name).localeCompare(b.name))\n      .map((i: IInventoryArmor) => {\n        var result = {\n          name: i.name,\n          hash: i.hash,\n          isSunset: i.isSunset,\n          itemInstanceId: i.itemInstanceId,\n          statPlugHashes: i.statPlugHashes as number[],\n          mobility: [] as number[],\n          resilience: [] as number[],\n          recovery: [] as number[],\n          discipline: [] as number[],\n          intellect: [] as number[],\n          strength: [] as number[],\n          totalStats: [0, 0, 0, 0, 0, 0],\n          totalSum: 0,\n          slot: i.slot,\n        } as LocalArmorInfo;\n        // add stat plugs\n        if (i.statPlugHashes)\n          for (let p of i.statPlugHashes) {\n            var plugInfo = plugData[p as number];\n            for (let stat of plugInfo.investmentStats) {\n              switch (stat.statTypeHash) {\n                case 2996146975:\n                  result.mobility.push(stat.value);\n                  result.totalStats[0] += stat.value;\n                  break;\n                case 392767087:\n                  result.resilience.push(stat.value);\n                  result.totalStats[1] += stat.value;\n                  break;\n                case 1943323491:\n                  result.recovery.push(stat.value);\n                  result.totalStats[2] += stat.value;\n                  break;\n                case 1735777505:\n                  result.discipline.push(stat.value);\n                  result.totalStats[3] += stat.value;\n                  break;\n                case 144602215:\n                  result.intellect.push(stat.value);\n                  result.totalStats[4] += stat.value;\n                  break;\n                case 4244567218:\n                  result.strength.push(stat.value);\n                  result.totalStats[5] += stat.value;\n                  break;\n              }\n            }\n          }\n\n        // Intrinsics\n        if (i.investmentStats) {\n          for (let stat of i.investmentStats) {\n            switch (stat.statTypeHash) {\n              case 2996146975:\n                result.mobility.push(stat.value);\n                result.totalStats[0] += stat.value;\n                break;\n              case 392767087:\n                result.resilience.push(stat.value);\n                result.totalStats[1] += stat.value;\n                break;\n              case 1943323491:\n                result.recovery.push(stat.value);\n                result.totalStats[2] += stat.value;\n                break;\n              case 1735777505:\n                result.discipline.push(stat.value);\n                result.totalStats[3] += stat.value;\n                break;\n              case 144602215:\n                result.intellect.push(stat.value);\n                result.totalStats[4] += stat.value;\n                break;\n              case 4244567218:\n                result.strength.push(stat.value);\n                result.totalStats[5] += stat.value;\n                break;\n            }\n          }\n        }\n\n        for (let s of result.totalStats) result.totalSum += s;\n\n        return result;\n      });\n\n    armorItems = this.filterItems(armorItems);\n\n    this.armorItemsPerSlot = armorItems.reduce((p, v) => {\n      const slot = !v.slot ? 10 : v.slot;\n      if (!p.has(slot)) p.set(slot, []);\n      p.get(slot)?.push(v);\n\n      return p;\n    }, new Map<ArmorSlot, LocalArmorInfo[]>());\n  }\n\n  private ngUnsubscribe = new Subject();\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  getCategoryName(id: number): string {\n    switch (id) {\n      case 1:\n        return \"Helmets\";\n      case 2:\n        return \"Gauntlets\";\n      case 3:\n        return \"Chest Pieces\";\n      case 4:\n        return \"Legs\";\n      case 5:\n        return \"Class Items\";\n    }\n    return \"Unknown Category\";\n  }\n\n  getPlugSum(plugId: number) {\n    var plugInfo = this.plugData[plugId];\n    var total = 0;\n    for (let stat of plugInfo.investmentStats) {\n      switch (stat.statTypeHash) {\n        case 2996146975:\n        case 392767087:\n        case 1943323491:\n        case 1735777505:\n        case 144602215:\n        case 4244567218:\n          total += stat.value;\n          break;\n      }\n    }\n    return total;\n  }\n\n  clear() {\n    this.armorName = \"\";\n    this.armorHash = \"\";\n    this.armorId = \"\";\n\n    this.minMobility = 0;\n    this.minResilience = 0;\n    this.minRecovery = 0;\n    this.minDiscipline = 0;\n    this.minIntellect = 0;\n    this.minStrength = 0;\n\n    this.anyPlugWithN = 0;\n    this.anyPlugBelowN = 17;\n  }\n\n  private filterItems(armorItems: LocalArmorInfo[]) {\n    if (!!this.armorName)\n      armorItems = armorItems.filter((i) => i.name.toLowerCase().indexOf(this.armorName!) > -1);\n    if (!!this.armorHash)\n      armorItems = armorItems.filter((i) => (i.hash || 0).toString().indexOf(this.armorHash!) > -1);\n    if (!!this.armorId)\n      armorItems = armorItems.filter(\n        (i) => (i.itemInstanceId || 0).toString().indexOf(this.armorId!) > -1\n      );\n\n    armorItems = armorItems.filter((i) => i.totalStats[0] >= (this.minMobility || 0));\n    armorItems = armorItems.filter((i) => i.totalStats[1] >= (this.minResilience || 0));\n    armorItems = armorItems.filter((i) => i.totalStats[2] >= (this.minRecovery || 0));\n    armorItems = armorItems.filter((i) => i.totalStats[3] >= (this.minDiscipline || 0));\n    armorItems = armorItems.filter((i) => i.totalStats[4] >= (this.minIntellect || 0));\n    armorItems = armorItems.filter((i) => i.totalStats[5] >= (this.minStrength || 0));\n    if ((this.anyPlugWithN ?? 0) > 0)\n      armorItems = armorItems.filter(\n        (i) =>\n          (i.statPlugHashes || []).filter((pl) => this.getPlugSum(pl) >= (this.anyPlugWithN || 0))\n            .length > 0\n      );\n\n    if ((this.anyPlugBelowN ?? 0) < 17)\n      armorItems = armorItems.filter(\n        (i) =>\n          (i.statPlugHashes || []).filter((pl) => this.getPlugSum(pl) <= (this.anyPlugBelowN || 0))\n            .length > 0\n      );\n\n    if ((this.allPlugsWithN ?? 0) > 0)\n      armorItems = armorItems.filter(\n        (i) =>\n          (i.statPlugHashes || []).filter((pl) => this.getPlugSum(pl) < (this.allPlugsWithN || 0))\n            .length == 0\n      );\n    if ((this.allPlugsBelowN ?? 0) < 17)\n      armorItems = armorItems.filter(\n        (i) =>\n          (i.statPlugHashes || []).filter((pl) => this.getPlugSum(pl) > (this.allPlugsBelowN || 0))\n            .length == 0\n      );\n\n    return armorItems;\n  }\n}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component } from \"@angular/core\";\nimport { DatabaseService } from \"../../../../services/database.service\";\nimport { InventoryService } from \"../../../../services/inventory.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\n\n@Component({\n  selector: \"app-account-config-page\",\n  templateUrl: \"./account-config-page.component.html\",\n  styleUrls: [\"./account-config-page.component.css\"],\n})\nexport class AccountConfigPageComponent {\n  constructor(\n    private db: DatabaseService,\n    public inv: InventoryService,\n    private loginService: AuthService\n  ) {}\n\n  async downloadArmorInformation() {\n    const armor = await this.db.inventoryArmor.toArray();\n\n    const url = window.URL.createObjectURL(new Blob([JSON.stringify(armor, null, 2)]));\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"d2ap_armor.json\");\n    document.body.appendChild(link);\n    link.click();\n  }\n\n  async downloadManifestInformation() {\n    const data = await this.db.manifestArmor.toArray();\n\n    const url = window.URL.createObjectURL(new Blob([JSON.stringify(data, null, 1)]));\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"d2ap_manifest.json\");\n    document.body.appendChild(link);\n    link.click();\n  }\n\n  async resetDatabase() {\n    await this.db.resetDatabase();\n    await this.inv.refreshAll(true, true);\n  }\n\n  async resetEverything() {\n    localStorage.clear();\n    await this.db.resetDatabase();\n    await this.loginService.logout();\n  }\n}\n","<!--\n  ~ Copyright (c) 2023 D2ArmorPicker by Mijago.\n  ~\n  ~ This program is free software: you can redistribute it and/or modify\n  ~ it under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or\n  ~ (at your option) any later version.\n  ~\n  ~ This program is distributed in the hope that it will be useful,\n  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~ GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div id=\"account-config-container\">\n  <a class=\"returnbutton hide-gt-sm\" color=\"primary\" mat-raised-button routerLink=\"/\">\n    Return to D2ArmorPicker\n  </a>\n  <mat-card appearance=\"outlined\">\n    <mat-card-header>\n      <mat-card-title> Account Configuration </mat-card-title>\n      <mat-card-subtitle>\n        The configuration on this page will not be reset when you reset your build settings.\n      </mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-card-content>\n      This will come in a future update. Right now, I just wanted to push the \"Debugging\" section\n      out.\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card appearance=\"outlined\">\n    <mat-card-header>\n      <mat-card-title> Debugging </mat-card-title>\n      <mat-card-subtitle> Some options for debugging purposes. </mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-card-content>\n      If the team asks you to send some specific data, you can find it here:<br />\n      <a\n        (click)=\"downloadArmorInformation()\"\n        class=\"btn-download\"\n        color=\"primary\"\n        mat-raised-button>\n        Download armor information (d2ap_armor.json)\n      </a>\n      <a\n        (click)=\"downloadManifestInformation()\"\n        class=\"btn-download\"\n        color=\"primary\"\n        mat-raised-button>\n        Download manifest information (d2ap_manifest.json)\n      </a>\n      <br />\n      <br />\n\n      If you experience issues with the local database - for example, exotics not being found, try\n      this:<br />\n      <a (click)=\"resetDatabase()\" class=\"btn-download\" color=\"warn\" mat-raised-button>\n        Delete Database </a\n      ><br />\n      If you really want to reset EVERYTHING, use this: <br />\n      <a (click)=\"resetEverything()\" class=\"btn-download\" color=\"warn\" mat-raised-button>\n        Reset the whole application\n      </a>\n    </mat-card-content>\n  </mat-card>\n\n  <a class=\"returnbutton hide-gt-sm\" color=\"primary\" mat-raised-button routerLink=\"/\">\n    Return to D2ArmorPicker\n  </a>\n</div>\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\n\nimport { AppComponent } from \"./app.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { HandleBungieLoginComponent } from \"./components/handle-bungie-login/handle-bungie-login.component\";\nimport { AuthenticatedGuard } from \"./guards/authenticated.guard\";\nimport { NotAuthenticatedGuard } from \"./guards/not-authenticated.guard\";\nimport { AppV2CoreComponent } from \"./components/authenticated-v2/app-v2-core/app-v2-core.component\";\nimport { SettingsComponent } from \"./components/authenticated-v2/settings/settings.component\";\nimport { ResultsComponent } from \"./components/authenticated-v2/results/results.component\";\nimport { DesiredStatSelectionComponent } from \"./components/authenticated-v2/settings/desired-stat-selection/desired-stat-selection.component\";\nimport { StatTierSelectionComponent } from \"./components/authenticated-v2/settings/desired-stat-selection/stat-tier-selection/stat-tier-selection.component\";\nimport { DesiredExoticSelectionComponent } from \"./components/authenticated-v2/settings/desired-exotic-selection/desired-exotic-selection.component\";\nimport { DesiredClassSelectionComponent } from \"./components/authenticated-v2/settings/desired-class-selection/desired-class-selection.component\";\nimport { StatIconComponent } from \"./components/authenticated-v2/components/stat-icon/stat-icon.component\";\nimport { DesiredModLimitSelectionComponent } from \"./components/authenticated-v2/settings/desired-mod-limit-selection/desired-mod-limit-selection.component\";\nimport { DesiredModsSelectionComponent } from \"./components/authenticated-v2/settings/desired-mods-selection/desired-mods-selection.component\";\nimport { VarDirectiveDirective } from \"./components/authenticated-v2/components/var-directive.directive\";\nimport { AdvancedSettingsComponent } from \"./components/authenticated-v2/settings/advanced-settings/advanced-settings.component\";\nimport { LoadAndSaveSettingsComponent } from \"./components/authenticated-v2/settings/load-and-save-settings/load-and-save-settings.component\";\nimport { ConfirmDialogComponent } from \"./components/authenticated-v2/components/confirm-dialog/confirm-dialog.component\";\nimport { ExpandedResultContentComponent } from \"./components/authenticated-v2/results/expanded-result-content/expanded-result-content.component\";\nimport { CountElementInListPipe } from \"./components/authenticated-v2/results/expanded-result-content/count-element-in-list.pipe\";\nimport { ClipboardModule } from \"@angular/cdk/clipboard\";\nimport { IgnoredItemsListComponent } from \"./components/authenticated-v2/settings/ignored-items-list/ignored-items-list.component\";\nimport { HelpPageComponent } from \"./components/authenticated-v2/subpages/help-page/help-page.component\";\nimport { ArmorPickerPageComponent } from \"./components/authenticated-v2/subpages/armor-picker-page/armor-picker-page.component\";\nimport { ArmorClusterPageComponent } from \"./components/authenticated-v2/subpages/armor-cluster-page/armor-cluster-page.component\";\nimport { TableModDisplayComponent } from \"./components/authenticated-v2/results/table-mod-display/table-mod-display.component\";\nimport { SlotLimitationSelectionComponent } from \"./components/authenticated-v2/settings/desired-mod-limit-selection/slot-limitation-selection/slot-limitation-selection.component\";\nimport { ArmorTooltipComponent } from \"./components/authenticated-v2/overlays/armor-tooltip-component/armor-tooltip.component\";\nimport { ItemTooltipRendererDirective } from \"./components/authenticated-v2/overlays/armor-tooltip-component/item-tooltip-renderer.directive\";\nimport { ItemIconComponent } from \"./components/authenticated-v2/components/item-icon/item-icon.component\";\nimport { ArmorInvestigationPageComponent } from \"./components/authenticated-v2/subpages/armor-investigation-page/armor-investigation-page.component\";\nimport { ChangelogDialogComponent } from \"./components/authenticated-v2/components/changelog-dialog/changelog-dialog.component\";\nimport { ChangelogDialogControllerComponent } from \"./components/authenticated-v2/components/changelog-dialog-controller/changelog-dialog-controller.component\";\nimport { ChangelogListComponent } from \"./components/authenticated-v2/components/changelog-list/changelog-list.component\";\nimport { LayoutModule } from \"@angular/cdk/layout\";\nimport { ArmorPerkIconComponent } from \"./components/authenticated-v2/components/armor-perk-icon/armor-perk-icon.component\";\nimport { ExoticPerkTooltipComponent } from \"./components/authenticated-v2/overlays/exotic-perk-tooltip/exotic-perk-tooltip.component\";\nimport { ExoticTooltipDirective } from \"./components/authenticated-v2/overlays/exotic-perk-tooltip/exotic-tooltip.directive\";\nimport { AccountConfigPageComponent } from \"./components/authenticated-v2/subpages/account-config-page/account-config-page.component\";\nimport { ModDescriptionTooltipComponent } from \"./components/authenticated-v2/overlays/mod-description-tooltip/mod-description-tooltip.component\";\nimport { ModTooltipDirective } from \"./components/authenticated-v2/overlays/mod-description-tooltip/mod-tooltip.directive\";\nimport { StatCooldownTooltipComponent } from \"./components/authenticated-v2/overlays/stat-cooldown-tooltip/stat-cooldown-tooltip.component\";\nimport { StatCooldownTooltipDirective } from \"./components/authenticated-v2/overlays/stat-cooldown-tooltip/stat-cooldown-tooltip.directive\";\nimport { SlotLimitationTitleComponent } from \"./components/authenticated-v2/settings/desired-mod-limit-selection/slot-limitation-title/slot-limitation-title.component\";\nimport { CommonMaterialModule } from \"./modules/common-material/common-material.module\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  VendorIdFromItemIdPipe,\n  VendorNamePipe,\n} from \"./components/authenticated-v2/pipes/vendor-name-pipe\";\n\nimport { environment } from \"../environments/environment\";\nimport { H } from \"highlight.run\";\n\nH.init(environment.highlight_project_id, {\n  environment: environment.production\n    ? \"production\"\n    : environment.beta\n      ? \"beta\"\n      : environment.canary\n        ? \"canary\"\n        : \"dev\",\n  tracingOrigins: true,\n  inlineImages: false,\n  version: environment.version,\n  networkRecording: {\n    enabled: true,\n    recordHeadersAndBody: false,\n    urlBlocklist: [\n      \"https://bungie.net/common/destiny2_content/icons/\",\n      \"https://www.bungie.net/img/\",\n    ],\n  },\n});\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: AppV2CoreComponent,\n    canActivate: [AuthenticatedGuard],\n    children: [\n      {\n        path: \"\",\n        component: ArmorPickerPageComponent,\n      },\n      {\n        path: \"help\",\n        component: HelpPageComponent,\n      },\n      {\n        path: \"cluster\",\n        component: ArmorClusterPageComponent,\n      },\n      {\n        path: \"investigate\",\n        component: ArmorInvestigationPageComponent,\n      },\n      {\n        path: \"theory\",\n        // load TheorizerPageModule\n        loadChildren: () =>\n          import(\n            \"./components/authenticated-v2/subpages/theorizer-page/theorizer-page.module\"\n          ).then((m) => m.TheorizerPageModule),\n      },\n      {\n        path: \"account\",\n        component: AccountConfigPageComponent,\n      },\n    ],\n  },\n  //{path: '', component: MainComponent, canActivate: [AuthenticatedGuard]},\n  { path: \"login\", component: LoginComponent, canActivate: [NotAuthenticatedGuard] },\n  { path: \"login-bungie\", component: HandleBungieLoginComponent },\n  { path: \"**\", redirectTo: \"/\" },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HandleBungieLoginComponent,\n    AppV2CoreComponent,\n    SettingsComponent,\n    ResultsComponent,\n    DesiredStatSelectionComponent,\n    StatTierSelectionComponent,\n    DesiredModLimitSelectionComponent,\n    DesiredExoticSelectionComponent,\n    DesiredClassSelectionComponent,\n    StatIconComponent,\n    DesiredModsSelectionComponent,\n    VarDirectiveDirective,\n    AdvancedSettingsComponent,\n    LoadAndSaveSettingsComponent,\n    ConfirmDialogComponent,\n    ExpandedResultContentComponent,\n    CountElementInListPipe,\n    VendorIdFromItemIdPipe,\n    VendorNamePipe,\n    IgnoredItemsListComponent,\n    HelpPageComponent,\n    ArmorPickerPageComponent,\n    ArmorClusterPageComponent,\n    TableModDisplayComponent,\n    SlotLimitationSelectionComponent,\n    ArmorTooltipComponent,\n    ItemTooltipRendererDirective,\n    ItemIconComponent,\n    ArmorInvestigationPageComponent,\n    ChangelogDialogComponent,\n    ChangelogDialogControllerComponent,\n    ChangelogListComponent,\n    ArmorPerkIconComponent,\n    ExoticPerkTooltipComponent,\n    ExoticTooltipDirective,\n    ModTooltipDirective,\n    StatCooldownTooltipDirective,\n    ModDescriptionTooltipComponent,\n    AccountConfigPageComponent,\n    ModDescriptionTooltipComponent,\n    StatCooldownTooltipComponent,\n    SlotLimitationTitleComponent,\n  ],\n  imports: [\n    CommonModule,\n    CommonMaterialModule,\n\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes, { useHash: true }),\n    ClipboardModule,\n    LayoutModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","/*\n * Copyright (c) 2023 D2ArmorPicker by Mijago.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"x_google_ignoreList":[]}